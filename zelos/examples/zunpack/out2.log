Passed generate_config
module_path /workfolder/unpacker/experiments/bin/hw/elf_encrypter/packed/test.static.debian.x86.packed
x86_gdt.set_entry b'\xff\xff\x00\x00\x00\xfb\xcf\x00'
00000000: FF FF 00 00 00 FB CF 00                           ........
x86_gdt.set_entry b'\xff\xff\x00\x00\x00\xf3\xcf\x00'
00000000: FF FF 00 00 00 F3 CF 00                           ........
x86_gdt.set_entry b'\xff\xff\x00\x00\x00\x97\xcf\x00'
00000000: FF FF 00 00 00 97 CF 00                           ........
x86_gdt.set_entry b'\xff\x0f\x00\xf0\xfd\xf3@\x7f'
00000000: FF 0F 00 F0 FD F3 40 7F                           ......@.
Plugins: trace, overlay, runner, syscalllimiter, yarascan
Passed setup
b'080490a0\n'
[main] [INS] [080481e8] pushal   
[main] [INS] [080481e9] mov      ebp, esp                                            ; ebp = 0xff08ee80 -> 0
[main] [INS] [080481eb] sub      esp, 4                                              ; esp = 0xff08ee7c -> 0
[main] [INS] [080481f1] jmp      0x8048259                                           ; jmp(0x8048259)
[main] [INS] [08048259] call     0x80481f6                                           ; call(0x80481f6)
[main] [INS] [080481f6] pop      ebx                                                 ; ebx = 0x804825e -> "Warning."
[main] [INS] [080481f7] mov      dword ptr [ebp - 4], ebx                            ; store(0xff08ee7c,0x804825e) -> "Warning."
[main] [INS] [080481fa] mov      eax, 4                                              ; eax = 0x4
[main] [INS] [080481ff] mov      ecx, ebx                                            ; ecx = 0x804825e -> "Warning."
[main] [INS] [08048201] mov      ebx, 1                                              ; ebx = 0x1
[main] [INS] [08048206] mov      edx, 0x31                                           ; edx = 0x31
[StdOut]: 'b'Warning. This is a crypted binary. Decrypting...\n''
[main] [SYSCALL] write ( fd=0x1 (stdout), buf=0x804825e ("Warning. This is a crypted binary. Decrypting...\n"), count=0x31 ) -> 31
[main] [INS] [0804820b] int      0x80
[main] [INS] [0804820d] mov      ebx, dword ptr [ebp - 4]                            ; ebx = 0x804825e -> "Warning."
[main] [INS] [08048210] add      ebx, 0x64                                           ; ebx = 0x80482c2 -> 8049000
[main] [INS] [08048216] xor      eax, eax                                            ; eax = 0x0
[main] [INS] [08048218] cmp      dword ptr [ebx + eax*8], 0                          ; 0x8049000 vs 0x0
[main] [INS] [0804821f] jne      0x8048249
[main] [INS] [08048249] mov      esi, dword ptr [ebx + eax*8]                        ; esi = 0x8049000 -> 1efa9545
[main] [INS] [0804824c] mov      ecx, dword ptr [ebx + eax*8 + 4]                    ; ecx = 0x2a
[main] [INS] [08048250] xor      byte ptr [esi], 0x16                                ; store(0x8049000,0x16)
[main] [INS] [08048253] inc      esi                                                 ; esi = 0x8049001 -> fe1efa95
[main] [INS] [08048254] loop     0x8048250
[main] [INS] [08048256] inc      eax                                                 ; eax = 0x1
[main] [INS] [08048257] jmp      0x8048218                                           ; jmp(0x8048218)
[main] [INS] [08048221] mov      eax, 4                                              ; eax = 0x4
[main] [INS] [08048226] mov      ebx, dword ptr [ebp - 4]                            ; ebx = 0x804825e -> "Warning."
[main] [INS] [08048229] lea      ecx, [ebx + 0x31]                                   ; ecx = 0x804828f -> "Decrypti"
[main] [INS] [0804822f] mov      ebx, 1                                              ; ebx = 0x1
[main] [INS] [08048234] mov      edx, 0x33                                           ; edx = 0x33
[StdOut]: 'b'Decrypting stage finished. Starting the program...\n''
[main] [SYSCALL] write ( fd=0x1 (stdout), buf=0x804828f ("Decrypting stage finished. Starting the program...\n"), count=0x33 ) -> 33
[main] [INS] [08048239] int      0x80
[main] [INS] [0804823b] add      esp, 4                                              ; esp = 0xff08ee80 -> 0
[main] [INS] [08048241] popal    
[main] [INS] [08048242] mov      eax, 0x80499a0                                      ; eax = 0x80499a0 -> 895eed31
Found Change. to 1 from 0
dumps min 8049000 - 80ad000
write2file: fp /tmp/dump/2bd6393a-2642-46eb-b593-4b4c2968761c/00000000/0000000008049000-00000000080ad000.raw
[main] [INS] [08048247] jmp      eax                                                 ; jmp(0x80499a0)
[main] [INS] [080499a0] <_start>
[main] [INS] [080499a0] xor      ebp, ebp                                            ; ebp = 0x0
[main] [INS] [080499a2] pop      esi                                                 ; esi = 0x1
[main] [INS] [080499a3] mov      ecx, esp                                            ; ecx = 0xff08eea4 -> ff08ef39
[main] [INS] [080499a5] and      esp, 0xfffffff0                                     ; esp = 0xff08eea0 -> 1
[main] [INS] [080499a8] push     eax                                                 ; push(0x80499a0) -> 895eed31
[main] [INS] [080499a9] push     esp                                                 ; push(0xff08ee98) -> ff08ee9c
[main] [INS] [080499aa] push     edx                                                 ; push(0x0)
[main] [INS] [080499ab] call     0x80499d3                                           ; call(0x80499d3)
[main] [INS] [080499d3] mov      ebx, dword ptr [esp]                                ; ebx = 0x80499b0 -> 1650c381
[main] [INS] [080499d6] ret      
[main] [INS] [080499b0] add      ebx, 0x91650                                        ; ebx = 0x80db000 -> 0
[main] [INS] [080499b6] lea      eax, [ebx - 0x90720]                                ; eax = 0x804a8e0 -> 9e85356
[main] [INS] [080499bc] push     eax                                                 ; push(0x804a8e0) -> 9e85356
[main] [INS] [080499bd] lea      eax, [ebx - 0x907c0]                                ; eax = 0x804a840 -> 53565755
[main] [INS] [080499c3] push     eax                                                 ; push(0x804a840) -> 53565755
[main] [INS] [080499c4] push     ecx                                                 ; push(0xff08eea4) -> ff08ef39
[main] [INS] [080499c5] push     esi                                                 ; push(0x1)
[main] [INS] [080499c6] mov      eax, 0x8049b45                                      ; eax = 0x8049b45 -> 4244c8d
[main] [INS] [080499cc] push     eax                                                 ; push(0x8049b45) -> 4244c8d
[main] [INS] [080499cd] call     0x8049de0                                           ; call(0x8049de0)
[main] [INS] [08049de0] <__libc_start_main>
[main] [INS] [08049de0] call     0x8049b81                                           ; call(0x8049b81)
[main] [INS] [08049b81] <__x86.get_pc_thunk.ax>
[main] [INS] [08049b81] mov      eax, dword ptr [esp]                                ; eax = 0x8049de5 -> "	"
[main] [INS] [08049b84] ret      
[main] [INS] [08049de5] add      eax, 0x9121b                                        ; eax = 0x80db000 -> 0
[main] [INS] [08049dea] push     edi                                                 ; push(0x0)
[main] [INS] [08049deb] push     esi                                                 ; push(0x1)
[main] [INS] [08049dec] push     ebx                                                 ; push(0x80db000) -> 0
[main] [INS] [08049ded] sub      esp, 0x70                                           ; esp = 0xff08ee00 -> 0
[main] [INS] [08049df0] mov      edx, 0                                              ; edx = 0x0
[main] [INS] [08049df6] mov      dword ptr [esp + 0xc], eax                          ; store(0xff08ee0c,0x80db000) -> 0
[main] [INS] [08049dfa] xor      eax, eax                                            ; eax = 0x0
[main] [INS] [08049dfc] test     edx, edx                                            ; 0x0 vs 0x0
[main] [INS] [08049dfe] je       0x8049e09
[main] [INS] [08049e09] mov      edi, dword ptr [esp + 0xc]                          ; edi = 0x80db000 -> 0
[main] [INS] [08049e0d] mov      dword ptr [edi + 0xd14], eax                        ; store(0x80dbd14,0x0)
[main] [INS] [08049e13] call     0x80499e0                                           ; call(0x80499e0)
[main] [INS] [080499e0] <_dl_relocate_static_pie>
[main] [INS] [080499e0] ret      
[main] [INS] [08049e18] mov      eax, dword ptr [esp + 0x88]                         ; eax = 0xff08eea4 -> ff08ef39
[main] [INS] [08049e1f] mov      esi, dword ptr [esp + 0x84]                         ; esi = 0x1
[main] [INS] [08049e26] mov      edx, 0x80dc8bc                                      ; edx = 0x80dc8bc -> 0
[main] [INS] [08049e2c] mov      ecx, dword ptr [esp + 0x98]                         ; ecx = 0xff08ee9c -> 80499a0
[main] [INS] [08049e33] lea      eax, [eax + esi*4 + 4]                              ; eax = 0xff08eeac -> ff08ef6d
[main] [INS] [08049e37] mov      dword ptr [edx], eax                                ; store(0x80dc8bc,0xff08eeac) -> ff08ef6d
[main] [INS] [08049e39] mov      edx, 0x80dada8                                      ; edx = 0x80dada8 -> 0
[main] [INS] [08049e3f] mov      dword ptr [edx], ecx                                ; store(0x80dada8,0xff08ee9c) -> 80499a0
[main] [INS] [08049e41] lea      esi, [esi]                                          ; esi = 0x1
[main] [INS] [08049e48] add      eax, 4                                              ; eax = 0xff08eeb0 -> 0
[main] [INS] [08049e4b] mov      edx, dword ptr [eax - 4]                            ; edx = 0xff08ef6d -> "SHELL=bi"
[main] [INS] [08049e4e] test     edx, edx                                            ; 0xff08ef6d vs 0xff08ef6d
[main] [INS] [08049e50] jne      0x8049e48
[main] [INS] [08049e52] sub      esp, 0xc                                            ; esp = 0xff08edf4 -> 0
[main] [INS] [08049e55] push     eax                                                 ; push(0xff08eeb4) -> 3
[main] [INS] [08049e56] call     0x806f5e0                                           ; call(0x806f5e0)
[main] [INS] [0806f5e0] <_dl_aux_init>
[main] [INS] [0806f5e0] call     0x8057ae9                                           ; call(0x8057ae9)
[main] [INS] [08057ae9] <__x86.get_pc_thunk.cx>
[main] [INS] [08057ae9] mov      ecx, dword ptr [esp]                                ; ecx = 0x806f5e5 -> ba1bc181
[main] [INS] [08057aec] ret      
[main] [INS] [0806f5e5] add      ecx, 0x6ba1b                                        ; ecx = 0x80db000 -> 0
[main] [INS] [0806f5eb] push     ebp                                                 ; push(0x0)
[main] [INS] [0806f5ec] push     edi                                                 ; push(0x80db000) -> 0
[main] [INS] [0806f5ed] push     esi                                                 ; push(0x1)
[main] [INS] [0806f5ee] push     ebx                                                 ; push(0x80db000) -> 0
[main] [INS] [0806f5ef] sub      esp, 0x74                                           ; esp = 0xff08ed68 -> 0
[main] [INS] [0806f5f2] mov      eax, dword ptr [esp + 0x88]                         ; eax = 0xff08eeb4 -> 3
[main] [INS] [0806f5f9] mov      dword ptr [esp + 4], eax                            ; store(0xff08ed6c,0xff08eeb4) -> 3
[main] [INS] [0806f5fd] mov      eax, 0x80dcf44                                      ; eax = 0x80dcf44 -> 0
[main] [INS] [0806f603] mov      edx, dword ptr [esp + 4]                            ; edx = 0xff08eeb4 -> 3
[main] [INS] [0806f607] mov      dword ptr [eax], edx                                ; store(0x80dcf44,0xff08eeb4) -> 3
[main] [INS] [0806f609] mov      eax, dword ptr [edx]                                ; eax = 0x3
[main] [INS] [0806f60b] test     eax, eax                                            ; 0x3 vs 0x3
[main] [INS] [0806f60d] je       0x806f871
[main] [INS] [0806f613] mov      ebx, 0x80dcf74                                      ; ebx = 0x80dcf74 -> 0
[main] [INS] [0806f619] mov      edi, dword ptr [ecx + 0x18e4]                       ; edi = 0x0
[main] [INS] [0806f61f] xor      ebp, ebp                                            ; ebp = 0x0
[main] [INS] [0806f621] mov      edx, ebp                                            ; edx = 0x0
[main] [INS] [0806f623] mov      esi, dword ptr [ebx]                                ; esi = 0x0
[main] [INS] [0806f625] mov      dword ptr [esp + 0x2c], edi                         ; store(0xff08ed94,0x0)
[main] [INS] [0806f629] mov      dword ptr [esp + 0x6c], ebx                         ; store(0xff08edd4,0x80dcf74) -> 0
[main] [INS] [0806f62d] mov      ebx, 0x80dcfa0                                      ; ebx = 0x80dcfa0 -> 0
[main] [INS] [0806f633] mov      dword ptr [esp + 0x40], esi                         ; store(0xff08eda8,0x0)
[main] [INS] [0806f637] mov      esi, dword ptr [ecx + 0xa20]                        ; esi = 0x806f5d0 -> 8dc380cd
[main] [INS] [0806f63d] mov      dword ptr [esp + 0x58], ebx                         ; store(0xff08edc0,0x80dcfa0) -> 0
[main] [INS] [0806f641] mov      ebx, dword ptr [ebx]                                ; ebx = 0x0
[main] [INS] [0806f643] mov      dword ptr [esp + 0x38], esi                         ; store(0xff08eda0,0x806f5d0) -> 8dc380cd
[main] [INS] [0806f647] mov      esi, dword ptr [ecx + 0x18e0]                       ; esi = 0x0
[main] [INS] [0806f64d] mov      dword ptr [esp + 0x48], ebx                         ; store(0xff08edb0,0x0)
[main] [INS] [0806f651] mov      ebx, 0x80dcf48                                      ; ebx = 0x80dcf48 -> 0
[main] [INS] [0806f657] mov      dword ptr [esp + 0x28], esi                         ; store(0xff08ed90,0x0)
[main] [INS] [0806f65b] mov      esi, dword ptr [ecx - 0x260]                        ; esi = 0x0
[main] [INS] [0806f661] mov      dword ptr [esp + 0x68], ebx                         ; store(0xff08edd0,0x80dcf48) -> 0
[main] [INS] [0806f665] mov      dword ptr [esp + 0x4c], esi                         ; store(0xff08edb4,0x0)
[main] [INS] [0806f669] mov      esi, 0x80dadac                                      ; esi = 0x80dadac -> 1
[main] [INS] [0806f66f] mov      edi, dword ptr [esi]                                ; edi = 0x1
[main] [INS] [0806f671] mov      dword ptr [esp + 0x54], esi                         ; store(0xff08edbc,0x80dadac) -> 1
[main] [INS] [0806f675] movzx    esi, word ptr [ecx + 0x9e4]                         ; esi = 0x37f
[main] [INS] [0806f67c] mov      dword ptr [esp + 0x44], edi                         ; store(0xff08edac,0x1)
[main] [INS] [0806f680] mov      word ptr [esp + 0x3c], si                           ; store(0xff08eda4,0x37f)
[main] [INS] [0806f685] mov      esi, 0x80dcf6c                                      ; esi = 0x80dcf6c -> 0
[main] [INS] [0806f68b] mov      edi, dword ptr [esi]                                ; edi = 0x0
[main] [INS] [0806f68d] mov      dword ptr [esp + 0x5c], esi                         ; store(0xff08edc4,0x80dcf6c) -> 0
[main] [INS] [0806f691] mov      esi, dword ptr [ecx + 0x18e8]                       ; esi = 0x0
[main] [INS] [0806f697] mov      dword ptr [esp + 0x10], edi                         ; store(0xff08ed78,0x0)
[main] [INS] [0806f69b] mov      edi, dword ptr [ecx + 0x18ec]                       ; edi = 0x0
[main] [INS] [0806f6a1] mov      dword ptr [esp + 0x20], esi                         ; store(0xff08ed88,0x0)
[main] [INS] [0806f6a5] mov      dword ptr [esp + 0x24], edi                         ; store(0xff08ed8c,0x0)
[main] [INS] [0806f6a9] mov      ebx, dword ptr [ebx]                                ; ebx = 0x0
[main] [INS] [0806f6ab] mov      esi, dword ptr [ecx + 0x9f0]                        ; esi = 0x1000
[main] [INS] [0806f6b1] mov      byte ptr [esp + 0x53], 0                            ; store(0xff08edbb,0x0)
[main] [INS] [0806f6b6] mov      dword ptr [esp + 0x30], ebx                         ; store(0xff08ed98,0x0)
[main] [INS] [0806f6ba] mov      ebx, 0x80dcf60                                      ; ebx = 0x80dcf60 -> 0
[main] [INS] [0806f6c0] mov      dword ptr [esp + 0xc], esi                          ; store(0xff08ed74,0x1000)
[main] [INS] [0806f6c4] mov      esi, 0x80dcf80                                      ; esi = 0x80dcf80 -> 0
[main] [INS] [0806f6ca] mov      dword ptr [esp + 0x60], ebx                         ; store(0xff08edc8,0x80dcf60) -> 0
[main] [INS] [0806f6ce] mov      ebx, dword ptr [ebx]                                ; ebx = 0x0
[main] [INS] [0806f6d0] mov      edi, dword ptr [esi]                                ; edi = 0x0
[main] [INS] [0806f6d2] mov      byte ptr [esp + 0x52], 0                            ; store(0xff08edba,0x0)
[main] [INS] [0806f6d7] mov      byte ptr [esp + 0x51], 0                            ; store(0xff08edb9,0x0)
[main] [INS] [0806f6dc] mov      dword ptr [esp + 0x1c], edi                         ; store(0xff08ed84,0x0)
[main] [INS] [0806f6e0] xor      edi, edi                                            ; edi = 0x0
[main] [INS] [0806f6e2] mov      byte ptr [esp + 0x50], 0                            ; store(0xff08edb8,0x0)
[main] [INS] [0806f6e7] mov      byte ptr [esp + 0x3f], 0                            ; store(0xff08eda7,0x0)
[main] [INS] [0806f6ec] mov      byte ptr [esp + 0x3e], 0                            ; store(0xff08eda6,0x0)
[main] [INS] [0806f6f1] mov      byte ptr [esp + 0x37], 0                            ; store(0xff08ed9f,0x0)
[main] [INS] [0806f6f6] mov      byte ptr [esp + 0x36], 0                            ; store(0xff08ed9e,0x0)
[main] [INS] [0806f6fb] mov      byte ptr [esp + 0x35], 0                            ; store(0xff08ed9d,0x0)
[main] [INS] [0806f700] mov      byte ptr [esp + 0x34], 0                            ; store(0xff08ed9c,0x0)
[main] [INS] [0806f705] mov      byte ptr [esp + 0x17], 0                            ; store(0xff08ed7f,0x0)
[main] [INS] [0806f70a] mov      byte ptr [esp + 0x16], 0                            ; store(0xff08ed7e,0x0)
[main] [INS] [0806f70f] mov      dword ptr [esp + 8], edi                            ; store(0xff08ed70,0x0)
[main] [INS] [0806f713] mov      byte ptr [esp + 0x15], dl                           ; store(0xff08ed7d,0x0)
[main] [INS] [0806f717] mov      edx, dword ptr [esp + 4]                            ; edx = 0xff08eeb4 -> 3
[main] [INS] [0806f71b] mov      dword ptr [esp + 0x64], esi                         ; store(0xff08edcc,0x80dcf80) -> 0
[main] [INS] [0806f71f] xor      esi, esi                                            ; esi = 0x0
[main] [INS] [0806f721] mov      dword ptr [esp + 0x18], ebx                         ; store(0xff08ed80,0x0)
[main] [INS] [0806f725] xor      ebx, ebx                                            ; ebx = 0x0
[main] [INS] [0806f727] lea      esi, [esi]                                          ; esi = 0x0
[main] [INS] [0806f72e] nop      
[main] [INS] [0806f730] sub      eax, 3                                              ; eax = 0x0
[main] [INS] [0806f733] cmp      eax, 0x1e                                           ; 0x0 vs 0x1e
[main] [INS] [0806f736] ja       0x806f754
[main] [INS] [0806f738] mov      edi, dword ptr [ecx + eax*4 - 0x2b100]              ; edi = 0xfff94a90
[main] [INS] [0806f73f] add      edi, ecx                                            ; edi = 0x806fa90 -> 8304428b
[main] [INS] [0806f741] jmp      edi                                                 ; jmp(0x806fa90)
[main] [INS] [0806fa90] mov      eax, dword ptr [edx + 4]                            ; eax = 0x8048034 -> 1
[main] [INS] [0806fa93] add      edx, 8                                              ; edx = 0xff08eebc -> 4
[main] [INS] [0806fa96] mov      byte ptr [esp + 0x17], 1                            ; store(0xff08ed7f,0x1)
[main] [INS] [0806fa9b] mov      dword ptr [esp + 0x18], eax                         ; store(0xff08ed80,0x8048034) -> 1
[main] [INS] [0806fa9f] mov      eax, dword ptr [edx]                                ; eax = 0x4
[main] [INS] [0806faa1] test     eax, eax                                            ; 0x4 vs 0x4
[main] [INS] [0806faa3] jne      0x806f730
[main] [INS] [0806f754] add      edx, 8                                              ; edx = 0xff08eec4 -> 5
[main] [INS] [0806f757] mov      eax, dword ptr [edx]                                ; eax = 0x5
[main] [INS] [0806f759] test     eax, eax                                            ; 0x5 vs 0x5
[main] [INS] [0806f75b] jne      0x806f730
[main] [INS] [0806fa68] mov      eax, dword ptr [edx + 4]                            ; eax = 0x8
[main] [INS] [0806fa6b] add      edx, 8                                              ; edx = 0xff08eecc -> 6
[main] [INS] [0806fa6e] mov      byte ptr [esp + 0x34], 1                            ; store(0xff08ed9c,0x1)
[main] [INS] [0806fa73] mov      dword ptr [esp + 0x1c], eax                         ; store(0xff08ed84,0x8)
[main] [INS] [0806fa77] mov      eax, dword ptr [edx]                                ; eax = 0x6
[main] [INS] [0806fa79] test     eax, eax                                            ; 0x6 vs 0x6
[main] [INS] [0806fa7b] jne      0x806f730
[main] [INS] [0806fa30] mov      eax, dword ptr [edx + 4]                            ; eax = 0x1000
[main] [INS] [0806fa33] mov      edi, dword ptr [esp + 0xc]                          ; edi = 0x1000
[main] [INS] [0806fa37] test     eax, eax                                            ; 0x1000 vs 0x1000
[main] [INS] [0806fa39] cmovne   edi, eax                                            ; edi = 0x1000
[main] [INS] [0806fa3c] mov      eax, 1                                              ; eax = 0x1
[main] [INS] [0806fa41] mov      dword ptr [esp + 0xc], edi                          ; store(0xff08ed74,0x1000)
[main] [INS] [0806fa45] movzx    edi, byte ptr [esp + 0x15]                          ; edi = 0x0
[main] [INS] [0806fa4a] cmovne   edi, eax                                            ; edi = 0x1
[main] [INS] [0806fa4d] add      edx, 8                                              ; edx = 0xff08eed4 -> 7
[main] [INS] [0806fa50] mov      eax, edi                                            ; eax = 0x1
[main] [INS] [0806fa52] mov      byte ptr [esp + 0x15], al                           ; store(0xff08ed7d,0x1)
[main] [INS] [0806fa56] mov      eax, dword ptr [edx]                                ; eax = 0x7
[main] [INS] [0806fa58] test     eax, eax                                            ; 0x7 vs 0x7
[main] [INS] [0806fa5a] jne      0x806f730
[main] [INS] [0806fa10] mov      edi, dword ptr [edx + 4]                            ; edi = 0x3e8
[main] [INS] [0806fa13] add      edx, 8                                              ; edx = 0xff08eef4 -> c
[main] [INS] [0806fa16] mov      eax, dword ptr [edx]                                ; eax = 0xc
[main] [INS] [0806fa18] or       ebx, 1                                              ; ebx = 0x1
[main] [INS] [0806fa1b] xor      dword ptr [esp + 8], edi                            ; store(0xff08ed70,0x3e8)
[main] [INS] [0806fa1f] test     eax, eax                                            ; 0xc vs 0xc
[main] [INS] [0806fa21] jne      0x806f730
[main] [INS] [0806f9f0] mov      edi, dword ptr [edx + 4]                            ; edi = 0x3e8
[main] [INS] [0806f9f3] add      edx, 8                                              ; edx = 0xff08eefc -> d
[main] [INS] [0806f9f6] mov      eax, dword ptr [edx]                                ; eax = 0xd
[main] [INS] [0806f9f8] or       ebx, 2                                              ; ebx = 0x3
[main] [INS] [0806f9fb] xor      dword ptr [esp + 8], edi                            ; store(0xff08ed70,0x3e8)
[main] [INS] [0806f9ff] test     eax, eax                                            ; 0xd vs 0xd
[main] [INS] [0806fa01] jne      0x806f730
[main] [INS] [0806f9d0] xor      esi, dword ptr [edx + 4]                            ; esi = 0x3e8
[main] [INS] [0806f9d3] add      edx, 8                                              ; edx = 0xff08ef04 -> e
[main] [INS] [0806f9d6] mov      eax, dword ptr [edx]                                ; eax = 0xe
[main] [INS] [0806f9d8] or       ebx, 4                                              ; ebx = 0x7
[main] [INS] [0806f9db] test     eax, eax                                            ; 0xe vs 0xe
[main] [INS] [0806f9dd] jne      0x806f730
[main] [INS] [0806f9b0] xor      esi, dword ptr [edx + 4]                            ; esi = 0x0
[main] [INS] [0806f9b3] add      edx, 8                                              ; edx = 0xff08ef0c -> 11
[main] [INS] [0806f9b6] mov      eax, dword ptr [edx]                                ; eax = 0x11
[main] [INS] [0806f9b8] or       ebx, 8                                              ; ebx = 0xf
[main] [INS] [0806f9bb] test     eax, eax                                            ; 0x11 vs 0x11
[main] [INS] [0806f9bd] jne      0x806f730
[main] [INS] [0806f940] mov      eax, dword ptr [edx + 4]                            ; eax = 0x64
[main] [INS] [0806f943] add      edx, 8                                              ; edx = 0xff08ef14 -> 10
[main] [INS] [0806f946] mov      byte ptr [esp + 0x16], 1                            ; store(0xff08ed7e,0x1)
[main] [INS] [0806f94b] mov      dword ptr [esp + 0x10], eax                         ; store(0xff08ed78,0x64)
[main] [INS] [0806f94f] mov      eax, dword ptr [edx]                                ; eax = 0x10
[main] [INS] [0806f951] test     eax, eax                                            ; 0x10 vs 0x10
[main] [INS] [0806f953] jne      0x806f730
[main] [INS] [0806f960] mov      edi, dword ptr [edx + 4]                            ; edi = 0x1fb897
[main] [INS] [0806f963] add      edx, 8                                              ; edx = 0xff08ef1c -> 1a
[main] [INS] [0806f966] mov      eax, dword ptr [edx]                                ; eax = 0x1a
[main] [INS] [0806f968] xor      ebp, ebp                                            ; ebp = 0x0
[main] [INS] [0806f96a] mov      dword ptr [esp + 0x24], ebp                         ; store(0xff08ed8c,0x0)
[main] [INS] [0806f96e] mov      dword ptr [esp + 0x20], edi                         ; store(0xff08ed88,0x1fb897)
[main] [INS] [0806f972] mov      byte ptr [esp + 0x36], 1                            ; store(0xff08ed9e,0x1)
[main] [INS] [0806f977] test     eax, eax                                            ; 0x1a vs 0x1a
[main] [INS] [0806f979] jne      0x806f730
[main] [INS] [0806f8c0] mov      edi, dword ptr [edx + 4]                            ; edi = 0x0
[main] [INS] [0806f8c3] add      edx, 8                                              ; edx = 0xff08ef24 -> 19
[main] [INS] [0806f8c6] mov      eax, dword ptr [edx]                                ; eax = 0x19
[main] [INS] [0806f8c8] xor      ebp, ebp                                            ; ebp = 0x0
[main] [INS] [0806f8ca] mov      dword ptr [esp + 0x2c], ebp                         ; store(0xff08ed94,0x0)
[main] [INS] [0806f8ce] mov      dword ptr [esp + 0x28], edi                         ; store(0xff08ed90,0x0)
[main] [INS] [0806f8d2] mov      byte ptr [esp + 0x37], 1                            ; store(0xff08ed9f,0x1)
[main] [INS] [0806f8d7] test     eax, eax                                            ; 0x19 vs 0x19
[main] [INS] [0806f8d9] jne      0x806f730
[main] [INS] [0806f748] mov      eax, dword ptr [edx + 4]                            ; eax = 0x90000050 -> "RANDOMBY"
[main] [INS] [0806f74b] mov      byte ptr [esp + 0x53], 1                            ; store(0xff08edbb,0x1)
[main] [INS] [0806f750] mov      dword ptr [esp + 0x4c], eax                         ; store(0xff08edb4,0x90000050) -> "RANDOMBY"
[main] [INS] [0806f75d] lea      esi, [esi]                                          ; esi = 0x0
[main] [INS] [0806f760] movzx    ebp, byte ptr [esp + 0x15]                          ; ebp = 0x1
[main] [INS] [0806f765] mov      edi, dword ptr [esp + 8]                            ; edi = 0x0
[main] [INS] [0806f769] mov      eax, ebp                                            ; eax = 0x1
[main] [INS] [0806f76b] test     al, al                                              ; 0x1 vs 0x1
[main] [INS] [0806f76d] jne      0x806fab0
[main] [INS] [0806fab0] mov      eax, dword ptr [esp + 0xc]                          ; eax = 0x1000
[main] [INS] [0806fab4] mov      dword ptr [ecx + 0x9f0], eax                        ; store(0x80db9f0,0x1000)
[main] [INS] [0806faba] jmp      0x806f773                                           ; jmp(0x806f773)
[main] [INS] [0806f773] cmp      byte ptr [esp + 0x16], 0                            ; 0x1 vs 0x0
[main] [INS] [0806f778] je       0x806f784
[main] [INS] [0806f77a] mov      eax, dword ptr [esp + 0x5c]                         ; eax = 0x80dcf6c -> 0
[main] [INS] [0806f77e] mov      edx, dword ptr [esp + 0x10]                         ; edx = 0x64
[main] [INS] [0806f782] mov      dword ptr [eax], edx                                ; store(0x80dcf6c,0x64)
[main] [INS] [0806f784] cmp      byte ptr [esp + 0x17], 0                            ; 0x1 vs 0x0
[main] [INS] [0806f789] je       0x806f795
[main] [INS] [0806f78b] mov      eax, dword ptr [esp + 0x60]                         ; eax = 0x80dcf60 -> 0
[main] [INS] [0806f78f] mov      edx, dword ptr [esp + 0x18]                         ; edx = 0x8048034 -> 1
[main] [INS] [0806f793] mov      dword ptr [eax], edx                                ; store(0x80dcf60,0x8048034) -> 1
[main] [INS] [0806f795] cmp      byte ptr [esp + 0x34], 0                            ; 0x1 vs 0x0
[main] [INS] [0806f79a] je       0x806f7a6
[main] [INS] [0806f79c] mov      eax, dword ptr [esp + 0x64]                         ; eax = 0x80dcf80 -> 0
[main] [INS] [0806f7a0] mov      edx, dword ptr [esp + 0x1c]                         ; edx = 0x8
[main] [INS] [0806f7a4] mov      dword ptr [eax], edx                                ; store(0x80dcf80,0x8)
[main] [INS] [0806f7a6] cmp      byte ptr [esp + 0x35], 0                            ; 0x0 vs 0x0
[main] [INS] [0806f7ab] je       0x806f7b7
[main] [INS] [0806f7b7] cmp      byte ptr [esp + 0x36], 0                            ; 0x1 vs 0x0
[main] [INS] [0806f7bc] je       0x806f7d2
[main] [INS] [0806f7be] mov      eax, dword ptr [esp + 0x20]                         ; eax = 0x1fb897
[main] [INS] [0806f7c2] mov      edx, dword ptr [esp + 0x24]                         ; edx = 0x0
[main] [INS] [0806f7c6] mov      dword ptr [ecx + 0x18e8], eax                       ; store(0x80dc8e8,0x1fb897)
[main] [INS] [0806f7cc] mov      dword ptr [ecx + 0x18ec], edx                       ; store(0x80dc8ec,0x0)
[main] [INS] [0806f7d2] cmp      byte ptr [esp + 0x37], 0                            ; 0x1 vs 0x0
[main] [INS] [0806f7d7] je       0x806f7ed
[main] [INS] [0806f7d9] mov      eax, dword ptr [esp + 0x28]                         ; eax = 0x0
[main] [INS] [0806f7dd] mov      edx, dword ptr [esp + 0x2c]                         ; edx = 0x0
[main] [INS] [0806f7e1] mov      dword ptr [ecx + 0x18e0], eax                       ; store(0x80dc8e0,0x0)
[main] [INS] [0806f7e7] mov      dword ptr [ecx + 0x18e4], edx                       ; store(0x80dc8e4,0x0)
[main] [INS] [0806f7ed] cmp      byte ptr [esp + 0x3e], 0                            ; 0x0 vs 0x0
[main] [INS] [0806f7f2] je       0x806f800
[main] [INS] [0806f800] cmp      byte ptr [esp + 0x3f], 0                            ; 0x0 vs 0x0
[main] [INS] [0806f805] je       0x806f811
[main] [INS] [0806f811] cmp      byte ptr [esp + 0x50], 0                            ; 0x0 vs 0x0
[main] [INS] [0806f816] je       0x806f822
[main] [INS] [0806f822] cmp      byte ptr [esp + 0x51], 0                            ; 0x0 vs 0x0
[main] [INS] [0806f827] je       0x806f833
[main] [INS] [0806f833] cmp      byte ptr [esp + 0x52], 0                            ; 0x0 vs 0x0
[main] [INS] [0806f838] je       0x806f844
[main] [INS] [0806f844] cmp      byte ptr [esp + 0x53], 0                            ; 0x1 vs 0x0
[main] [INS] [0806f849] je       0x806f855
[main] [INS] [0806f84b] mov      eax, dword ptr [esp + 0x4c]                         ; eax = 0x90000050 -> "RANDOMBY"
[main] [INS] [0806f84f] mov      dword ptr [ecx - 0x260], eax                        ; store(0x80dada0,0x90000050) -> "RANDOMBY"
[main] [INS] [0806f855] cmp      ebx, 0xf                                            ; 0xf vs 0xf
[main] [INS] [0806f858] jne      0x806f871
[main] [INS] [0806f85a] xor      eax, eax                                            ; eax = 0x0
[main] [INS] [0806f85c] mov      edx, dword ptr [esp + 0x54]                         ; edx = 0x80dadac -> 1
[main] [INS] [0806f860] or       edi, esi                                            ; edi = 0x0
[main] [INS] [0806f862] setne    al                                                  ; al = 0x0
[main] [INS] [0806f865] mov      dword ptr [edx], eax                                ; store(0x80dadac,0x0)
[main] [INS] [0806f867] mov      eax, dword ptr [esp + 0x58]                         ; eax = 0x80dcfa0 -> 0
[main] [INS] [0806f86b] mov      dword ptr [eax], 1                                  ; store(0x80dcfa0,0x1)
[main] [INS] [0806f871] add      esp, 0x74                                           ; esp = 0xff08eddc -> 80db000
[main] [INS] [0806f874] pop      ebx                                                 ; ebx = 0x80db000 -> 0
[main] [INS] [0806f875] pop      esi                                                 ; esi = 0x1
[main] [INS] [0806f876] pop      edi                                                 ; edi = 0x80db000 -> 0
[main] [INS] [0806f877] pop      ebp                                                 ; ebp = 0x0
[main] [INS] [0806f878] ret      
[main] [INS] [08049e5b] add      esp, 0x10                                           ; esp = 0xff08ee00 -> 0
[main] [INS] [08049e5e] mov      esi, dword ptr [esp + 0xc]                          ; esi = 0x80db000 -> 0
[main] [INS] [08049e62] mov      eax, 0x80dcf60                                      ; eax = 0x80dcf60 -> 8048034
[main] [INS] [08049e68] cmp      dword ptr [eax], 0                                  ; 0x8048034 vs 0x0
[main] [INS] [08049e6b] jne      0x8049e99
[main] [INS] [08049e99] mov      esi, dword ptr [esp + 0xc]                          ; esi = 0x80db000 -> 0
[main] [INS] [08049e9d] mov      ebx, esi                                            ; ebx = 0x80db000 -> 0
[main] [INS] [08049e9f] call     0x80702e0                                           ; call(0x80702e0)
[main] [INS] [080702e0] <__libc_init_secure>
[main] [INS] [080702e0] push     esi                                                 ; push(0x80db000) -> 0
[main] [INS] [080702e1] push     ebx                                                 ; push(0x80db000) -> 0
[main] [INS] [080702e2] call     0x80499f0                                           ; call(0x80499f0)
[main] [INS] [080499f0] <__x86.get_pc_thunk.bx>
[main] [INS] [080499f0] mov      ebx, dword ptr [esp]                                ; ebx = 0x80702e7 -> ad19c381
[main] [INS] [080499f3] ret      
[main] [INS] [080702e7] add      ebx, 0x6ad19                                        ; ebx = 0x80db000 -> 0
[main] [INS] [080702ed] sub      esp, 4                                              ; esp = 0xff08edf0 -> 80702e7
[main] [INS] [080702f0] mov      eax, 0x80dcfa0                                      ; eax = 0x80dcfa0 -> 1
[main] [INS] [080702f6] mov      eax, dword ptr [eax]                                ; eax = 0x1
[main] [INS] [080702f8] test     eax, eax                                            ; 0x1 vs 0x1
[main] [INS] [080702fa] je       0x8070308
[main] [INS] [080702fc] add      esp, 4                                              ; esp = 0xff08edf4 -> 80db000
[main] [INS] [080702ff] pop      ebx                                                 ; ebx = 0x80db000 -> 0
[main] [INS] [08070300] pop      esi                                                 ; esi = 0x80db000 -> 0
[main] [INS] [08070301] ret      
[main] [INS] [08049ea4] mov      eax, 0x80dc8bc                                      ; eax = 0x80dc8bc -> ff08eeac
[main] [INS] [08049eaa] sub      esp, 0xc                                            ; esp = 0xff08edf4 -> 80db000
[main] [INS] [08049ead] push     dword ptr [eax]                                     ; push(0xff08eeac) -> ff08ef6d
[main] [INS] [08049eaf] call     0x806f000                                           ; call(0x806f000)
[main] [INS] [0806f000] <__tunables_init>
[main] [INS] [0806f000] call     0x8049b81                                           ; call(0x8049b81)
[main] [INS] [0806f005] add      eax, 0x6bffb                                        ; eax = 0x80db000 -> 0
[main] [INS] [0806f00a] push     ebp                                                 ; push(0x0)
[main] [INS] [0806f00b] push     edi                                                 ; push(0x80db000) -> 0
[main] [INS] [0806f00c] push     esi                                                 ; push(0x80db000) -> 0
[main] [INS] [0806f00d] push     ebx                                                 ; push(0x80db000) -> 0
[main] [INS] [0806f00e] sub      esp, 0x3c                                           ; esp = 0xff08eda0 -> 806f5d0
[main] [INS] [0806f011] mov      dword ptr [esp + 0xc], eax                          ; store(0xff08edac,0x80db000) -> 0
[main] [INS] [0806f015] mov      eax, 0x80dadac                                      ; eax = 0x80dadac -> 0
[main] [INS] [0806f01b] mov      esi, dword ptr [eax]                                ; esi = 0x0
[main] [INS] [0806f01d] mov      dword ptr [esp + 0x18], eax                         ; store(0xff08edb8,0x80dadac) -> 0
[main] [INS] [0806f021] test     esi, esi                                            ; 0x0 vs 0x0
[main] [INS] [0806f023] jne      0x806f500
[main] [INS] [0806f029] lea      esi, [esi]                                          ; esi = 0x0
[main] [INS] [0806f030] mov      eax, dword ptr [esp + 0x50]                         ; eax = 0xff08eeac -> ff08ef6d
[main] [INS] [0806f034] test     eax, eax                                            ; 0xff08eeac vs 0xff08eeac
[main] [INS] [0806f036] je       0x806f16f
[main] [INS] [0806f03c] mov      eax, dword ptr [esp + 0x50]                         ; eax = 0xff08eeac -> ff08ef6d
[main] [INS] [0806f040] mov      ebp, dword ptr [eax]                                ; ebp = 0xff08ef6d -> "SHELL=bi"
[main] [INS] [0806f042] test     ebp, ebp                                            ; 0xff08ef6d vs 0xff08ef6d
[main] [INS] [0806f044] je       0x806f16f
[main] [INS] [0806f04a] mov      eax, dword ptr [esp + 0x50]                         ; eax = 0xff08eeac -> ff08ef6d
[main] [INS] [0806f04e] movzx    ecx, byte ptr [ebp]                                 ; ecx = 0x53
[main] [INS] [0806f052] lea      ebx, [eax + 4]                                      ; ebx = 0xff08eeb0 -> 0
[main] [INS] [0806f055] test     cl, cl                                              ; 0x53 vs 0x53
[main] [INS] [0806f057] je       0x806f1e1
[main] [INS] [0806f05d] cmp      cl, 0x3d                                            ; 0x53 vs 0x3d
[main] [INS] [0806f060] je       0x806f1e1
[main] [INS] [0806f066] xor      eax, eax                                            ; eax = 0x0
[main] [INS] [0806f068] jmp      0x806f075                                           ; jmp(0x806f075)
[main] [INS] [0806f075] add      eax, 1                                              ; eax = 0x1
[main] [INS] [0806f078] movzx    edx, byte ptr [ebp + eax]                           ; edx = 0x48
[main] [INS] [0806f07d] mov      esi, eax                                            ; esi = 0x1
[main] [INS] [0806f07f] test     dl, dl                                              ; 0x48 vs 0x48
[main] [INS] [0806f081] jne      0x806f070
[main] [INS] [0806f070] cmp      dl, 0x3d                                            ; 0x48 vs 0x3d
[main] [INS] [0806f073] je       0x806f083
[main] [INS] [0806f083] test     dl, dl                                              ; 0x3d vs 0x3d
[main] [INS] [0806f085] je       0x806f1c0
[main] [INS] [0806f08b] add      esi, 1                                              ; esi = 0x6
[main] [INS] [0806f08e] mov      dword ptr [esp + 0x10], ebx                         ; store(0xff08edb0,0xff08eeb0) -> 0
[main] [INS] [0806f092] mov      edi, ecx                                            ; edi = 0x53
[main] [INS] [0806f094] lea      eax, [ebp + esi]                                    ; eax = 0xff08ef73 -> "bin/bash"
[main] [INS] [0806f098] mov      dword ptr [esp + 0x1c], eax                         ; store(0xff08edbc,0xff08ef73) -> "bin/bash"
[main] [INS] [0806f09c] test     ebx, ebx                                            ; 0xff08eeb0 vs 0xff08eeb0
[main] [INS] [0806f09e] je       0x806f16f
[main] [INS] [0806f0a4] cmp      cl, 0x47                                            ; 0x53 vs 0x47
[main] [INS] [0806f0a7] jne      0x806f0e1
[main] [INS] [0806f0e1] mov      eax, dword ptr [esp + 0x18]                         ; eax = 0x80dadac -> 0
[main] [INS] [0806f0e5] mov      dword ptr [esp + 4], ebp                            ; store(0xff08eda4,0xff08ef6d) -> "SHELL=bi"
[main] [INS] [0806f0e9] xor      edi, edi                                            ; edi = 0x0
[main] [INS] [0806f0eb] mov      eax, dword ptr [eax]                                ; eax = 0x0
[main] [INS] [0806f0ed] mov      dword ptr [esp + 0x14], eax                         ; store(0xff08edb4,0x0)
[main] [INS] [0806f0f1] mov      eax, dword ptr [esp + 0xc]                          ; eax = 0x80db000 -> 0
[main] [INS] [0806f0f5] lea      esi, [eax - 0x6a0]                                  ; esi = 0x80da960 -> 0
[main] [INS] [0806f0fb] lea      esi, [esi]                                          ; esi = 0x80da960 -> 0
[main] [INS] [0806f0ff] nop      
[main] [INS] [0806f100] cmp      byte ptr [esi], 0                                   ; 0x0 vs 0x0
[main] [INS] [0806f103] jne      0x806f150
[main] [INS] [0806f105] mov      ebx, dword ptr [esi + 8]                            ; ebx = 0x0
[main] [INS] [0806f108] test     ebx, ebx                                            ; 0x0 vs 0x0
[main] [INS] [0806f10a] je       0x806f150
[main] [INS] [0806f150] add      edi, 1                                              ; edi = 0x1
[main] [INS] [0806f153] add      esi, 0x2c                                           ; esi = 0x80da98c -> 0
[main] [INS] [0806f156] cmp      edi, 0x18                                           ; 0x1 vs 0x18
[main] [INS] [0806f159] jne      0x806f100
[main] [INS] [0806f10c] mov      ebp, dword ptr [esp + 4]                            ; ebp = 0xff08ef6d -> "SHELL=bi"
[main] [INS] [0806f110] movzx    edx, byte ptr [ebx]                                 ; edx = 0x4d
[main] [INS] [0806f113] movzx    eax, byte ptr [ebp]                                 ; eax = 0x53
[main] [INS] [0806f117] test     dl, dl                                              ; 0x4d vs 0x4d
[main] [INS] [0806f119] je       0x806f14c
[main] [INS] [0806f11b] test     al, al                                              ; 0x53 vs 0x53
[main] [INS] [0806f11d] je       0x806f150
[main] [INS] [0806f11f] cmp      dl, al                                              ; 0x4d vs 0x53
[main] [INS] [0806f121] jne      0x806f150
[main] [INS] [0806f15b] mov      eax, dword ptr [esp + 0x10]                         ; eax = 0xff08eeb0 -> 0
[main] [INS] [0806f15f] mov      dword ptr [esp + 0x50], eax                         ; store(0xff08edf0,0xff08eeb0) -> 0
[main] [INS] [0806f163] mov      eax, dword ptr [esp + 0x50]                         ; eax = 0xff08eeb0 -> 0
[main] [INS] [0806f167] test     eax, eax                                            ; 0xff08eeb0 vs 0xff08eeb0
[main] [INS] [0806f169] jne      0x806f03c
[main] [INS] [0806f16f] add      esp, 0x3c                                           ; esp = 0xff08eddc -> 80db000
[main] [INS] [0806f172] pop      ebx                                                 ; ebx = 0x80db000 -> 0
[main] [INS] [0806f173] pop      esi                                                 ; esi = 0x80db000 -> 0
[main] [INS] [0806f174] pop      edi                                                 ; edi = 0x80db000 -> 0
[main] [INS] [0806f175] pop      ebp                                                 ; ebp = 0x0
[main] [INS] [0806f176] ret      
[main] [INS] [08049eb4] mov      esi, 0x80dc900                                      ; esi = 0x80dc900 -> 0
[main] [INS] [08049eba] add      esp, 0x10                                           ; esp = 0xff08ee00 -> 0
[main] [INS] [08049ebd] xor      eax, eax                                            ; eax = 0x0
[main] [INS] [08049ebf] mov      dword ptr [esp + 0x1c], 0                           ; store(0xff08ee1c,0x0)
[main] [INS] [08049ec7] cpuid    
[main] [INS] [08049ec9] mov      dword ptr [esp + 0x20], 0                           ; store(0xff08ee20,0x0)
[main] [INS] [08049ed1] mov      dword ptr [esi + 4], eax                            ; store(0x80dc904,0x4)
[main] [INS] [08049ed4] cmp      ebx, 0x756e6547                                     ; 0x68747541 vs 0x756e6547
[main] [INS] [08049eda] jne      0x804a040
[main] [INS] [0804a040] cmp      ebx, 0x68747541                                     ; 0x68747541 vs 0x68747541
[main] [INS] [0804a046] sete     bl                                                  ; bl = 0x1
[main] [INS] [0804a049] cmp      ecx, 0x444d4163                                     ; 0x444d4163 vs 0x444d4163
[main] [INS] [0804a04f] sete     al                                                  ; al = 0x1
[main] [INS] [0804a052] test     bl, al                                              ; 0x1 vs 0x1
[main] [INS] [0804a054] je       0x8049ef8
[main] [INS] [0804a05a] cmp      edx, 0x69746e65                                     ; 0x69746e65 vs 0x69746e65
[main] [INS] [0804a060] jne      0x8049ef8
[main] [INS] [0804a066] lea      ecx, [esp + 0x2c]                                   ; ecx = 0xff08ee2c -> 0
[main] [INS] [0804a06a] lea      edx, [esp + 0x20]                                   ; edx = 0xff08ee20 -> 0
[main] [INS] [0804a06e] lea      eax, [esp + 0x1c]                                   ; eax = 0xff08ee1c -> 0
[main] [INS] [0804a072] sub      esp, 0xc                                            ; esp = 0xff08edf4 -> 80db000
[main] [INS] [0804a075] lea      ebx, [esp + 0x3c]                                   ; ebx = 0xff08ee30 -> 0
[main] [INS] [0804a079] push     ebx                                                 ; push(0xff08ee30) -> 0
[main] [INS] [0804a07a] call     0x8049b90                                           ; call(0x8049b90)
[main] [INS] [08049b90] <get_common_indeces.constprop.1>
[main] [INS] [08049b90] push     ebp                                                 ; push(0x0)
[main] [INS] [08049b91] push     edi                                                 ; push(0x80db000) -> 0
[main] [INS] [08049b92] call     0x804a497                                           ; call(0x804a497)
[main] [INS] [0804a497] <__x86.get_pc_thunk.di>
[main] [INS] [0804a497] mov      edi, dword ptr [esp]                                ; edi = 0x8049b97 -> 1469c781
[main] [INS] [0804a49a] ret      
[main] [INS] [08049b97] add      edi, 0x91469                                        ; edi = 0x80db000 -> 0
[main] [INS] [08049b9d] push     esi                                                 ; push(0x80dc900) -> 0
[main] [INS] [08049b9e] push     ebx                                                 ; push(0xff08ee30) -> 0
[main] [INS] [08049b9f] sub      esp, 0x104                                          ; esp = 0xff08ecd8 -> 0
[main] [INS] [08049ba5] mov      dword ptr [esp], ecx                                ; store(0xff08ecd8,0xff08ee2c) -> 0
[main] [INS] [08049ba8] test     eax, eax                                            ; 0xff08ee1c vs 0xff08ee1c
[main] [INS] [08049baa] je       0x8049d5e
[main] [INS] [08049bb0] mov      edi, 0x80dc900                                      ; edi = 0x80dc900 -> 0
[main] [INS] [08049bb6] mov      esi, eax                                            ; esi = 0xff08ee1c -> 0
[main] [INS] [08049bb8] mov      ebp, edx                                            ; ebp = 0xff08ee20 -> 0
[main] [INS] [08049bba] mov      eax, 1                                              ; eax = 0x1
[main] [INS] [08049bbf] cpuid    
[main] [INS] [08049bc1] mov      dword ptr [edi + 0x14], edx                         ; store(0x80dc914,0x7088100)
[main] [INS] [08049bc4] mov      edx, eax                                            ; edx = 0x663
[main] [INS] [08049bc6] shr      edx, 8                                              ; edx = 0x6
[main] [INS] [08049bc9] mov      dword ptr [edi + 0xc], ebx                          ; store(0x80dc90c,0x800)
[main] [INS] [08049bcc] mov      ebx, dword ptr [esp]                                ; ebx = 0xff08ee2c -> 0
[main] [INS] [08049bcf] and      edx, 0xf                                            ; edx = 0x6
[main] [INS] [08049bd2] mov      dword ptr [edi + 0x10], ecx                         ; store(0x80dc910,0x2182200)
[main] [INS] [08049bd5] mov      ecx, eax                                            ; ecx = 0x663
[main] [INS] [08049bd7] mov      dword ptr [edi + 8], eax                            ; store(0x80dc908,0x663)
[main] [INS] [08049bda] and      ecx, 0xf                                            ; ecx = 0x3
[main] [INS] [08049bdd] mov      dword ptr [esi], edx                                ; store(0xff08ee1c,0x6)
[main] [INS] [08049bdf] mov      edx, eax                                            ; edx = 0x663
[main] [INS] [08049be1] shr      edx, 4                                              ; edx = 0x66
[main] [INS] [08049be4] and      edx, 0xf                                            ; edx = 0x6
[main] [INS] [08049be7] mov      dword ptr [ebp], edx                                ; store(0xff08ee20,0x6)
[main] [INS] [08049bea] mov      edx, eax                                            ; edx = 0x663
[main] [INS] [08049bec] shr      edx, 0xc                                            ; edx = 0x0
[main] [INS] [08049bef] and      edx, 0xf0                                           ; edx = 0x0
[main] [INS] [08049bf5] mov      dword ptr [ebx], edx                                ; store(0xff08ee2c,0x0)
[main] [INS] [08049bf7] mov      edx, dword ptr [esp + 0x118]                        ; edx = 0xff08ee30 -> 0
[main] [INS] [08049bfe] mov      dword ptr [edx], ecx                                ; store(0xff08ee30,0x3)
[main] [INS] [08049c00] cmp      dword ptr [esi], 0xf                                ; 0x6 vs 0xf
[main] [INS] [08049c03] je       0x8049d49
[main] [INS] [08049c09] cmp      dword ptr [edi + 4], 6                              ; 0x4 vs 0x6
[main] [INS] [08049c0d] jle      0x8049c24
[main] [INS] [08049c24] mov      ebx, dword ptr [edi + 0x10]                         ; ebx = 0x2182200
[main] [INS] [08049c27] test     ebx, 0x8000000                                      ; 0x2182200 vs 0x8000000
[main] [INS] [08049c2d] je       0x8049d3e
[main] [INS] [08049d3e] add      esp, 0x104                                          ; esp = 0xff08eddc -> ff08ee30
[main] [INS] [08049d44] pop      ebx                                                 ; ebx = 0xff08ee30 -> 3
[main] [INS] [08049d45] pop      esi                                                 ; esi = 0x80dc900 -> 0
[main] [INS] [08049d46] pop      edi                                                 ; edi = 0x80db000 -> 0
[main] [INS] [08049d47] pop      ebp                                                 ; ebp = 0x0
[main] [INS] [08049d48] ret      
[main] [INS] [0804a07f] mov      eax, 0x80000000                                     ; eax = 0x80000000 -> 0
[main] [INS] [0804a084] add      esp, 0x10                                           ; esp = 0xff08ee00 -> 0
[main] [INS] [0804a087] cpuid    
[main] [INS] [0804a089] cmp      eax, 0x80000000                                     ; 0x8000000a vs 0x80000000
[main] [INS] [0804a08e] jbe      0x804a0ad
[main] [INS] [0804a090] mov      esi, dword ptr [esp + 0xc]                          ; esi = 0x80db000 -> 0
[main] [INS] [0804a094] mov      eax, 0x80000001                                     ; eax = 0x80000001 -> 0
[main] [INS] [0804a099] cpuid    
[main] [INS] [0804a09b] mov      esi, 0x80dc900                                      ; esi = 0x80dc900 -> 0
[main] [INS] [0804a0a1] mov      dword ptr [esi + 0x28], eax                         ; store(0x80dc928,0x663)
[main] [INS] [0804a0a4] mov      dword ptr [esi + 0x2c], ebx                         ; store(0x80dc92c,0x0)
[main] [INS] [0804a0a7] mov      dword ptr [esi + 0x30], ecx                         ; store(0x80dc930,0x1031)
[main] [INS] [0804a0aa] mov      dword ptr [esi + 0x34], edx                         ; store(0x80dc934,0x88000000)
[main] [INS] [0804a0ad] mov      eax, dword ptr [esp + 0xc]                          ; eax = 0x80db000 -> 0
[main] [INS] [0804a0b1] mov      edx, 0x80dc900                                      ; edx = 0x80dc900 -> 0
[main] [INS] [0804a0b7] mov      eax, dword ptr [edx + 0x48]                         ; eax = 0x0
[main] [INS] [0804a0ba] test     al, 0x40                                            ; 0x0 vs 0x40
[main] [INS] [0804a0bc] je       0x804a0ca
[main] [INS] [0804a0ca] cmp      dword ptr [esp + 0x1c], 0x15                        ; 0x6 vs 0x15
[main] [INS] [0804a0cf] je       0x804a3bf
[main] [INS] [0804a0d5] mov      eax, 2                                              ; eax = 0x2
[main] [INS] [0804a0da] jmp      0x8049f10                                           ; jmp(0x8049f10)
[main] [INS] [08049f10] mov      ecx, dword ptr [esp + 0xc]                          ; ecx = 0x80db000 -> 0
[main] [INS] [08049f14] mov      edx, 0x80dc900                                      ; edx = 0x80dc900 -> 0
[main] [INS] [08049f1a] mov      ecx, dword ptr [edx + 0x14]                         ; ecx = 0x7088100
[main] [INS] [08049f1d] test     ch, 1                                               ; 0x81 vs 0x1
[main] [INS] [08049f20] je       0x8049f29
[main] [INS] [08049f22] or       dword ptr [edx + 0x48], 0x4000                      ; store(0x80dc948,0x4000)
[main] [INS] [08049f29] and      ch, 0x80                                            ; ch = 0x80
[main] [INS] [08049f2c] je       0x8049f3f
[main] [INS] [08049f2e] mov      esi, dword ptr [esp + 0xc]                          ; esi = 0x80db000 -> 0
[main] [INS] [08049f32] mov      edx, 0x80dc900                                      ; edx = 0x80dc900 -> 0
[main] [INS] [08049f38] or       dword ptr [edx + 0x48], 0x8000                      ; store(0x80dc948,0x8000)
[main] [INS] [08049f3f] mov      edi, dword ptr [esp + 0xc]                          ; edi = 0x80db000 -> 0
[main] [INS] [08049f43] mov      edx, dword ptr [esp + 0x1c]                         ; edx = 0x6
[main] [INS] [08049f47] mov      esi, 0x80dc900                                      ; esi = 0x80dc900 -> 0
[main] [INS] [08049f4d] mov      ebx, edi                                            ; ebx = 0x80db000 -> 0
[main] [INS] [08049f4f] mov      dword ptr [esi + 0x38], edx                         ; store(0x80dc938,0x6)
[main] [INS] [08049f52] mov      edx, dword ptr [esp + 0x20]                         ; edx = 0x6
[main] [INS] [08049f56] mov      dword ptr [esi], eax                                ; store(0x80dc900,0x2)
[main] [INS] [08049f58] mov      dword ptr [esi + 0x3c], edx                         ; store(0x80dc93c,0x6)
[main] [INS] [08049f5b] push     eax                                                 ; push(0x2)
[main] [INS] [08049f5c] lea      eax, [edi - 0x6ac40]                                ; eax = 0x80703c0 -> 53565755
[main] [INS] [08049f62] push     eax                                                 ; push(0x80703c0) -> 53565755
[main] [INS] [08049f63] lea      eax, [esp + 0x3c]                                   ; eax = 0xff08ee34 -> 0
[main] [INS] [08049f67] push     eax                                                 ; push(0xff08ee34) -> 0
[main] [INS] [08049f68] push     0                                                   ; push(0x0)
[main] [INS] [08049f6a] call     0x806f550                                           ; call(0x806f550)
[main] [INS] [0806f550] <__tunable_get_val>
[main] [INS] [0806f550] call     0x8057ae9                                           ; call(0x8057ae9)
[main] [INS] [0806f555] add      ecx, 0x6baab                                        ; ecx = 0x80db000 -> 0
[main] [INS] [0806f55b] push     ebp                                                 ; push(0x0)
[main] [INS] [0806f55c] push     edi                                                 ; push(0x80db000) -> 0
[main] [INS] [0806f55d] push     esi                                                 ; push(0x80dc900) -> 2
[main] [INS] [0806f55e] push     ebx                                                 ; push(0x80db000) -> 0
[main] [INS] [0806f55f] mov      eax, dword ptr [esp + 0x14]                         ; eax = 0x0
[main] [INS] [0806f563] mov      esi, dword ptr [esp + 0x18]                         ; esi = 0xff08ee34 -> 0
[main] [INS] [0806f567] mov      ebx, dword ptr [esp + 0x1c]                         ; ebx = 0x80703c0 -> 53565755
[main] [INS] [0806f56b] imul     edx, eax, 0x2c
[main] [INS] [0806f56e] lea      edi, [ecx + edx - 0x6c0]                            ; edi = 0x80da940 -> 80afbcc
[main] [INS] [0806f575] mov      edx, dword ptr [edi + 4]                            ; edx = 0x3
[main] [INS] [0806f578] cmp      edx, 1                                              ; 0x3 vs 0x1
[main] [INS] [0806f57b] je       0x806f5c0
[main] [INS] [0806f57d] test     edx, edx                                            ; 0x3 vs 0x3
[main] [INS] [0806f57f] je       0x806f5b8
[main] [INS] [0806f581] mov      edx, dword ptr [edi + 0x18]                         ; edx = 0x0
[main] [INS] [0806f584] mov      dword ptr [esi], edx                                ; store(0xff08ee34,0x0)
[main] [INS] [0806f586] imul     eax, eax, 0x2c
[main] [INS] [0806f589] lea      edx, [ecx - 0x6c0]                                  ; edx = 0x80da940 -> 80afbcc
[main] [INS] [0806f58f] cmp      byte ptr [eax + ecx - 0x6a0], 0                     ; 0x0 vs 0x0
[main] [INS] [0806f597] je       0x806f5b0
[main] [INS] [0806f5b0] pop      ebx                                                 ; ebx = 0x80db000 -> 0
[main] [INS] [0806f5b1] pop      esi                                                 ; esi = 0x80dc900 -> 2
[main] [INS] [0806f5b2] pop      edi                                                 ; edi = 0x80db000 -> 0
[main] [INS] [0806f5b3] pop      ebp                                                 ; ebp = 0x0
[main] [INS] [0806f5b4] ret      
[main] [INS] [08049f6f] add      esp, 0xc                                            ; esp = 0xff08edfc -> 2
[main] [INS] [08049f72] push     0                                                   ; push(0x0)
[main] [INS] [08049f74] lea      eax, [esp + 0x40]                                   ; eax = 0xff08ee38 -> 0
[main] [INS] [08049f78] push     eax                                                 ; push(0xff08ee38) -> 0
[main] [INS] [08049f79] push     0xd                                                 ; push(0xd)
[main] [INS] [08049f7b] call     0x806f550                                           ; call(0x806f550)
[main] [INS] [08049f80] add      esp, 0xc                                            ; esp = 0xff08edfc -> 2
[main] [INS] [08049f83] mov      eax, dword ptr [esp + 0x3c]                         ; eax = 0x0
[main] [INS] [08049f87] mov      dword ptr [esi + 0x54], eax                         ; store(0x80dc954,0x0)
[main] [INS] [08049f8a] push     0                                                   ; push(0x0)
[main] [INS] [08049f8c] lea      eax, [esp + 0x44]                                   ; eax = 0xff08ee3c -> 0
[main] [INS] [08049f90] push     eax                                                 ; push(0xff08ee3c) -> 0
[main] [INS] [08049f91] push     0x15                                                ; push(0x15)
[main] [INS] [08049f93] call     0x806f550                                           ; call(0x806f550)
[main] [INS] [08049f98] add      esp, 0xc                                            ; esp = 0xff08edfc -> 2
[main] [INS] [08049f9b] mov      eax, dword ptr [esp + 0x40]                         ; eax = 0x0
[main] [INS] [08049f9f] mov      dword ptr [esi + 0x4c], eax                         ; store(0x80dc94c,0x0)
[main] [INS] [08049fa2] push     0                                                   ; push(0x0)
[main] [INS] [08049fa4] lea      eax, [esp + 0x48]                                   ; eax = 0xff08ee40 -> 0
[main] [INS] [08049fa8] push     eax                                                 ; push(0xff08ee40) -> 0
[main] [INS] [08049fa9] push     0xe                                                 ; push(0xe)
[main] [INS] [08049fab] call     0x806f550                                           ; call(0x806f550)
[main] [INS] [08049fb0] add      esp, 0x10                                           ; esp = 0xff08ee00 -> 0
[main] [INS] [08049fb3] mov      eax, dword ptr [esp + 0x40]                         ; eax = 0x0
[main] [INS] [08049fb7] mov      dword ptr [esi + 0x50], eax                         ; store(0x80dc950,0x0)
[main] [INS] [08049fba] mov      eax, 0x80dc8e8                                      ; eax = 0x80dc8e8 -> 1fb897
[main] [INS] [08049fc0] mov      dword ptr [eax], 0                                  ; store(0x80dc8e8,0x0)
[main] [INS] [08049fc6] mov      dword ptr [eax + 4], 0                              ; store(0x80dc8ec,0x0)
[main] [INS] [08049fcd] test     byte ptr [esi + 0x17], 4                            ; 0x7 vs 0x4
[main] [INS] [08049fd1] je       0x8049fe0
[main] [INS] [08049fd3] mov      dword ptr [eax], 1                                  ; store(0x80dc8e8,0x1)
[main] [INS] [08049fd9] mov      dword ptr [eax + 4], 0                              ; store(0x80dc8ec,0x0)
[main] [INS] [08049fe0] mov      ecx, dword ptr [esp + 0xc]                          ; ecx = 0x80db000 -> 0
[main] [INS] [08049fe4] mov      eax, 0x80dc900                                      ; eax = 0x80dc900 -> 2
[main] [INS] [08049fea] mov      eax, dword ptr [eax + 0x48]                         ; eax = 0xc000
[main] [INS] [08049fed] test     ah, 0x80                                            ; 0xc0 vs 0x80
[main] [INS] [08049ff0] je       0x804a29e
[main] [INS] [08049ff6] mov      eax, 0x80dcf48                                      ; eax = 0x80dcf48 -> 0
[main] [INS] [08049ffc] lea      edx, [ecx - 0x2dfbf]                                ; edx = 0x80ad041 -> "i686"
[main] [INS] [0804a002] mov      dword ptr [eax], edx                                ; store(0x80dcf48,0x80ad041) -> "i686"
[main] [INS] [0804a004] mov      eax, dword ptr [esp + 0xc]                          ; eax = 0x80db000 -> 0
[main] [INS] [0804a008] mov      ebx, 0x8048178                                      ; ebx = 0x8048178 -> 80db040
[main] [INS] [0804a00e] mov      edi, 0x80481e8                                      ; edi = 0x80481e8 -> 81e58960
[main] [INS] [0804a014] jmp      0x804a01d                                           ; jmp(0x804a01d)
[main] [INS] [0804a01d] cmp      ebx, edi                                            ; 0x8048178 vs 0x80481e8
[main] [INS] [0804a01f] jae      0x804a100
[main] [INS] [0804a025] cmp      byte ptr [ebx + 4], 0x2a                            ; 0x2a vs 0x2a
[main] [INS] [0804a029] mov      esi, dword ptr [ebx]                                ; esi = 0x80db040 -> 805e720
[main] [INS] [0804a02b] je       0x804a016
[main] [INS] [0804a016] call     dword ptr [esi]                                     ; call(0x805e720)
[main] [INS] [0805e720] <strchr_ifunc>
[main] [INS] [0805e720] call     0x8050fc6                                           ; call(0x8050fc6)
[main] [INS] [08050fc6] <__x86.get_pc_thunk.dx>
[main] [INS] [08050fc6] mov      edx, dword ptr [esp]                                ; edx = 0x805e725 -> c8dbc281
[main] [INS] [08050fc9] ret      
[main] [INS] [0805e725] add      edx, 0x7c8db                                        ; edx = 0x80db000 -> 0
[main] [INS] [0805e72b] mov      ecx, 0x80dc900                                      ; ecx = 0x80dc900 -> 2
[main] [INS] [0805e731] lea      eax, [edx - 0x6fde0]                                ; eax = 0x806b220 -> 55535657
[main] [INS] [0805e737] test     byte ptr [ecx + 0x17], 4                            ; 0x7 vs 0x4
[main] [INS] [0805e73b] je       0x805e750
[main] [INS] [0805e73d] lea      eax, [edx - 0x73910]                                ; eax = 0x80676f0 -> 244c8b57
[main] [INS] [0805e743] test     byte ptr [ecx + 0x48], 4                            ; 0x0 vs 0x4
[main] [INS] [0805e747] lea      edx, [edx - 0x73530]                                ; edx = 0x8067ad0 -> 244c8b57
[main] [INS] [0805e74d] cmove    eax, edx                                            ; eax = 0x8067ad0 -> 244c8b57
[main] [INS] [0805e750] ret      
[main] [INS] [0804a018] add      ebx, 8                                              ; ebx = 0x8048180 -> 80db03c
[main] [INS] [0804a01b] mov      dword ptr [esi], eax                                ; store(0x80db040,0x8067ad0) -> 244c8b57
[main] [INS] [080a20b0] <strspn_ifunc>
[main] [INS] [080a20b0] call     0x8050fc6                                           ; call(0x8050fc6)
[main] [INS] [080a20b5] add      edx, 0x38f4b                                        ; edx = 0x80db000 -> 0
[main] [INS] [080a20bb] push     ebx                                                 ; push(0x8048180) -> 80db03c
[main] [INS] [080a20bc] mov      ebx, 0x80dc900                                      ; ebx = 0x80dc900 -> 2
[main] [INS] [080a20c2] lea      ecx, [edx - 0x38ed0]                                ; ecx = 0x80a2130 -> 53565755
[main] [INS] [080a20c8] lea      eax, [edx - 0x38d90]                                ; eax = 0x80a2270 -> 424548b
[main] [INS] [080a20ce] test     byte ptr [ebx + 0x12], 0x10                         ; 0x18 vs 0x10
[main] [INS] [080a20d2] pop      ebx                                                 ; ebx = 0x8048180 -> 80db03c
[main] [INS] [080a20d3] cmovne   eax, ecx                                            ; eax = 0x80a2130 -> 53565755
[main] [INS] [080a20d6] ret      
[main] [INS] [0805e7e0] <strcspn_ifunc>
[main] [INS] [0805e7e0] call     0x8050fc6                                           ; call(0x8050fc6)
[main] [INS] [0805e7e5] add      edx, 0x7c81b                                        ; edx = 0x80db000 -> 0
[main] [INS] [0805e7eb] push     ebx                                                 ; push(0x8048188) -> 80db038
[main] [INS] [0805e7ec] mov      ebx, 0x80dc900                                      ; ebx = 0x80dc900 -> 2
[main] [INS] [0805e7f2] lea      ecx, [edx - 0x70470]                                ; ecx = 0x806ab90 -> 53565755
[main] [INS] [0805e7f8] lea      eax, [edx - 0x6fb60]                                ; eax = 0x806b4a0 -> 424548b
[main] [INS] [0805e7fe] test     byte ptr [ebx + 0x12], 0x10                         ; 0x18 vs 0x10
[main] [INS] [0805e802] pop      ebx                                                 ; ebx = 0x8048188 -> 80db038
[main] [INS] [0805e803] cmovne   eax, ecx                                            ; eax = 0x806ab90 -> 53565755
[main] [INS] [0805e806] ret      
[main] [INS] [0805e760] <strcmp_ifunc>
[main] [INS] [0805e760] call     0x8050fc6                                           ; call(0x8050fc6)
[main] [INS] [0805e765] add      edx, 0x7c89b                                        ; edx = 0x80db000 -> 0
[main] [INS] [0805e76b] mov      eax, 0x80dc900                                      ; eax = 0x80dc900 -> 2
[main] [INS] [0805e771] mov      ecx, dword ptr [eax + 0x10]                         ; ecx = 0x2182200
[main] [INS] [0805e774] lea      eax, [edx - 0x79b80]                                ; eax = 0x8061480 -> 424548b
[main] [INS] [0805e77a] test     ecx, 0x100000                                       ; 0x2182200 vs 0x100000
[main] [INS] [0805e780] jne      0x805e794
[main] [INS] [0805e794] ret      
[main] [INS] [0805f1c0] <memset_ifunc>
[main] [INS] [0805f1c0] call     0x8050fc6                                           ; call(0x8050fc6)
[main] [INS] [0805f1c5] add      edx, 0x7be3b                                        ; edx = 0x80db000 -> 0
[main] [INS] [0805f1cb] mov      ecx, 0x80dc900                                      ; ecx = 0x80dc900 -> 2
[main] [INS] [0805f1d1] lea      eax, [edx - 0x6fe30]                                ; eax = 0x806b1d0 -> 548b57fc
[main] [INS] [0805f1d7] test     byte ptr [ecx + 0x17], 4                            ; 0x7 vs 0x4
[main] [INS] [0805f1db] je       0x805f1f0
[main] [INS] [0805f1dd] lea      eax, [edx - 0x7b570]                                ; eax = 0x805fa90 -> 244c8b53
[main] [INS] [0805f1e3] test     byte ptr [ecx + 0x48], 1                            ; 0x0 vs 0x1
[main] [INS] [0805f1e7] lea      edx, [edx - 0x7bbe0]                                ; edx = 0x805f420 -> 244c8b53
[main] [INS] [0805f1ed] cmove    eax, edx                                            ; eax = 0x805f420 -> 244c8b53
[main] [INS] [0805f1f0] ret      
[main] [INS] [0805f240] <__strcasecmp_l_ifunc>
[main] [INS] [0805f240] call     0x8050fc6                                           ; call(0x8050fc6)
[main] [INS] [0805f245] add      edx, 0x7bdbb                                        ; edx = 0x80db000 -> 0
[main] [INS] [0805f24b] mov      eax, 0x80dc900                                      ; eax = 0x80dc900 -> 2
[main] [INS] [0805f251] mov      ecx, dword ptr [eax + 0x10]                         ; ecx = 0x2182200
[main] [INS] [0805f254] lea      eax, [edx - 0x70940]                                ; eax = 0x806a6c0 -> c24448b
[main] [INS] [0805f25a] test     ecx, 0x100000                                       ; 0x2182200 vs 0x100000
[main] [INS] [0805f260] jne      0x805f274
[main] [INS] [0805f274] ret      
[main] [INS] [0805f180] <memcmp_ifunc>
[main] [INS] [0805f180] call     0x8050fc6                                           ; call(0x8050fc6)
[main] [INS] [0805f185] add      edx, 0x7be7b                                        ; edx = 0x80db000 -> 0
[main] [INS] [0805f18b] mov      eax, 0x80dc900                                      ; eax = 0x80dc900 -> 2
[main] [INS] [0805f191] mov      ecx, dword ptr [eax + 0x10]                         ; ecx = 0x2182200
[main] [INS] [0805f194] lea      eax, [edx - 0x78160]                                ; eax = 0x8062ea0 -> 424448b
[main] [INS] [0805f19a] test     ecx, 0x100000                                       ; 0x2182200 vs 0x100000
[main] [INS] [0805f1a0] jne      0x805f1b4
[main] [INS] [0805f1b4] ret      
[main] [INS] [08090500] <__memchr_ifunc>
[main] [INS] [08090500] call     0x8050fc6                                           ; call(0x8050fc6)
[main] [INS] [08090505] add      edx, 0x4aafb                                        ; edx = 0x80db000 -> 0
[main] [INS] [0809050b] mov      ecx, 0x80dc900                                      ; ecx = 0x80dc900 -> 2
[main] [INS] [08090511] lea      eax, [edx - 0x48810]                                ; eax = 0x80927f0 -> 448b5756
[main] [INS] [08090517] test     byte ptr [ecx + 0x17], 4                            ; 0x7 vs 0x4
[main] [INS] [0809051b] je       0x8090530
[main] [INS] [0809051d] lea      eax, [edx - 0x49900]                                ; eax = 0x8091700 -> 244c8b57
[main] [INS] [08090523] test     byte ptr [ecx + 0x48], 4                            ; 0x0 vs 0x4
[main] [INS] [08090527] lea      edx, [edx - 0x49390]                                ; edx = 0x8091c70 -> 4244c8b
[main] [INS] [0809052d] cmove    eax, edx                                            ; eax = 0x8091c70 -> 4244c8b
[main] [INS] [08090530] ret      
[main] [INS] [0805f200] <__stpcpy_ifunc>
[main] [INS] [0805f200] call     0x8050fc6                                           ; call(0x8050fc6)
[main] [INS] [0805f205] add      edx, 0x7bdfb                                        ; edx = 0x80db000 -> 0
[main] [INS] [0805f20b] mov      ecx, 0x80dc900                                      ; ecx = 0x80dc900 -> 2
[main] [INS] [0805f211] test     byte ptr [ecx + 0x17], 4                            ; 0x7 vs 0x4
[main] [INS] [0805f215] je       0x805f223
[main] [INS] [0805f217] lea      eax, [edx - 0x73f20]                                ; eax = 0x80670e0 -> 424548b
[main] [INS] [0805f21d] test     byte ptr [ecx + 0x48], 1                            ; 0x0 vs 0x1
[main] [INS] [0805f221] jne      0x805f236
[main] [INS] [0805f223] lea      eax, [edx - 0x6f9f0]                                ; eax = 0x806b610 -> 8b535657
[main] [INS] [0805f229] test     byte ptr [ecx + 0x11], 2                            ; 0x22 vs 0x2
[main] [INS] [0805f22d] lea      edx, [edx - 0x75d80]                                ; edx = 0x8065280 -> 424548b
[main] [INS] [0805f233] cmovne   eax, edx                                            ; eax = 0x8065280 -> 424548b
[main] [INS] [0805f236] ret      
[main] [INS] [08090430] <strrchr_ifunc>
[main] [INS] [08090430] call     0x8050fc6                                           ; call(0x8050fc6)
[main] [INS] [08090435] add      edx, 0x4abcb                                        ; edx = 0x80db000 -> 0
[main] [INS] [0809043b] mov      ecx, 0x80dc900                                      ; ecx = 0x80dc900 -> 2
[main] [INS] [08090441] lea      eax, [edx - 0x48670]                                ; eax = 0x8092990 -> c0315657
[main] [INS] [08090447] test     byte ptr [ecx + 0x17], 4                            ; 0x7 vs 0x4
[main] [INS] [0809044b] je       0x8090460
[main] [INS] [0809044d] lea      eax, [edx - 0x4a120]                                ; eax = 0x8090ee0 -> 244c8b57
[main] [INS] [08090453] test     byte ptr [ecx + 0x48], 4                            ; 0x0 vs 0x4
[main] [INS] [08090457] lea      edx, [edx - 0x49af0]                                ; edx = 0x8091510 -> 4244c8b
[main] [INS] [0809045d] cmove    eax, edx                                            ; eax = 0x8091510 -> 4244c8b
[main] [INS] [08090460] ret      
[main] [INS] [08092b50] <__wcslen_ifunc>
[main] [INS] [08092b50] call     0x8050fc6                                           ; call(0x8050fc6)
[main] [INS] [08092b55] add      edx, 0x484ab                                        ; edx = 0x80db000 -> 0
[main] [INS] [08092b5b] push     ebx                                                 ; push(0x80481c8) -> 80db018
[main] [INS] [08092b5c] mov      ebx, 0x80dc900                                      ; ebx = 0x80dc900 -> 2
[main] [INS] [08092b62] lea      ecx, [edx - 0x47cb0]                                ; ecx = 0x8093350 -> 424548b
[main] [INS] [08092b68] lea      eax, [edx - 0x47ab0]                                ; eax = 0x8093550 -> 244c8b53
[main] [INS] [08092b6e] test     byte ptr [ebx + 0x17], 4                            ; 0x7 vs 0x4
[main] [INS] [08092b72] pop      ebx                                                 ; ebx = 0x80481c8 -> 80db018
[main] [INS] [08092b73] cmovne   eax, ecx                                            ; eax = 0x8093350 -> 424548b
[main] [INS] [08092b76] ret      
[main] [INS] [0805f280] <__rawmemchr_ifunc>
[main] [INS] [0805f280] call     0x8050fc6                                           ; call(0x8050fc6)
[main] [INS] [0805f285] add      edx, 0x7bd7b                                        ; edx = 0x80db000 -> 0
[main] [INS] [0805f28b] mov      ecx, 0x80dc900                                      ; ecx = 0x80dc900 -> 2
[main] [INS] [0805f291] lea      eax, [edx - 0x70310]                                ; eax = 0x806acf0 -> 24448b57
[main] [INS] [0805f297] test     byte ptr [ecx + 0x17], 4                            ; 0x7 vs 0x4
[main] [INS] [0805f29b] je       0x805f2b0
[main] [INS] [0805f29d] lea      eax, [edx - 0x73420]                                ; eax = 0x8067be0 -> 4244c8b
[main] [INS] [0805f2a3] test     byte ptr [ecx + 0x48], 4                            ; 0x0 vs 0x4
[main] [INS] [0805f2a7] lea      edx, [edx - 0x73100]                                ; edx = 0x8067f00 -> 4244c8b
[main] [INS] [0805f2ad] cmove    eax, edx                                            ; eax = 0x8067f00 -> 4244c8b
[main] [INS] [0805f2b0] ret      
[main] [INS] [08090400] <__strnlen_ifunc>
[main] [INS] [08090400] call     0x8050fc6                                           ; call(0x8050fc6)
[main] [INS] [08090405] add      edx, 0x4abfb                                        ; edx = 0x80db000 -> 0
[main] [INS] [0809040b] push     ebx                                                 ; push(0x80481d8) -> 80db010
[main] [INS] [0809040c] mov      ebx, 0x80dc900                                      ; ebx = 0x80dc900 -> 2
[main] [INS] [08090412] lea      ecx, [edx - 0x49030]                                ; ecx = 0x8091fd0 -> 424548b
[main] [INS] [08090418] lea      eax, [edx - 0x48940]                                ; eax = 0x80926c0 -> 53c03156
[main] [INS] [0809041e] test     byte ptr [ebx + 0x17], 4                            ; 0x7 vs 0x4
[main] [INS] [08090422] pop      ebx                                                 ; ebx = 0x80481d8 -> 80db010
[main] [INS] [08090423] cmovne   eax, ecx                                            ; eax = 0x8091fd0 -> 424548b
[main] [INS] [08090426] ret      
[main] [INS] [0805e7a0] <strcpy_ifunc>
[main] [INS] [0805e7a0] call     0x8050fc6                                           ; call(0x8050fc6)
[main] [INS] [0805e7a5] add      edx, 0x7c85b                                        ; edx = 0x80db000 -> 0
[main] [INS] [0805e7ab] mov      ecx, 0x80dc900                                      ; ecx = 0x80dc900 -> 2
[main] [INS] [0805e7b1] test     byte ptr [ecx + 0x17], 4                            ; 0x7 vs 0x4
[main] [INS] [0805e7b5] je       0x805e7c3
[main] [INS] [0805e7b7] lea      eax, [edx - 0x74510]                                ; eax = 0x8066af0 -> 424548b
[main] [INS] [0805e7bd] test     byte ptr [ecx + 0x48], 1                            ; 0x0 vs 0x1
[main] [INS] [0805e7c1] jne      0x805e7d6
[main] [INS] [0805e7c3] lea      eax, [edx - 0x6fc20]                                ; eax = 0x806b3e0 -> 8b535657
[main] [INS] [0805e7c9] test     byte ptr [ecx + 0x11], 2                            ; 0x22 vs 0x2
[main] [INS] [0805e7cd] lea      edx, [edx - 0x775d0]                                ; edx = 0x8063a30 -> 424548b
[main] [INS] [0805e7d3] cmovne   eax, edx                                            ; eax = 0x8063a30 -> 424548b
[main] [INS] [0805e7d6] ret      
[main] [INS] [0804a100] mov      esi, dword ptr [esp + 0xc]                          ; esi = 0x80db000 -> 0
[main] [INS] [0804a104] mov      ebx, esi                                            ; ebx = 0x80db000 -> 0
[main] [INS] [0804a106] call     0x804a580                                           ; call(0x804a580)
[main] [INS] [0804a580] <__libc_setup_tls>
[main] [INS] [0804a580] push     ebp                                                 ; push(0x0)
[main] [INS] [0804a581] push     edi                                                 ; push(0x80481e8) -> 81e58960
[main] [INS] [0804a582] call     0x804a497                                           ; call(0x804a497)
[main] [INS] [0804a587] add      edi, 0x90a79                                        ; edi = 0x80db000 -> 0
[main] [INS] [0804a58d] push     esi                                                 ; push(0x80db000) -> 0
[main] [INS] [0804a58e] push     ebx                                                 ; push(0x80db000) -> 0
[main] [INS] [0804a58f] sub      esp, 0x3c                                           ; esp = 0xff08edb0 -> ff08eeb0
[main] [INS] [0804a592] mov      eax, 0x80dba40                                      ; eax = 0x80dba40 -> 80dbaa0
[main] [INS] [0804a598] mov      ecx, dword ptr [edi + 0x68]                         ; ecx = 0x800
[main] [INS] [0804a59e] mov      eax, dword ptr [eax]                                ; eax = 0x80dbaa0 -> 0
[main] [INS] [0804a5a0] mov      dword ptr [esp + 0xc], eax                          ; store(0xff08edbc,0x80dbaa0) -> 0
[main] [INS] [0804a5a4] mov      eax, 0x80dcf60                                      ; eax = 0x80dcf60 -> 8048034
[main] [INS] [0804a5aa] mov      esi, dword ptr [eax]                                ; esi = 0x8048034 -> 1
[main] [INS] [0804a5ac] test     esi, esi                                            ; 0x8048034 vs 0x8048034
[main] [INS] [0804a5ae] je       0x804a810
[main] [INS] [0804a5b4] mov      eax, 0x80dcf80                                      ; eax = 0x80dcf80 -> 8
[main] [INS] [0804a5ba] mov      eax, dword ptr [eax]                                ; eax = 0x8
[main] [INS] [0804a5bc] shl      eax, 5                                              ; eax = 0x100
[main] [INS] [0804a5bf] add      eax, esi                                            ; eax = 0x8048134 -> 4
[main] [INS] [0804a5c1] cmp      esi, eax                                            ; 0x8048034 vs 0x8048134
[main] [INS] [0804a5c3] jb       0x804a5db
[main] [INS] [0804a5db] cmp      dword ptr [esi], 7                                  ; 0x1 vs 0x7
[main] [INS] [0804a5de] jne      0x804a5d0
[main] [INS] [0804a5d0] add      esi, 0x20                                           ; esi = 0x8048054 -> 1
[main] [INS] [0804a5d3] cmp      eax, esi                                            ; 0x8048134 vs 0x8048054
[main] [INS] [0804a5d5] jbe      0x804a7f8
[main] [INS] [0804a5e0] mov      eax, dword ptr [esi + 0x10]                         ; eax = 0x10
[main] [INS] [0804a5e3] mov      ebx, dword ptr [esp + 0xc]                          ; ebx = 0x80dbaa0 -> 0
[main] [INS] [0804a5e7] mov      edx, dword ptr [esi + 0x14]                         ; edx = 0x30
[main] [INS] [0804a5ea] mov      ebp, dword ptr [esi + 0x1c]                         ; ebp = 0x4
[main] [INS] [0804a5ed] mov      dword ptr [esp + 0x10], eax                         ; store(0xff08edc0,0x10)
[main] [INS] [0804a5f1] mov      eax, dword ptr [esi + 8]                            ; eax = 0x80d9698 -> 80dbea0
[main] [INS] [0804a5f4] add      eax, dword ptr [ebx]                                ; eax = 0x80d9698 -> 80dbea0
[main] [INS] [0804a5f6] mov      dword ptr [esp + 8], edx                            ; store(0xff08edb8,0x30)
[main] [INS] [0804a5fa] mov      dword ptr [esp + 0x18], eax                         ; store(0xff08edc8,0x80d9698) -> 80dbea0
[main] [INS] [0804a5fe] mov      esi, eax                                            ; esi = 0x80d9698 -> 80dbea0
[main] [INS] [0804a600] cmp      ebp, 0x40                                           ; 0x4 vs 0x40
[main] [INS] [0804a603] ja       0x804a6e0
[main] [INS] [0804a609] lea      eax, [edx + ecx + 0x3f]                             ; eax = 0x86f
[main] [INS] [0804a60d] mov      dword ptr [esp + 8], edx                            ; store(0xff08edb8,0x30)
[main] [INS] [0804a611] sub      esp, 0xc                                            ; esp = 0xff08eda4 -> ff08ef6d
[main] [INS] [0804a614] mov      ebx, edi                                            ; ebx = 0x80db000 -> 0
[main] [INS] [0804a616] and      eax, 0xffffffc0                                     ; eax = 0x840
[main] [INS] [0804a619] mov      dword ptr [esp + 0x10], eax                         ; store(0xff08edb4,0x840)
[main] [INS] [0804a61d] add      eax, 0x500                                          ; eax = 0xd40
[main] [INS] [0804a622] push     eax                                                 ; push(0xd40)
[main] [INS] [0804a623] call     0x806d820                                           ; call(0x806d820)
[main] [INS] [0806d820] <__sbrk>
[main] [INS] [0806d820] push     ebp                                                 ; push(0x4)
[main] [INS] [0806d821] push     edi                                                 ; push(0x80db000) -> 0
[main] [INS] [0806d822] call     0x804a497                                           ; call(0x804a497)
[main] [INS] [0806d827] add      edi, 0x6d7d9                                        ; edi = 0x80db000 -> 0
[main] [INS] [0806d82d] push     esi                                                 ; push(0x80d9698) -> 80dbea0
[main] [INS] [0806d82e] push     ebx                                                 ; push(0x80db000) -> 0
[main] [INS] [0806d82f] sub      esp, 0xc                                            ; esp = 0xff08ed80 -> 8048034
[main] [INS] [0806d832] mov      esi, dword ptr [esp + 0x20]                         ; esi = 0xd40
[main] [INS] [0806d836] mov      ebp, 0x80dca60                                      ; ebp = 0x80dca60 -> 0
[main] [INS] [0806d83c] mov      ebx, dword ptr [ebp]                                ; ebx = 0x0
[main] [INS] [0806d83f] test     ebx, ebx                                            ; 0x0 vs 0x0
[main] [INS] [0806d841] je       0x806d880
[main] [INS] [0806d880] sub      esp, 0xc                                            ; esp = 0xff08ed74 -> 1000
[main] [INS] [0806d883] push     0                                                   ; push(0x0)
[main] [INS] [0806d885] call     0x8094080                                           ; call(0x8094080)
[main] [INS] [08094080] <brk>
[main] [INS] [08094080] call     0x8050fc6                                           ; call(0x8050fc6)
[main] [INS] [08094085] add      edx, 0x46f7b                                        ; edx = 0x80db000 -> 0
[main] [INS] [0809408b] push     ebx                                                 ; push(0x0)
[main] [INS] [0809408c] mov      eax, 0x2d                                           ; eax = 0x2d
[main] [INS] [08094091] mov      ebx, dword ptr [esp + 8]                            ; ebx = 0x0
[main] [SYSCALL] brk ( addr=0x0 ) -> 90000060
[main] [INS] [08094095] int      0x80
[main] [INS] [08094097] mov      dword ptr [edx + 0x1a60], eax                       ; store(0x80dca60,0x90000060) -> 0
[main] [INS] [0809409d] cmp      ebx, eax                                            ; 0x0 vs 0x90000060
[main] [INS] [0809409f] ja       0x80940a8
[main] [INS] [080940a1] xor      eax, eax                                            ; eax = 0x0
[main] [INS] [080940a3] pop      ebx                                                 ; ebx = 0x0
[main] [INS] [080940a4] ret      
[main] [INS] [0806d88a] add      esp, 0x10                                           ; esp = 0xff08ed80 -> 8048034
[main] [INS] [0806d88d] test     eax, eax                                            ; 0x0 vs 0x0
[main] [INS] [0806d88f] js       0x806d86b
[main] [INS] [0806d891] mov      ebx, dword ptr [ebp]                                ; ebx = 0x90000060 -> 0
[main] [INS] [0806d894] jmp      0x806d84d                                           ; jmp(0x806d84d)
[main] [INS] [0806d84d] test     esi, esi                                            ; 0xd40 vs 0xd40
[main] [INS] [0806d84f] je       0x806d870
[main] [INS] [0806d851] jle      0x806d8a0
[main] [INS] [0806d853] mov      eax, ebx                                            ; eax = 0x90000060 -> 0
[main] [INS] [0806d855] add      eax, esi                                            ; eax = 0x90000da0 -> 0
[main] [INS] [0806d857] setb     al                                                  ; al = 0x0
[main] [INS] [0806d85a] test     al, al                                              ; 0x0 vs 0x0
[main] [INS] [0806d85c] je       0x806d8ad
[main] [INS] [0806d8ad] sub      esp, 0xc                                            ; esp = 0xff08ed74 -> 1000
[main] [INS] [0806d8b0] add      esi, ebx                                            ; esi = 0x90000da0 -> 0
[main] [INS] [0806d8b2] push     esi                                                 ; push(0x90000da0) -> 0
[main] [INS] [0806d8b3] call     0x8094080                                           ; call(0x8094080)
[main] [SYSCALL] brk ( addr=0x90000da0 ) -> 90000da0
[main] [INS] [0806d8b8] add      esp, 0x10                                           ; esp = 0xff08ed80 -> 8048034
[main] [INS] [0806d8bb] test     eax, eax                                            ; 0x0 vs 0x0
[main] [INS] [0806d8bd] js       0x806d86b
[main] [INS] [0806d8bf] add      esp, 0xc                                            ; esp = 0xff08ed8c -> 80db000
[main] [INS] [0806d8c2] mov      eax, ebx                                            ; eax = 0x90000060 -> 0
[main] [INS] [0806d8c4] pop      ebx                                                 ; ebx = 0x80db000 -> 0
[main] [INS] [0806d8c5] pop      esi                                                 ; esi = 0x80d9698 -> 80dbea0
[main] [INS] [0806d8c6] pop      edi                                                 ; edi = 0x80db000 -> 0
[main] [INS] [0806d8c7] pop      ebp                                                 ; ebp = 0x4
[main] [INS] [0806d8c8] ret      
[main] [INS] [0804a628] mov      ecx, 0x80dcce0                                      ; ecx = 0x80dcce0 -> 0
[main] [INS] [0804a62e] add      eax, 0x3f                                           ; eax = 0x9000009f -> 0
[main] [INS] [0804a631] and      eax, 0xffffffc0                                     ; eax = 0x90000080 -> 0
[main] [INS] [0804a634] mov      dword ptr [ecx], 0x3e                               ; store(0x80dcce0,0x3e)
[main] [INS] [0804a63a] mov      dword ptr [esp + 0x10], eax                         ; store(0xff08edb0,0x90000080) -> 0
[main] [INS] [0804a63e] add      esp, 0x10                                           ; esp = 0xff08edb0 -> 90000080
[main] [INS] [0804a641] test     ebp, ebp                                            ; 0x4 vs 0x4
[main] [INS] [0804a643] mov      edx, dword ptr [esp + 8]                            ; edx = 0x30
[main] [INS] [0804a647] jne      0x804a821
[main] [INS] [0804a821] mov      dword ptr [esp + 0x18], esi                         ; store(0xff08edc8,0x80d9698) -> 80dbea0
[main] [INS] [0804a825] mov      dword ptr [esp + 8], edx                            ; store(0xff08edb8,0x30)
[main] [INS] [0804a829] mov      dword ptr [esp + 0x14], 0x40                        ; store(0xff08edc4,0x40)
[main] [INS] [0804a831] jmp      0x804a728                                           ; jmp(0x804a728)
[main] [INS] [0804a728] mov      eax, dword ptr [esp + 8]                            ; eax = 0x30
[main] [INS] [0804a72c] xor      edx, edx                                            ; edx = 0x0
[main] [INS] [0804a72e] mov      esi, dword ptr [esp + 0x18]                         ; esi = 0x80d9698 -> 80dbea0
[main] [INS] [0804a732] lea      eax, [ebp + eax - 1]                                ; eax = 0x33
[main] [INS] [0804a736] div      ebp                                                 ; ebp = 0x4
[main] [INS] [0804a738] imul     eax, ebp                                            ; eax = 0x30
[main] [INS] [0804a73b] mov      edx, eax                                            ; edx = 0x30
[main] [INS] [0804a73d] jmp      0x804a655                                           ; jmp(0x804a655)
[main] [INS] [0804a655] mov      eax, dword ptr [esp + 4]                            ; eax = 0x840
[main] [INS] [0804a659] mov      ebx, dword ptr [esp + 0xc]                          ; ebx = 0x80dbaa0 -> 0
[main] [INS] [0804a65d] mov      dword ptr [esp + 0x1c], edx                         ; store(0xff08edcc,0x30)
[main] [INS] [0804a661] sub      esp, 4                                              ; esp = 0xff08edac -> 80db000
[main] [INS] [0804a664] mov      dword ptr [esp + 0x1c], ecx                         ; store(0xff08edc8,0x80dcce0) -> 3e
[main] [INS] [0804a668] sub      eax, edx                                            ; eax = 0x810
[main] [INS] [0804a66a] add      eax, dword ptr [esp + 4]                            ; eax = 0x90000890 -> 0
[main] [INS] [0804a66e] mov      dword ptr [ebx + 0x244], edx                        ; store(0x80dbce4,0x30)
[main] [INS] [0804a674] mov      ebx, edi                                            ; ebx = 0x80db000 -> 0
[main] [INS] [0804a676] mov      dword ptr [ecx + 0x10], eax                         ; store(0x80dccf0,0x90000890) -> 0
[main] [INS] [0804a679] mov      dword ptr [ecx + 0x14], 0                           ; store(0x80dccf4,0x0)
[main] [INS] [0804a680] push     dword ptr [esp + 0x14]                              ; push(0x80dbaa0) -> 0
[main] [INS] [0804a684] push     esi                                                 ; push(0x80d9698) -> 80dbea0
[main] [INS] [0804a685] push     eax                                                 ; push(0x90000890) -> 0
[main] [INS] [0804a686] call     0x806b0b0                                           ; call(0x806b0b0)
[main] [INS] [0806b0b0] <memcpy>
[main] [INS] [0806b0b0] mov      eax, edi                                            ; eax = 0x80db000 -> 0
[main] [INS] [0806b0b2] mov      edi, dword ptr [esp + 4]                            ; edi = 0x90000890 -> 0
[main] [INS] [0806b0b6] mov      edx, esi                                            ; edx = 0x80d9698 -> 80dbea0
[main] [INS] [0806b0b8] mov      esi, dword ptr [esp + 8]                            ; esi = 0x80d9698 -> 80dbea0
[main] [INS] [0806b0bc] mov      ecx, edi                                            ; ecx = 0x90000890 -> 0
[main] [INS] [0806b0be] xor      ecx, esi                                            ; ecx = 0x980d9e08
[main] [INS] [0806b0c0] and      ecx, 3                                              ; ecx = 0x0
[main] [INS] [0806b0c3] mov      ecx, dword ptr [esp + 0xc]                          ; ecx = 0x10
[main] [INS] [0806b0c7] cld      
[main] [INS] [0806b0c8] jne      0x806b106
[main] [INS] [0806b0ca] cmp      ecx, 3                                              ; 0x10 vs 0x3
[main] [INS] [0806b0cd] jbe      0x806b106
[main] [INS] [0806b0cf] test     esi, 3                                              ; 0x80d9698 vs 0x3
[main] [INS] [0806b0d5] je       0x806b0ed
[main] [INS] [0806b0ed] push     eax                                                 ; push(0x80db000) -> 0
[main] [INS] [0806b0ee] mov      eax, ecx                                            ; eax = 0x10
[main] [INS] [0806b0f0] shr      ecx, 2                                              ; ecx = 0x4
[main] [INS] [0806b0f3] and      eax, 3                                              ; eax = 0x0
[main] [INS] [*0806b0f6] rep movsd dword ptr es:[edi], dword ptr [esi]                ; store(0x90000894,0x80dbea0) -> 80d9740
[main] [INS] [0806b0f8] mov      ecx, eax                                            ; ecx = 0x0
[main] [INS] [0806b0fa] rep movsb byte ptr es:[edi], byte ptr [esi]                  ; store(0x900008a0,0x10)
[main] [INS] [0806b0fc] pop      eax                                                 ; eax = 0x80db000 -> 0
[main] [INS] [0806b0fd] mov      edi, eax                                            ; edi = 0x80db000 -> 0
[main] [INS] [0806b0ff] mov      esi, edx                                            ; esi = 0x80d9698 -> 80dbea0
[main] [INS] [0806b101] mov      eax, dword ptr [esp + 4]                            ; eax = 0x90000890 -> 80dbea0
[main] [INS] [0806b105] ret      
[main] [INS] [0804a68b] mov      ecx, dword ptr [esp + 0x28]                         ; ecx = 0x80dcce0 -> 3e
[main] [INS] [0804a68f] mov      eax, dword ptr [esp + 0x10]                         ; eax = 0x90000080 -> 0
[main] [INS] [0804a693] lea      ebx, [esp + 0x30]                                   ; ebx = 0xff08edd0 -> 80dcf48
[main] [INS] [0804a697] add      eax, dword ptr [esp + 0x14]                         ; eax = 0x900008c0 -> 0
[main] [INS] [0804a69b] add      ecx, 8                                              ; ecx = 0x80dcce8 -> 0
[main] [INS] [0804a69e] mov      dword ptr [eax], eax                                ; store(0x900008c0,0x900008c0) -> 900008c0
[main] [INS] [0804a6a0] mov      dword ptr [eax + 4], ecx                            ; store(0x900008c4,0x80dcce8) -> 0
[main] [INS] [0804a6a3] mov      ecx, 0x80dba20                                      ; ecx = 0x80dba20 -> 806f5d0
[main] [INS] [0804a6a9] mov      dword ptr [eax + 8], eax                            ; store(0x900008c8,0x900008c0) -> 900008c0
[main] [INS] [0804a6ac] mov      ecx, dword ptr [ecx]                                ; ecx = 0x806f5d0 -> 8dc380cd
[main] [INS] [0804a6ae] mov      dword ptr [esp + 0x30], 0xffffffff                  ; store(0xff08edd0,0xffffffff)
[main] [INS] [0804a6b6] mov      dword ptr [eax + 0x10], ecx                         ; store(0x900008d0,0x806f5d0) -> 8dc380cd
[main] [INS] [0804a6b9] mov      dword ptr [esp + 0x34], eax                         ; store(0xff08edd4,0x900008c0) -> 900008c0
[main] [INS] [0804a6bd] mov      eax, 0xf3                                           ; eax = 0xf3
[main] [INS] [0804a6c2] mov      dword ptr [esp + 0x38], 0xfffff                     ; store(0xff08edd8,0xfffff)
[main] [INS] [0804a6ca] mov      dword ptr [esp + 0x3c], 0x51                        ; store(0xff08eddc,0x51)
userdesc.entry_number 4294967295
//lp[0]:e840ffff lp[1]:08dff20d
x86_gdt.set_entry b'\xff\x0f\xc0\x08\x00\xf3@\x90'
          FF FF 40 E8 0D F2 FF 08 
00000000: FF 0F C0 08 00 F3 40 90                           ......@.
userdesc.base_address 0x900008c0 len(tdata)) 48
userdesc.limit 0xfffff
userdesc.seg_32bit 0x51
userdesc.contents 0x0
userdesc.read_exec_only 0x0
userdesc.limit_in_pages 0xc9
userdesc.seg_not_present 0xd
userdesc.useable 0x8
00000000: B6 A8 1B 1E B6 A8 1B 1E  A6 A8 1B 1E B2 A8 1B 1E  ................
00000010: 00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ................
00000020: 00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ................
<class 'linux.parse.LiefELF'>
set_thread_area u_info=0xff08edd0 ['__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_arg_str_list', '_args', 'to_dict_list', 'u_info'] <class 'zelos.plugin.arg_base.Args'>
arg_val 0xff08edd0
00000000: 0C 00 00 00 C0 08 00 90  FF FF 0F 00 51 00 00 00  ............Q...
00000010: 00 C9 0D 08 00 B0 0D 08  00 00 00 00 00 B0 0D 08  ................
00000020: 00 B0 0D 08 E8 81 04 08  00 00 00 00 0B A1 04 08  ................
00000030: 00 00 00 00 00 00 00 00  00 00 00 00 00 B0 0D 08  ................
00000040: 00 00 00 00 00 00 00 00  00 00 00 00 06 00 00 00  ................
00000050: 06 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ................
00000060: 03 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ................
00000070: 00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ................
00000080: 00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ................
00000090: 00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ................
000000A0: 00 B0 0D 08 01 00 00 00  00 00 00 00 D2 99 04 08  ................
000000B0: 45 9B 04 08 01 00 00 00  A4 EE 08 FF 40 A8 04 08  E...........@...
000000C0: E0 A8 04 08 00 00 00 00  9C EE 08 FF A0 99 04 08  ................
000000D0: 01 00 00 00 39 EF 08 FF  00 00 00 00 6D EF 08 FF  ....9.......m...
000000E0: 00 00 00 00 03 00 00 00  34 80 04 08 04 00 00 00  ........4.......
000000F0: 20 00 00 00 05 00 00 00  08 00 00 00 06 00 00 00   ...............
00000100: 00 10 00 00 07 00 00 00  00 80 04 08 08 00 00 00  ................
00000110: 00 00 00 00 09 00 00 00  E8 81 04 08 0B 00 00 00  ................
00000120: E8 03 00 00 0C 00 00 00  E8 03 00 00 0D 00 00 00  ................
00000130: E8 03 00 00 0E 00 00 00  E8 03 00 00 11 00 00 00  ................
00000140: 64 00 00 00 10 00 00 00  97 B8 1F 00 1A 00 00 00  d...............
00000150: 00 00 00 00 19 00 00 00  50 00 00 90 00 00 00 00  ........P.......
00000160: 00 00 00 00 00 00 00 00  00 2F 68 6F 6D 65 2F 61  ........./home/a
00000170: 64 6D 69 6E 2F 7A 65 6C  6F 73 5F 64 69 72 2F 74  dmin/zelos_dir/t
00000180: 65 73 74 2E 73 74 61 74  69 63 2E 64 65 62 69 61  est.static.debia
00000190: 6E 2E 78 38 36 2E 70 61  63 6B 65 64 00 53 48 45  n.x86.packed.SHE
000001A0: 4C 4C 3D 62 69 6E 2F 62  61 73 68 00 00 00 00 00  LL=bin/bash.....
000001B0: 00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ................
000001C0: 00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ................
000001D0: 00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ................
000001E0: 00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ................
000001F0: 00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ................
00000200: 00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ................
00000210: 00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ................
00000220: 00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ................
00000230: 00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ................
00000240: 00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ................
00000250: 00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ................
00000260: 00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ................
00000270: 00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ................
00000280: 00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ................
00000290: 00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ................
000002A0: 00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ................
000002B0: 00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ................
000002C0: 00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ................
000002D0: 00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ................
000002E0: 00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ................
000002F0: 00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ................
00000300: 00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ................
00000310: 00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ................
00000320: 00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ................
00000330: 00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ................
00000340: 00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ................
00000350: 00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ................
00000360: 00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ................
00000370: 00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ................
00000380: 00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ................
00000390: 00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ................
000003A0: 00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ................
000003B0: 00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ................
000003C0: 00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ................
000003D0: 00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ................
000003E0: 00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ................
000003F0: 00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ................
[main] [SYSCALL] set_thread_area ( u_info=0xff08edd0 ) -> 0
[main] [INS] [0804a6d2] int      0x80
[main] [INS] [0804a6d4] add      esp, 0x10                                           ; esp = 0xff08edb0 -> 90000080
[main] [INS] [0804a6d7] test     eax, eax                                            ; 0x0 vs 0x0
[main] [INS] [0804a6d9] je       0x804a748
[main] [INS] [0804a748] mov      eax, dword ptr [esp + 0x20]                         ; eax = 0xc
[main] [INS] [0804a74c] lea      eax, [eax*8 + 3]                                    ; eax = 0x63
[main] [INS] [0804a753] mov      gs, eax                                             ; gs = 0x63
[main] [INS] [0804a755] mov      ebx, dword ptr [esp + 0xc]                          ; ebx = 0x80dbaa0 -> 0
[main] [INS] [0804a759] mov      eax, dword ptr [esp + 0x10]                         ; eax = 0x10
[main] [INS] [0804a75d] lea      ecx, [edi + 0x1340]                                 ; ecx = 0x80dc340 -> 0
[main] [INS] [0804a763] mov      dword ptr [edi + 0x1340], 0x40                      ; store(0x80dc340,0x40)
[main] [INS] [0804a76d] mov      edx, dword ptr [esp + 8]                            ; edx = 0x30
[main] [INS] [0804a771] mov      dword ptr [ebx + 0x234], eax                        ; store(0x80dbcd4,0x10)
[main] [INS] [0804a777] mov      eax, 0x80dccc8                                      ; eax = 0x80dccc8 -> 0
[main] [INS] [0804a77d] mov      dword ptr [ebx + 0x238], edx                        ; store(0x80dbcd8,0x30)
[main] [INS] [0804a783] mov      edx, dword ptr [esp + 0x1c]                         ; edx = 0x30
[main] [INS] [0804a787] mov      dword ptr [eax], 1                                  ; store(0x80dccc8,0x1)
[main] [INS] [0804a78d] mov      eax, 0x80dcee0                                      ; eax = 0x80dcee0 -> 0
[main] [INS] [0804a793] mov      dword ptr [ebx + 0x23c], ebp                        ; store(0x80dbcdc,0x4)
[main] [INS] [0804a799] mov      dword ptr [eax], ecx                                ; store(0x80dcee0,0x80dc340) -> 40
[main] [INS] [0804a79b] mov      eax, dword ptr [edi + 0x68]                         ; eax = 0x800
[main] [INS] [0804a7a1] mov      dword ptr [ebx + 0x230], esi                        ; store(0x80dbcd0,0x80d9698) -> 80dbea0
[main] [INS] [0804a7a7] lea      eax, [edx + eax + 0x3f]                             ; eax = 0x86f
[main] [INS] [0804a7ab] mov      dword ptr [edi + 0x1354], ebx                       ; store(0x80dc354,0x80dbaa0) -> 0
[main] [INS] [0804a7b1] mov      dword ptr [ebx + 0x248], 1                          ; store(0x80dbce8,0x1)
[main] [INS] [0804a7bb] and      eax, 0xffffffc0                                     ; eax = 0x840
[main] [INS] [0804a7be] add      eax, 0x4c0                                          ; eax = 0xd00
[main] [INS] [0804a7c3] mov      dword ptr [edi + 0x68], eax                         ; store(0x80db068,0xd00)
[main] [INS] [0804a7c9] mov      eax, 0x80dccc0                                      ; eax = 0x80dccc0 -> 0
[main] [INS] [0804a7cf] mov      dword ptr [eax], edx                                ; store(0x80dccc0,0x30)
[main] [INS] [0804a7d1] mov      eax, 0x80dccc4                                      ; eax = 0x80dccc4 -> 0
[main] [INS] [0804a7d7] mov      edx, dword ptr [esp + 0x14]                         ; edx = 0x40
[main] [INS] [0804a7db] mov      dword ptr [eax], edx                                ; store(0x80dccc4,0x40)
[main] [INS] [0804a7dd] mov      eax, 0x80dceec                                      ; eax = 0x80dceec -> 0
[main] [INS] [0804a7e3] mov      dword ptr [eax], 1                                  ; store(0x80dceec,0x1)
[main] [INS] [0804a7e9] add      esp, 0x3c                                           ; esp = 0xff08edec -> 80db000
[main] [INS] [0804a7ec] pop      ebx                                                 ; ebx = 0x80db000 -> 0
[main] [INS] [0804a7ed] pop      esi                                                 ; esi = 0x80db000 -> 0
[main] [INS] [0804a7ee] pop      edi                                                 ; edi = 0x80481e8 -> 81e58960
[main] [INS] [0804a7ef] pop      ebp                                                 ; ebp = 0x0
[main] [INS] [0804a7f0] ret      
[main] [INS] [0804a10b] mov      eax, dword ptr [esi - 0x260]                        ; eax = 0x90000050 -> "RANDOMBY"
[main] [INS] [0804a111] mov      eax, dword ptr [eax]                                ; eax = 0x444e4152
[main] [INS] [0804a113] xor      al, al                                              ; al = 0x0
[main] [INS] [0804a115] mov      dword ptr gs:[0x14], eax                            ; store(0x14,0x444e4100)
[main] [INS] [0804a11b] cmp      dword ptr [esi + 0xd14], 0                          ; 0x0 vs 0x0
[main] [INS] [0804a122] je       0x804a2c8
[main] [INS] [0804a2c8] call     0x80710f0                                           ; call(0x80710f0)
[main] [INS] [080710f0] <_dl_discover_osversion>
[main] [INS] [080710f0] push     ebp                                                 ; push(0x0)
[main] [INS] [080710f1] push     edi                                                 ; push(0x80481e8) -> 81e58960
[main] [INS] [080710f2] push     esi                                                 ; push(0x80db000) -> 0
[main] [INS] [080710f3] push     ebx                                                 ; push(0x80db000) -> 0
[main] [INS] [080710f4] call     0x80499f0                                           ; call(0x80499f0)
[main] [INS] [080710f9] add      ebx, 0x69f07                                        ; ebx = 0x80db000 -> 0
[main] [INS] [080710ff] sub      esp, 0x1e8                                          ; esp = 0xff08ec04 -> 0
[main] [INS] [08071105] lea      eax, [esp + 0x56]                                   ; eax = 0xff08ec5a -> 0
[main] [INS] [08071109] push     eax                                                 ; push(0xff08ec5a) -> 0
[main] [INS] [0807110a] call     0x8093d00                                           ; call(0x8093d00)
[main] [INS] [08093d00] <__uname>
[main] [INS] [08093d00] mov      edx, ebx                                            ; edx = 0x80db000 -> 0
[main] [INS] [08093d02] mov      ebx, dword ptr [esp + 4]                            ; ebx = 0xff08ec5a -> 0
[main] [INS] [08093d06] mov      eax, 0x7a                                           ; eax = 0x7a
[main] [INS] [08093d0b] call     dword ptr gs:[0x10]                                 ; call(0x806f5d0)
[main] [SYSCALL] uname ( buf=0xff08ec5a ) -> 0
[main] [INS] [0806f5d0] <_dl_sysinfo_int80>
[main] [INS] [0806f5d0] int      0x80
[main] [INS] [0806f5d2] ret      
[main] [INS] [08093d12] mov      ebx, edx                                            ; ebx = 0x80db000 -> 0
[main] [INS] [08093d14] cmp      eax, 0xfffff001                                     ; 0x0 vs 0xfffff001
[main] [INS] [08093d19] jae      0x80712a0
[main] [INS] [08093d1f] ret      
[main] [INS] [0807110f] add      esp, 0x10                                           ; esp = 0xff08ec10 -> 0
[main] [INS] [08071112] lea      ebp, [esp + 0xcc]                                   ; ebp = 0xff08ecdc -> "5.15.0-7"
[main] [INS] [08071119] test     eax, eax                                            ; 0x0 vs 0x0
[main] [INS] [0807111b] jne      0x8071198
[main] [INS] [0807111d] xor      edi, edi                                            ; edi = 0x0
[main] [INS] [0807111f] xor      eax, eax                                            ; eax = 0x0
[main] [INS] [08071121] movsx    ecx, byte ptr [ebp]                                 ; ecx = 0x35
[main] [INS] [08071125] lea      edx, [ecx - 0x30]                                   ; edx = 0x5
[main] [INS] [08071128] cmp      dl, 9                                               ; 0x5 vs 0x9
[main] [INS] [0807112b] ja       0x807117a
[main] [INS] [0807112d] movsx    edx, byte ptr [ebp + 1]                             ; edx = 0x2e
[main] [INS] [08071131] lea      esi, [ebp + 1]                                      ; esi = 0xff08ecdd -> ".15.0-75"
[main] [INS] [08071134] sub      ecx, 0x30                                           ; ecx = 0x5
[main] [INS] [08071137] lea      ebx, [edx - 0x30]                                   ; ebx = 0xfffffffe
[main] [INS] [0807113a] cmp      bl, 9                                               ; 0xfe vs 0x9
[main] [INS] [0807113d] ja       0x8071155
[main] [INS] [08071155] shl      eax, 8                                              ; eax = 0x0
[main] [INS] [08071158] add      edi, 1                                              ; edi = 0x1
[main] [INS] [0807115b] lea      ebp, [esi + 1]                                      ; ebp = 0xff08ecde -> "15.0-75-"
[main] [INS] [0807115e] or       eax, ecx                                            ; eax = 0x5
[main] [INS] [08071160] cmp      dl, 0x2e                                            ; 0x2e vs 0x2e
[main] [INS] [08071163] jne      0x8071175
[main] [INS] [08071165] cmp      edi, 3                                              ; 0x1 vs 0x3
[main] [INS] [08071168] jne      0x8071121
[main] [INS] [0807113f] nop      
[main] [INS] [08071140] lea      ecx, [ecx + ecx*4]                                  ; ecx = 0x5
[main] [INS] [08071143] add      esi, 1                                              ; esi = 0xff08ece0 -> ".0-75-ge"
[main] [INS] [08071146] lea      ecx, [edx + ecx*2 - 0x30]                           ; ecx = 0xf
[main] [INS] [0807114a] movsx    edx, byte ptr [esi]                                 ; edx = 0x2e
[main] [INS] [0807114d] lea      ebx, [edx - 0x30]                                   ; ebx = 0xfffffffe
[main] [INS] [08071150] cmp      bl, 9                                               ; 0xfe vs 0x9
[main] [INS] [08071153] jbe      0x8071140
[main] [INS] [08071175] cmp      edi, 3                                              ; 0x3 vs 0x3
[main] [INS] [08071178] je       0x807116a
[main] [INS] [0807116a] add      esp, 0x1dc                                          ; esp = 0xff08edec -> 80db000
[main] [INS] [08071170] pop      ebx                                                 ; ebx = 0x80db000 -> 0
[main] [INS] [08071171] pop      esi                                                 ; esi = 0x80db000 -> 0
[main] [INS] [08071172] pop      edi                                                 ; edi = 0x80481e8 -> 81e58960
[main] [INS] [08071173] pop      ebp                                                 ; ebp = 0x0
[main] [INS] [08071174] ret      
[main] [INS] [0804a2cd] test     eax, eax                                            ; 0x50f00 vs 0x50f00
[main] [INS] [0804a2cf] js       0x804a484
[main] [INS] [0804a2d5] mov      ecx, dword ptr [esp + 0xc]                          ; ecx = 0x80db000 -> 0
[main] [INS] [0804a2d9] mov      edx, 0x80dcf90                                      ; edx = 0x80dcf90 -> 0
[main] [INS] [0804a2df] mov      edx, dword ptr [edx]                                ; edx = 0x0
[main] [INS] [0804a2e1] test     edx, edx                                            ; 0x0 vs 0x0
[main] [INS] [0804a2e3] jne      0x804a477
[main] [INS] [0804a2e9] mov      esi, dword ptr [esp + 0xc]                          ; esi = 0x80db000 -> 0
[main] [INS] [0804a2ed] mov      edx, 0x80dcf90                                      ; edx = 0x80dcf90 -> 0
[main] [INS] [0804a2f3] mov      dword ptr [edx], eax                                ; store(0x80dcf90,0x50f00)
[main] [INS] [0804a2f5] cmp      eax, 0x301ff                                        ; 0x50f00 vs 0x301ff
[main] [INS] [0804a2fa] jg       0x804a128
[main] [INS] [0804a128] mov      eax, dword ptr [esp + 0xc]                          ; eax = 0x80db000 -> 0
[main] [INS] [0804a12c] cmp      dword ptr [eax - 0x1c], 0                           ; 0x0 vs 0x0
[main] [INS] [0804a133] je       0x804a13e
[main] [INS] [0804a13e] mov      eax, dword ptr [esp + 0xc]                          ; eax = 0x80db000 -> 0
[main] [INS] [0804a142] mov      eax, dword ptr [eax - 0x260]                        ; eax = 0x90000050 -> "RANDOMBY"
[main] [INS] [0804a148] mov      eax, dword ptr [eax + 4]                            ; eax = 0x59424d4f
[main] [INS] [0804a14b] mov      dword ptr gs:[0x18], eax                            ; store(0x18,0x59424d4f)
[main] [INS] [0804a151] cmp      dword ptr [esp + 0x94], 0                           ; 0x0 vs 0x0
[main] [INS] [0804a159] je       0x804a173
[main] [INS] [0804a173] push     eax                                                 ; push(0x59424d4f)
[main] [INS] [0804a174] mov      ebx, dword ptr [esp + 0x10]                         ; ebx = 0x80db000 -> 0
[main] [INS] [0804a178] mov      eax, 0x80dc8bc                                      ; eax = 0x80dc8bc -> ff08eeac
[main] [INS] [0804a17e] push     dword ptr [eax]                                     ; push(0xff08eeac) -> ff08ef6d
[main] [INS] [0804a180] push     dword ptr [esp + 0x90]                              ; push(0x1)
[main] [INS] [0804a187] push     dword ptr [esp + 0x90]                              ; push(0x8049b45) -> 4244c8d
[main] [INS] [0804a18e] call     0x8071200                                           ; call(0x8071200)
[main] [INS] [08071200] <__libc_init_first>
[main] [INS] [08071200] push     ebp                                                 ; push(0x0)
[main] [INS] [08071201] push     edi                                                 ; push(0x80481e8) -> 81e58960
[main] [INS] [08071202] push     esi                                                 ; push(0x80db000) -> 0
[main] [INS] [08071203] push     ebx                                                 ; push(0x80db000) -> 0
[main] [INS] [08071204] call     0x80499f0                                           ; call(0x80499f0)
[main] [INS] [08071209] add      ebx, 0x69df7                                        ; ebx = 0x80db000 -> 0
[main] [INS] [0807120f] sub      esp, 0xc                                            ; esp = 0xff08edd0 -> 0
[main] [INS] [08071212] mov      esi, dword ptr [esp + 0x20]                         ; esi = 0x1
[main] [INS] [08071216] mov      edi, dword ptr [esp + 0x24]                         ; edi = 0xff08eea4 -> ff08ef39
[main] [INS] [0807121a] mov      ebp, dword ptr [esp + 0x28]                         ; ebp = 0xff08eeac -> ff08ef6d
[main] [INS] [0807121e] mov      eax, 0                                              ; eax = 0x0
[main] [INS] [08071224] test     eax, eax                                            ; 0x0 vs 0x0
[main] [INS] [08071226] je       0x8071270
[main] [INS] [08071270] mov      eax, 0x80dbf14                                      ; eax = 0x80dbf14 -> 37f
[main] [INS] [08071276] mov      edx, 0x80db9e4                                      ; edx = 0x80db9e4 -> 37f
[main] [INS] [0807127c] mov      dword ptr [ebx + 0xd14], 0                          ; store(0x80dbd14,0x0)
[main] [INS] [08071286] movzx    eax, word ptr [eax]                                 ; eax = 0x37f
[main] [INS] [08071289] cmp      ax, word ptr [edx]                                  ; 0x37f vs 0x37f
[main] [INS] [0807128c] je       0x8071238
[main] [INS] [08071238] mov      eax, 0x80dc8bc                                      ; eax = 0x80dc8bc -> ff08eeac
[main] [INS] [0807123e] mov      dword ptr [ebx + 0x1fa4], esi                       ; store(0x80dcfa4,0x1)
[main] [INS] [08071244] mov      dword ptr [ebx + 0x1fa8], edi                       ; store(0x80dcfa8,0xff08eea4) -> ff08ef39
[main] [INS] [0807124a] mov      dword ptr [eax], ebp                                ; store(0x80dc8bc,0xff08eeac) -> ff08ef6d
[main] [INS] [0807124c] call     0x806fac0                                           ; call(0x806fac0)
[main] [INS] [0806fac0] <_dl_non_dynamic_init>
[main] [INS] [0806fac0] push     ebp                                                 ; push(0xff08eeac) -> ff08ef6d
[main] [INS] [0806fac1] push     edi                                                 ; push(0xff08eea4) -> ff08ef39
[main] [INS] [0806fac2] push     esi                                                 ; push(0x1)
[main] [INS] [0806fac3] push     ebx                                                 ; push(0x80db000) -> 0
[main] [INS] [0806fac4] call     0x80499f0                                           ; call(0x80499f0)
[main] [INS] [0806fac9] add      ebx, 0x6b537                                        ; ebx = 0x80db000 -> 0
[main] [INS] [0806facf] sub      esp, 0x2c                                           ; esp = 0xff08ed90 -> 0
[main] [INS] [0806fad2] call     0x809dfb0                                           ; call(0x809dfb0)
[main] [INS] [0809dfb0] <_dl_get_origin>
[main] [INS] [0809dfb0] push     ebp                                                 ; push(0xff08eeac) -> ff08ef6d
[main] [INS] [0809dfb1] mov      eax, 0x55                                           ; eax = 0x55
[main] [INS] [0809dfb6] mov      edx, 0x1000                                         ; edx = 0x1000
[main] [INS] [0809dfbb] push     edi                                                 ; push(0xff08eea4) -> ff08ef39
[main] [INS] [0809dfbc] push     esi                                                 ; push(0x1)
[main] [INS] [0809dfbd] call     0x80530e1                                           ; call(0x80530e1)
[main] [INS] [080530e1] <__x86.get_pc_thunk.si>
[main] [INS] [080530e1] mov      esi, dword ptr [esp]                                ; esi = 0x809dfc2 -> d03ec681
[main] [INS] [080530e4] ret      
[main] [INS] [0809dfc2] add      esi, 0x3d03e                                        ; esi = 0x80db000 -> 0
[main] [INS] [0809dfc8] push     ebx                                                 ; push(0x80db000) -> 0
[main] [INS] [0809dfc9] sub      esp, 0x101c                                         ; esp = 0xff08dd60 -> 0
[main] [INS] [0809dfcf] lea      ecx, [esp + 0x10]                                   ; ecx = 0xff08dd70 -> 0
[main] [INS] [0809dfd3] lea      ebx, [esi - 0x1b9ae]                                ; ebx = 0x80bf652 -> "/proc/se"
[main] [INS] [0809dfd9] call     dword ptr gs:[0x10]                                 ; call(0x806f5d0)
[main] [SYSCALL] readlink ( pathname=0x80bf652 ("/proc/self/exe"), buf=0xff08dd70, bufsiz=0x1000 ) -> e
[main] [INS] [0809dfe0] test     eax, eax                                            ; 0xe vs 0xe
[main] [INS] [0809dfe2] jle      0x809e048
[main] [INS] [0809dfe4] movzx    edx, byte ptr [esp + 0x10]                          ; edx = 0x2f
[main] [INS] [0809dfe9] cmp      dl, 0x5b                                            ; 0x2f vs 0x5b
[main] [INS] [0809dfec] je       0x809e048
[main] [INS] [0809dfee] cmp      dl, 0x2f                                            ; 0x2f vs 0x2f
[main] [INS] [0809dff1] jne      0x809e112
[main] [INS] [0809dff7] cmp      eax, 1                                              ; 0xe vs 0x1
[main] [INS] [0809dffa] je       0x809e025
[main] [INS] [0809dffc] lea      edi, [eax - 1]                                      ; edi = 0xd
[main] [INS] [0809dfff] cmp      byte ptr [esp + edi + 0x10], 0x2f                   ; 0x65 vs 0x2f
[main] [INS] [0809e004] jne      0x809e020
[main] [INS] [0809e020] cmp      edi, 1                                              ; 0xd vs 0x1
[main] [INS] [0809e023] jne      0x809e010
[main] [INS] [0809e010] cmp      byte ptr [ecx + edi - 1], 0x2f                      ; 0x78 vs 0x2f
[main] [INS] [0809e015] lea      eax, [edi - 1]                                      ; eax = 0xc
[main] [INS] [0809e018] je       0x809e0d0
[main] [INS] [0809e01e] mov      edi, eax                                            ; edi = 0xc
[main] [INS] [0809e0d0] mov      dword ptr [esp + 0xc], ecx                          ; store(0xff08dd6c,0xff08dd70) -> "/proc/se"
[main] [INS] [0809e0d4] lea      eax, [edi + 1]                                      ; eax = 0xc
[main] [INS] [0809e0d7] sub      esp, 0xc                                            ; esp = 0xff08dd54 -> 0
[main] [INS] [0809e0da] mov      ebx, esi                                            ; ebx = 0x80db000 -> 0
[main] [INS] [0809e0dc] push     eax                                                 ; push(0xc)
[main] [INS] [0809e0dd] call     0x805ce20                                           ; call(0x805ce20)
[main] [INS] [0805ce20] <__libc_malloc>
[main] [INS] [0805ce20] push     ebp                                                 ; push(0xff08eeac) -> ff08ef6d
[main] [INS] [0805ce21] push     edi                                                 ; push(0xb)
[main] [INS] [0805ce22] push     esi                                                 ; push(0x80db000) -> 0
[main] [INS] [0805ce23] push     ebx                                                 ; push(0x80db000) -> 0
[main] [INS] [0805ce24] call     0x80499f0                                           ; call(0x80499f0)
[main] [INS] [0805ce29] add      ebx, 0x7e1d7                                        ; ebx = 0x80db000 -> 0
[main] [INS] [0805ce2f] sub      esp, 0xc                                            ; esp = 0xff08dd30 -> 0
[main] [INS] [0805ce32] mov      esi, dword ptr [esp + 0x20]                         ; esi = 0xc
[main] [INS] [0805ce36] mov      eax, dword ptr [ebx + 0x508]                        ; eax = 0x805d0f0 -> feca8ce8
[main] [INS] [0805ce3c] test     eax, eax                                            ; 0x805d0f0 vs 0x805d0f0
[main] [INS] [0805ce3e] jne      0x805cfa8
[main] [INS] [0805cfa8] sub      esp, 8                                              ; esp = 0xff08dd28 -> 0
[main] [INS] [0805cfab] push     dword ptr [esp + 0x24]                              ; push(0xff08eeac) -> ff08ef6d
[main] [INS] [0805cfaf] push     esi                                                 ; push(0xc)
[main] [INS] [0805cfb0] call     eax                                                 ; call(0x805d0f0)
[main] [INS] [0805d0f0] <malloc_hook_ini>
[main] [INS] [0805d0f0] call     0x8049b81                                           ; call(0x8049b81)
[main] [INS] [0805d0f5] add      eax, 0x7df0b                                        ; eax = 0x80db000 -> 0
[main] [INS] [0805d0fa] push     ebx                                                 ; push(0x80db000) -> 0
[main] [INS] [0805d0fb] sub      esp, 8                                              ; esp = 0xff08dd10 -> 0
[main] [INS] [0805d0fe] mov      ebx, dword ptr [esp + 0x10]                         ; ebx = 0xc
[main] [INS] [0805d102] mov      dword ptr [eax + 0x508], 0                          ; store(0x80db508,0x0)
[main] [INS] [0805d10c] call     0x8059190                                           ; call(0x8059190)
[main] [INS] [08059190] <ptmalloc_init>
[main] [INS] [08059190] push     esi                                                 ; push(0xc)
[main] [INS] [08059191] push     ebx                                                 ; push(0xc)
[main] [INS] [08059192] call     0x80499f0                                           ; call(0x80499f0)
[main] [INS] [08059197] add      ebx, 0x81e69                                        ; ebx = 0x80db000 -> 0
[main] [INS] [0805919d] sub      esp, 0x14                                           ; esp = 0xff08dcf0 -> 0
[main] [INS] [080591a0] mov      eax, dword ptr gs:[0x14]                            ; eax = 0x444e4100
[main] [INS] [080591a6] mov      dword ptr [esp + 0xc], eax                          ; store(0xff08dcfc,0x444e4100)
[main] [INS] [080591aa] xor      eax, eax                                            ; eax = 0x0
[main] [INS] [080591ac] mov      eax, dword ptr [ebx + 0x4a4]                        ; eax = 0xffffffff
[main] [INS] [080591b2] test     eax, eax                                            ; 0xffffffff vs 0xffffffff
[main] [INS] [080591b4] jns      0x80592e6
[main] [INS] [080591ba] mov      eax, 0xffffffec                                     ; eax = 0xffffffec
[main] [INS] [080591c0] lea      edx, [ebx + 0x520]                                  ; edx = 0x80db520 -> 0
[main] [INS] [080591c6] lea      ecx, [ebx + 0x558]                                  ; ecx = 0x80db558 -> 0
[main] [INS] [080591cc] mov      dword ptr [ebx + 0x4a4], 0                          ; store(0x80db4a4,0x0)
[main] [INS] [080591d6] mov      dword ptr gs:[eax], edx                             ; store(0xffffffec,0x80db520) -> 0
[main] [INS] [080591d9] mov      eax, ecx                                            ; eax = 0x80db558 -> 0
[main] [INS] [080591db] lea      edx, [ebx + 0x950]                                  ; edx = 0x80db950 -> 0
[main] [INS] [080591e1] lea      esi, [esi]                                          ; esi = 0xc
[main] [INS] [080591e8] mov      dword ptr [eax + 0xc], eax                          ; store(0x80db564,0x80db558) -> 0
[main] [INS] [080591eb] mov      dword ptr [eax + 8], eax                            ; store(0x80db560,0x80db558) -> 0
[main] [INS] [080591ee] add      eax, 8                                              ; eax = 0x80db560 -> 80db558
[main] [INS] [080591f1] cmp      eax, edx                                            ; 0x80db560 vs 0x80db950
[main] [INS] [080591f3] jne      0x80591e8
[main] [INS] [080591f5] sub      esp, 4                                              ; esp = 0xff08dcec -> 0
[main] [INS] [080591f8] lea      eax, [ebx - 0x81830]                                ; eax = 0x80597d0 -> ff03ace8
[main] [INS] [080591fe] mov      dword ptr [ebx + 0x558], ecx                        ; store(0x80db558,0x80db558) -> 80db558
[main] [INS] [08059204] push     eax                                                 ; push(0x80597d0) -> ff03ace8
[main] [INS] [08059205] mov      dword ptr [ebx + 0x18b0], 0x40                      ; store(0x80dc8b0,0x40)
[main] [INS] [0805920f] mov      dword ptr [ebx + 0x528], 0                          ; store(0x80db528,0x0)
[main] [INS] [08059219] lea      esi, [esp + 0x10]                                   ; esi = 0xff08dcf8 -> 0
[main] [INS] [0805921d] push     esi                                                 ; push(0xff08dcf8) -> 0
[main] [INS] [0805921e] push     0x17                                                ; push(0x17)
[main] [INS] [08059220] call     0x806f550                                           ; call(0x806f550)
[main] [INS] [0806f5b8] mov      edx, dword ptr [edi + 0x18]                         ; edx = 0x0
[main] [INS] [0806f5bb] mov      dword ptr [esi], edx                                ; store(0xff08dcf8,0x0)
[main] [INS] [0806f5bd] jmp      0x806f586                                           ; jmp(0x806f586)
[main] [INS] [08059225] add      esp, 0xc                                            ; esp = 0xff08dcec -> 0
[main] [INS] [08059228] lea      eax, [ebx - 0x82be0]                                ; eax = 0x8058420 -> ff175ce8
[main] [INS] [0805922e] push     eax                                                 ; push(0x8058420) -> ff175ce8
[main] [INS] [0805922f] push     esi                                                 ; push(0xff08dcf8) -> 0
[main] [INS] [08059230] push     9                                                   ; push(0x9)
[main] [INS] [08059232] call     0x806f550                                           ; call(0x806f550)
[main] [INS] [08059237] add      esp, 0xc                                            ; esp = 0xff08dcec -> 0
[main] [INS] [0805923a] lea      eax, [ebx - 0x82bb0]                                ; eax = 0x8058450 -> ff172ce8
[main] [INS] [08059240] push     eax                                                 ; push(0x8058450) -> ff172ce8
[main] [INS] [08059241] push     esi                                                 ; push(0xff08dcf8) -> 0
[main] [INS] [08059242] push     3                                                   ; push(0x3)
[main] [INS] [08059244] call     0x806f550                                           ; call(0x806f550)
[main] [INS] [08059249] add      esp, 0xc                                            ; esp = 0xff08dcec -> 0
[main] [INS] [0805924c] lea      eax, [ebx - 0x82c50]                                ; eax = 0x80583b0 -> ff8c11e8
[main] [INS] [08059252] push     eax                                                 ; push(0x80583b0) -> ff8c11e8
[main] [INS] [08059253] push     esi                                                 ; push(0xff08dcf8) -> 0
[main] [INS] [08059254] push     0x12                                                ; push(0x12)
[main] [INS] [08059256] call     0x806f550                                           ; call(0x806f550)
[main] [INS] [0805925b] add      esp, 0xc                                            ; esp = 0xff08dcec -> 0
[main] [INS] [0805925e] lea      eax, [ebx - 0x82b90]                                ; eax = 0x8058470 -> ff170ce8
[main] [INS] [08059264] push     eax                                                 ; push(0x8058470) -> ff170ce8
[main] [INS] [08059265] push     esi                                                 ; push(0xff08dcf8) -> 0
[main] [INS] [08059266] push     2                                                   ; push(0x2)
[main] [INS] [08059268] call     0x806f550                                           ; call(0x806f550)
[main] [INS] [0805926d] add      esp, 0xc                                            ; esp = 0xff08dcec -> 0
[main] [INS] [08059270] lea      eax, [ebx - 0x82c10]                                ; eax = 0x80583f0 -> ff178ce8
[main] [INS] [08059276] push     eax                                                 ; push(0x80583f0) -> ff178ce8
[main] [INS] [08059277] push     esi                                                 ; push(0xff08dcf8) -> 0
[main] [INS] [08059278] push     0xa                                                 ; push(0xa)
[main] [INS] [0805927a] call     0x806f550                                           ; call(0x806f550)
[main] [INS] [0805927f] add      esp, 0xc                                            ; esp = 0xff08dcec -> 0
[main] [INS] [08059282] lea      eax, [ebx - 0x82b60]                                ; eax = 0x80584a0 -> ff16dce8
[main] [INS] [08059288] push     eax                                                 ; push(0x80584a0) -> ff16dce8
[main] [INS] [08059289] push     esi                                                 ; push(0xff08dcf8) -> 0
[main] [INS] [0805928a] push     0x11                                                ; push(0x11)
[main] [INS] [0805928c] call     0x806f550                                           ; call(0x806f550)
[main] [INS] [08059291] add      esp, 0xc                                            ; esp = 0xff08dcec -> 0
[main] [INS] [08059294] lea      eax, [ebx - 0x82b40]                                ; eax = 0x80584c0 -> ff16bce8
[main] [INS] [0805929a] push     eax                                                 ; push(0x80584c0) -> ff16bce8
[main] [INS] [0805929b] push     esi                                                 ; push(0xff08dcf8) -> 0
[main] [INS] [0805929c] push     0x14                                                ; push(0x14)
[main] [INS] [0805929e] call     0x806f550                                           ; call(0x806f550)
[main] [INS] [080592a3] add      esp, 0xc                                            ; esp = 0xff08dcec -> 0
[main] [INS] [080592a6] lea      eax, [ebx - 0x82b20]                                ; eax = 0x80584e0 -> ff8ae1e8
[main] [INS] [080592ac] push     eax                                                 ; push(0x80584e0) -> ff8ae1e8
[main] [INS] [080592ad] push     esi                                                 ; push(0xff08dcf8) -> 0
[main] [INS] [080592ae] push     0x16                                                ; push(0x16)
[main] [INS] [080592b0] call     0x806f550                                           ; call(0x806f550)
[main] [INS] [080592b5] add      esp, 0xc                                            ; esp = 0xff08dcec -> 0
[main] [INS] [080592b8] lea      eax, [ebx - 0x82ae0]                                ; eax = 0x8058520 -> ff165ce8
[main] [INS] [080592be] push     eax                                                 ; push(0x8058520) -> ff165ce8
[main] [INS] [080592bf] push     esi                                                 ; push(0xff08dcf8) -> 0
[main] [INS] [080592c0] push     0x13                                                ; push(0x13)
[main] [INS] [080592c2] call     0x806f550                                           ; call(0x806f550)
[main] [INS] [080592c7] add      esp, 0xc                                            ; esp = 0xff08dcec -> 0
[main] [INS] [080592ca] lea      eax, [ebx - 0x82ac0]                                ; eax = 0x8058540 -> ff163ce8
[main] [INS] [080592d0] push     eax                                                 ; push(0x8058540) -> ff163ce8
[main] [INS] [080592d1] push     esi                                                 ; push(0xff08dcf8) -> 0
[main] [INS] [080592d2] push     0xc                                                 ; push(0xc)
[main] [INS] [080592d4] call     0x806f550                                           ; call(0x806f550)
[main] [INS] [080592d9] add      esp, 0x10                                           ; esp = 0xff08dcf0 -> 0
[main] [INS] [080592dc] mov      dword ptr [ebx + 0x4a4], 1                          ; store(0x80db4a4,0x1)
[main] [INS] [080592e6] mov      eax, dword ptr [esp + 0xc]                          ; eax = 0x444e4100
[main] [INS] [080592ea] xor      eax, dword ptr gs:[0x14]                            ; eax = 0x0
[main] [INS] [080592f1] jne      0x80592f9
[main] [INS] [080592f3] add      esp, 0x14                                           ; esp = 0xff08dd04 -> c
[main] [INS] [080592f6] pop      ebx                                                 ; ebx = 0xc
[main] [INS] [080592f7] pop      esi                                                 ; esi = 0xc
[main] [INS] [080592f8] ret      
[main] [INS] [0805d111] mov      dword ptr [esp + 0x10], ebx                         ; store(0xff08dd20,0xc)
[main] [INS] [0805d115] add      esp, 8                                              ; esp = 0xff08dd18 -> 80db000
[main] [INS] [0805d118] pop      ebx                                                 ; ebx = 0x80db000 -> 0
[main] [INS] [0805d119] jmp      0x805ce20                                           ; jmp(0x805ce20)
[main] [INS] [0805ce44] lea      eax, [esi + 0x13]                                   ; eax = 0x1f
[main] [INS] [0805ce47] cmp      eax, 0xf                                            ; 0x1f vs 0xf
[main] [INS] [0805ce4a] ja       0x805cf00
[main] [INS] [0805cf00] and      eax, 0xfffffff0                                     ; eax = 0x10
[main] [INS] [0805cf03] cmp      eax, -0x21                                          ; 0x10 vs 0x-21
[main] [INS] [0805cf06] seta     dl                                                  ; dl = 0x0
[main] [INS] [0805cf09] jmp      0x805ce57                                           ; jmp(0x805ce57)
[main] [INS] [0805ce57] cmp      eax, esi                                            ; 0x10 vs 0xc
[main] [INS] [0805ce59] jb       0x805cf88
[main] [INS] [0805ce5f] test     dl, dl                                              ; 0x0 vs 0x0
[main] [INS] [0805ce61] jne      0x805cf88
[main] [INS] [0805ce67] lea      edi, [eax - 1]                                      ; edi = 0xf
[main] [INS] [0805ce6a] mov      eax, dword ptr gs:[0xffffffe4]                      ; eax = 0x0
[main] [INS] [0805ce70] mov      ebp, edi                                            ; ebp = 0xf
[main] [INS] [0805ce72] shr      ebp, 4                                              ; ebp = 0x0
[main] [INS] [0805ce75] test     eax, eax                                            ; 0x0 vs 0x0
[main] [INS] [0805ce77] je       0x805cf10
[main] [INS] [0805cf10] cmp      byte ptr gs:[0xffffffe8], 0
[main] [INS] [0805cf18] jne      0x805ce89
[main] [INS] [0805cf1e] call     0x805c180                                           ; call(0x805c180)
[main] [INS] [0805c180] <tcache_init.part.7>
[main] [INS] [0805c180] call     0x8049b81                                           ; call(0x8049b81)
[main] [INS] [0805c185] add      eax, 0x7ee7b                                        ; eax = 0x80db000 -> 0
[main] [INS] [0805c18a] push     edi                                                 ; push(0xf)
[main] [INS] [0805c18b] push     ebx                                                 ; push(0x80db000) -> 0
[main] [INS] [0805c18c] sub      esp, 4                                              ; esp = 0xff08dcf0 -> 0
[main] [INS] [0805c18f] mov      eax, 0xffffffec                                     ; eax = 0xffffffec
[main] [INS] [0805c195] mov      ebx, dword ptr gs:[eax]                             ; ebx = 0x80db520 -> 0
[main] [INS] [0805c198] test     ebx, ebx                                            ; 0x80db520 vs 0x80db520
[main] [INS] [0805c19a] je       0x805c228
[main] [INS] [0805c1a0] xor      eax, eax                                            ; eax = 0x0
[main] [INS] [0805c1a2] mov      ecx, 1                                              ; ecx = 0x1
[main] [INS] [0805c1a7] cmp      dword ptr gs:[0xc], 0
[main] [INS] [0805c1af] je       0x805c1b2
[main] [INS] [0805c1b2] cmpxchg  dword ptr [ebx], ecx                                ; store(0x80db520,0x1)
[main] [INS] [0805c1b5] je       0x805c1be
[main] [INS] [0805c1be] mov      edx, 0x140                                          ; edx = 0x140
[main] [INS] [0805c1c3] mov      eax, ebx                                            ; eax = 0x80db520 -> 1
[main] [INS] [0805c1c5] call     0x805b0f0                                           ; call(0x805b0f0)
[main] [INS] [0805b0f0] <_int_malloc>
[main] [INS] [0805b0f0] push     ebp                                                 ; push(0x0)
[main] [INS] [0805b0f1] call     0x804fda1                                           ; call(0x804fda1)
[main] [INS] [0804fda1] <__x86.get_pc_thunk.bp>
[main] [INS] [0804fda1] mov      ebp, dword ptr [esp]                                ; ebp = 0x805b0f6 -> ff0ac581
[main] [INS] [0804fda4] ret      
[main] [INS] [0805b0f6] add      ebp, 0x7ff0a                                        ; ebp = 0x80db000 -> 0
[main] [INS] [0805b0fc] push     edi                                                 ; push(0xf)
[main] [INS] [0805b0fd] push     esi                                                 ; push(0xc)
[main] [INS] [0805b0fe] lea      esi, [edx + 0x13]                                   ; esi = 0x153
[main] [INS] [0805b101] push     ebx                                                 ; push(0x80db520) -> 1
[main] [INS] [0805b102] sub      esp, 0x8c                                           ; esp = 0xff08dc50 -> 0
[main] [INS] [0805b108] cmp      esi, 0xf                                            ; 0x153 vs 0xf
[main] [INS] [0805b10b] jbe      0x805b280
[main] [INS] [0805b111] and      esi, 0xfffffff0                                     ; esi = 0x150
[main] [INS] [0805b114] cmp      esi, -0x21                                          ; 0x150 vs 0x-21
[main] [INS] [0805b117] seta     cl                                                  ; cl = 0x0
[main] [INS] [0805b11a] cmp      esi, edx                                            ; 0x150 vs 0x140
[main] [INS] [0805b11c] jb       0x805b760
[main] [INS] [0805b122] test     cl, cl                                              ; 0x0 vs 0x0
[main] [INS] [0805b124] jne      0x805b760
[main] [INS] [0805b12a] mov      dword ptr [esp + 0xc], edx                          ; store(0xff08dc5c,0x140)
[main] [INS] [0805b12e] mov      dword ptr [esp + 4], eax                            ; store(0xff08dc54,0x80db520) -> 1
[main] [INS] [0805b132] test     eax, eax                                            ; 0x80db520 vs 0x80db520
[main] [INS] [0805b134] je       0x805b790
[main] [INS] [0805b13a] cmp      esi, dword ptr [ebp + 0x18b0]                       ; 0x150 vs 0x40
[main] [INS] [0805b140] ja       0x805b290
[main] [INS] [0805b290] cmp      esi, 0x3ef                                          ; 0x150 vs 0x3ef
[main] [INS] [0805b296] jbe      0x805b578
[main] [INS] [0805b578] mov      edi, dword ptr [esp + 4]                            ; edi = 0x80db520 -> 1
[main] [INS] [0805b57c] mov      eax, esi                                            ; eax = 0x150
[main] [INS] [0805b57e] shr      eax, 4                                              ; eax = 0x15
[main] [INS] [0805b581] lea      edx, [edi + eax*8 + 0x40]                           ; edx = 0x80db608 -> 80db600
[main] [INS] [0805b585] mov      edi, dword ptr [edx + 4]                            ; edi = 0x80db600 -> 80db5f8
[main] [INS] [0805b588] lea      ecx, [edx - 8]                                      ; ecx = 0x80db600 -> 80db5f8
[main] [INS] [0805b58b] cmp      ecx, edi                                            ; 0x80db600 vs 0x80db600
[main] [INS] [0805b58d] je       0x805b660
[main] [INS] [0805b660] mov      edi, esi                                            ; edi = 0x150
[main] [INS] [0805b662] mov      ecx, esi                                            ; ecx = 0x150
[main] [INS] [0805b664] mov      ebx, esi                                            ; ebx = 0x150
[main] [INS] [0805b666] add      eax, 1                                              ; eax = 0x16
[main] [INS] [0805b669] shr      edi, 9                                              ; edi = 0x0
[main] [INS] [0805b66c] shr      ecx, 0xc                                            ; ecx = 0x0
[main] [INS] [0805b66f] mov      dword ptr [esp + 0x30], eax                         ; store(0xff08dc80,0x16)
[main] [INS] [0805b673] mov      eax, esi                                            ; eax = 0x150
[main] [INS] [0805b675] mov      dword ptr [esp + 0x74], edi                         ; store(0xff08dcc4,0x0)
[main] [INS] [0805b679] shr      ebx, 0xf                                            ; ebx = 0x0
[main] [INS] [0805b67c] add      edi, 0x5b                                           ; edi = 0x5b
[main] [INS] [0805b67f] shr      eax, 6                                              ; eax = 0x5
[main] [INS] [0805b682] mov      dword ptr [esp + 0x44], edi                         ; store(0xff08dc94,0x5b)
[main] [INS] [0805b686] lea      edi, [ecx + 0x6e]                                   ; edi = 0x6e
[main] [INS] [0805b689] lea      edx, [eax + 0x31]                                   ; edx = 0x36
[main] [INS] [0805b68c] mov      dword ptr [esp + 0x54], edi                         ; store(0xff08dca4,0x6e)
[main] [INS] [0805b690] lea      edi, [ebx + 0x77]                                   ; edi = 0x77
[main] [INS] [0805b693] mov      dword ptr [esp + 0x68], edi                         ; store(0xff08dcb8,0x77)
[main] [INS] [0805b697] mov      edi, esi                                            ; edi = 0x150
[main] [INS] [0805b699] shr      edi, 0x12                                           ; edi = 0x0
[main] [INS] [0805b69c] mov      dword ptr [esp + 0x70], eax                         ; store(0xff08dcc0,0x5)
[main] [INS] [0805b6a0] cmp      edi, 2                                              ; 0x0 vs 0x2
[main] [INS] [0805b6a3] mov      eax, edi                                            ; eax = 0x0
[main] [INS] [0805b6a5] mov      dword ptr [esp + 0x38], edx                         ; store(0xff08dc88,0x36)
[main] [INS] [0805b6a9] mov      edx, 2                                              ; edx = 0x2
[main] [INS] [0805b6ae] cmova    eax, edx                                            ; eax = 0x0
[main] [INS] [0805b6b1] mov      dword ptr [esp + 0x78], ecx                         ; store(0xff08dcc8,0x0)
[main] [INS] [0805b6b5] mov      dword ptr [esp + 0x60], ebx                         ; store(0xff08dcb0,0x0)
[main] [INS] [0805b6b9] lea      edi, [eax + 0x7c]                                   ; edi = 0x7c
[main] [INS] [0805b6bc] mov      eax, dword ptr [esp + 0x30]                         ; eax = 0x16
[main] [INS] [0805b6c0] mov      dword ptr [esp + 0x64], edi                         ; store(0xff08dcb4,0x7c)
[main] [INS] [0805b6c4] mov      dword ptr [esp + 0x6c], eax                         ; store(0xff08dcbc,0x16)
[main] [INS] [0805b6c8] jmp      0x805b33f                                           ; jmp(0x805b33f)
[main] [INS] [0805b33f] lea      eax, [esi - 1]                                      ; eax = 0x14f
[main] [INS] [0805b342] xor      ebx, ebx                                            ; ebx = 0x0
[main] [INS] [0805b344] mov      dword ptr [esp + 0x5c], eax                         ; store(0xff08dcac,0x14f)
[main] [INS] [0805b348] shr      eax, 4                                              ; eax = 0x14
[main] [INS] [0805b34b] mov      dword ptr [esp + 0x18], eax                         ; store(0xff08dc68,0x14)
[main] [INS] [0805b34f] mov      edi, dword ptr gs:[0xffffffe4]                      ; edi = 0x0
[main] [INS] [0805b356] mov      dword ptr [esp + 0x34], ebx                         ; store(0xff08dc84,0x0)
[main] [INS] [0805b35a] test     edi, edi                                            ; 0x0 vs 0x0
[main] [INS] [0805b35c] je       0x805b36b
[main] [INS] [0805b36b] mov      eax, dword ptr [esp + 4]                            ; eax = 0x80db520 -> 1
[main] [INS] [0805b36f] lea      ecx, [0x4c0]                                        ; ecx = 0x4c0
[main] [INS] [0805b375] mov      dword ptr [esp + 0x20], 0                           ; store(0xff08dc70,0x0)
[main] [INS] [0805b37d] mov      dword ptr [esp + 0x28], ecx                         ; store(0xff08dc78,0x4c0)
[main] [INS] [0805b381] mov      ecx, dword ptr [esp + 0x18]                         ; ecx = 0x14
[main] [INS] [0805b385] lea      ebx, [eax + 0x38]                                   ; ebx = 0x80db558 -> 80db558
[main] [INS] [0805b388] mov      dword ptr [esp + 0x14], edi                         ; store(0xff08dc64,0x0)
[main] [INS] [0805b38c] mov      dword ptr [esp + 8], ebx                            ; store(0xff08dc58,0x80db558) -> 80db558
[main] [INS] [0805b390] lea      ebx, [ecx*4]                                        ; ebx = 0x50
[main] [INS] [0805b397] mov      dword ptr [esp + 0x2c], ebx                         ; store(0xff08dc7c,0x50)
[main] [INS] [0805b39b] mov      dword ptr [esp + 0x10], esi                         ; store(0xff08dc60,0x150)
[main] [INS] [0805b39f] mov      esi, eax                                            ; esi = 0x80db520 -> 1
[main] [INS] [0805b3a1] mov      ebx, dword ptr [esp + 0x28]                         ; ebx = 0x4c0
[main] [INS] [0805b3a5] mov      edi, dword ptr [esi + 0x44]                         ; edi = 0x80db558 -> 80db558
[main] [INS] [0805b3a8] mov      dword ptr [esp + 0x1c], 0                           ; store(0xff08dc6c,0x0)
[main] [INS] [0805b3b0] mov      dword ptr [esp + 0x40], 0                           ; store(0xff08dc90,0x0)
[main] [INS] [0805b3b8] mov      eax, dword ptr [ebx + ebp + 0x3c]                   ; eax = 0x0
[main] [INS] [0805b3bc] test     eax, eax                                            ; 0x0 vs 0x0
[main] [INS] [0805b3be] mov      dword ptr [esp + 0x4c], eax                         ; store(0xff08dc9c,0x0)
[main] [INS] [0805b3c2] mov      eax, dword ptr [ebx + ebp + 0x38]                   ; eax = 0x7
[main] [INS] [0805b3c6] setne    byte ptr [esp + 0x5b]                               ; mem is (0x0)
[main] [INS] [0805b3cb] mov      dword ptr [esp + 0x48], eax                         ; store(0xff08dc98,0x7)
[main] [INS] [0805b3cf] mov      eax, dword ptr [esp + 0x14]                         ; eax = 0x0
[main] [INS] [0805b3d3] add      eax, dword ptr [esp + 0x2c]                         ; eax = 0x50
[main] [INS] [0805b3d7] mov      dword ptr [esp + 0x50], eax                         ; store(0xff08dca0,0x50)
[main] [INS] [0805b3db] cmp      edi, dword ptr [esp + 8]                            ; 0x80db558 vs 0x80db558
[main] [INS] [0805b3df] je       0x805bc80
[main] [INS] [0805bc80] mov      eax, dword ptr [esp + 0x40]                         ; eax = 0x0
[main] [INS] [0805bc84] test     eax, eax                                            ; 0x0 vs 0x0
[main] [INS] [0805bc86] je       0x805b7e4
[main] [INS] [0805b7e4] mov      edi, dword ptr [esp + 0x10]                         ; edi = 0x150
[main] [INS] [0805b7e8] cmp      edi, 0x3ef                                          ; 0x150 vs 0x3ef
[main] [INS] [0805b7ee] jbe      0x805b80a
[main] [INS] [0805b80a] mov      eax, dword ptr [esp + 0x30]                         ; eax = 0x16
[main] [INS] [0805b80e] lea      ecx, [eax + 1]                                      ; ecx = 0x17
[main] [INS] [0805b811] lea      edx, [esi + eax*8 + 0x38]                           ; edx = 0x80db608 -> 80db600
[main] [INS] [0805b815] mov      eax, 1                                              ; eax = 0x1
[main] [INS] [0805b81a] mov      edi, ecx                                            ; edi = 0x17
[main] [INS] [0805b81c] shl      eax, cl                                             ; eax = 0x800000
[main] [INS] [0805b81e] shr      edi, 5                                              ; edi = 0x0
[main] [INS] [0805b821] mov      ebx, dword ptr [esi + edi*4 + 0x438]                ; ebx = 0x0
[main] [INS] [0805b828] lea      esi, [esi]                                          ; esi = 0x80db520 -> 1
[main] [INS] [0805b82f] nop      
[main] [INS] [0805b830] cmp      eax, ebx                                            ; 0x800000 vs 0x0
[main] [INS] [0805b832] ja       0x805b9f7
[main] [INS] [0805b9f7] add      edi, 1                                              ; edi = 0x1
[main] [INS] [0805b9fa] cmp      edi, 4                                              ; 0x1 vs 0x4
[main] [INS] [0805b9fd] jne      0x805b9e8
[main] [INS] [0805b9e8] mov      ebx, dword ptr [esi + edi*4 + 0x438]                ; ebx = 0x0
[main] [INS] [0805b9ef] test     ebx, ebx                                            ; 0x0 vs 0x0
[main] [INS] [0805b9f1] jne      0x805bcc8
[main] [INS] [0805b9ff] mov      ebx, dword ptr [esi + 0x38]                         ; ebx = 0x80db558 -> 80db558
[main] [INS] [0805ba02] mov      eax, dword ptr [ebx + 4]                            ; eax = 0x0
[main] [INS] [0805ba05] and      eax, 0xfffffff8                                     ; eax = 0x0
[main] [INS] [0805ba08] cmp      dword ptr [esi + 0x454], eax                        ; 0x0 vs 0x0
[main] [INS] [0805ba0e] jb       0x805be43
[main] [INS] [0805ba14] mov      ecx, dword ptr [esp + 0x10]                         ; ecx = 0x150
[main] [INS] [0805ba18] lea      edx, [ecx + 0x10]                                   ; edx = 0x160
[main] [INS] [0805ba1b] cmp      edx, eax                                            ; 0x160 vs 0x0
[main] [INS] [0805ba1d] jbe      0x805be9e
[main] [INS] [0805ba23] mov      eax, dword ptr [esi + 8]                            ; eax = 0x0
[main] [INS] [0805ba26] test     eax, eax                                            ; 0x0 vs 0x0
[main] [INS] [0805ba28] je       0x805bf15
[main] [INS] [0805bf15] mov      esi, dword ptr [esp + 0x10]                         ; esi = 0x150
[main] [INS] [0805bf19] mov      edx, dword ptr [esp + 4]                            ; edx = 0x80db520 -> 1
[main] [INS] [0805bf1d] jmp      0x805b792                                           ; jmp(0x805b792)
[main] [INS] [0805b792] mov      eax, esi                                            ; eax = 0x150
[main] [INS] [0805b794] call     0x805a8c0                                           ; call(0x805a8c0)
[main] [INS] [0805a8c0] <sysmalloc>
[main] [INS] [0805a8c0] push     ebp                                                 ; push(0x80db000) -> 0
[main] [INS] [0805a8c1] mov      ebp, eax                                            ; ebp = 0x150
[main] [INS] [0805a8c3] push     edi                                                 ; push(0x4)
[main] [INS] [0805a8c4] push     esi                                                 ; push(0x150)
[main] [INS] [0805a8c5] push     ebx                                                 ; push(0x80db558) -> 80db558
[main] [INS] [0805a8c6] call     0x80499f0                                           ; call(0x80499f0)
[main] [INS] [0805a8cb] add      ebx, 0x80735                                        ; ebx = 0x80db000 -> 0
[main] [INS] [0805a8d1] sub      esp, 0x3c                                           ; esp = 0xff08dc00 -> 0
[main] [INS] [0805a8d4] mov      eax, 0x80db9f0                                      ; eax = 0x80db9f0 -> 1000
[main] [INS] [0805a8da] mov      dword ptr [esp + 0xc], eax                          ; store(0xff08dc0c,0x80db9f0) -> 1000
[main] [INS] [0805a8de] mov      eax, dword ptr [eax]                                ; eax = 0x1000
[main] [INS] [0805a8e0] mov      dword ptr [esp + 4], eax                            ; store(0xff08dc04,0x1000)
[main] [INS] [0805a8e4] test     edx, edx                                            ; 0x80db520 vs 0x80db520
[main] [INS] [0805a8e6] je       0x805aa90
[main] [INS] [0805a8ec] mov      esi, edx                                            ; esi = 0x80db520 -> 1
[main] [INS] [0805a8ee] cmp      dword ptr [ebx + 0x4c8], ebp                        ; 0x20000 vs 0x150
[main] [INS] [0805a8f4] jbe      0x805aa60
[main] [INS] [0805a8fa] mov      byte ptr [esp + 0x10], 0                            ; store(0xff08dc10,0x0)
[main] [INS] [0805a8ff] lea      eax, [esi + 0x38]                                   ; eax = 0x80db558 -> 80db558
[main] [INS] [0805a902] mov      dword ptr [esp + 8], eax                            ; store(0xff08dc08,0x80db558) -> 80db558
[main] [INS] [0805a906] mov      eax, dword ptr [esp + 4]                            ; eax = 0x1000
[main] [INS] [0805a90a] lea      eax, [eax + ebp + 0x12]                             ; eax = 0x1162
[main] [INS] [0805a90e] mov      dword ptr [esp + 0x14], eax                         ; store(0xff08dc14,0x1162)
[main] [INS] [0805a912] mov      edi, dword ptr [esi + 0x38]                         ; edi = 0x80db558 -> 80db558
[main] [INS] [0805a915] mov      eax, dword ptr [edi + 4]                            ; eax = 0x0
[main] [INS] [0805a918] mov      ecx, eax                                            ; ecx = 0x0
[main] [INS] [0805a91a] and      ecx, 0xfffffff8                                     ; ecx = 0x0
[main] [INS] [0805a91d] lea      edx, [edi + ecx]                                    ; edx = 0x80db558 -> 80db558
[main] [INS] [0805a920] cmp      edi, dword ptr [esp + 8]                            ; 0x80db558 vs 0x80db558
[main] [INS] [0805a924] jne      0x805a92a
[main] [INS] [0805a926] test     ecx, ecx                                            ; 0x0 vs 0x0
[main] [INS] [0805a928] je       0x805a94a
[main] [INS] [0805a94a] lea      eax, [ebp + 0x10]                                   ; eax = 0x160
[main] [INS] [0805a94d] mov      dword ptr [esp + 0x18], eax                         ; store(0xff08dc18,0x160)
[main] [INS] [0805a951] cmp      eax, ecx                                            ; 0x160 vs 0x0
[main] [INS] [0805a953] jbe      0x805ab38
[main] [INS] [0805a959] lea      eax, [ebx + 0x520]                                  ; eax = 0x80db520 -> 1
[main] [INS] [0805a95f] mov      dword ptr [esp + 0x20], eax                         ; store(0xff08dc20,0x80db520) -> 1
[main] [INS] [0805a963] cmp      esi, eax                                            ; 0x80db520 vs 0x80db520
[main] [INS] [0805a965] je       0x805aca0
[main] [INS] [0805aca0] mov      dword ptr [esp + 0xc], ecx                          ; store(0xff08dc0c,0x0)
[main] [INS] [0805aca4] mov      ecx, dword ptr [esp + 4]                            ; ecx = 0x1000
[main] [INS] [0805aca8] mov      eax, dword ptr [ebx + 0x4c4]                        ; eax = 0x20000
[main] [INS] [0805acae] neg      ecx                                                 ; ecx = 0xfffff000
[main] [INS] [0805acb0] mov      dword ptr [esp + 0x10], ecx                         ; store(0xff08dc10,0xfffff000)
[main] [INS] [0805acb4] mov      ecx, dword ptr [esp + 4]                            ; ecx = 0x1000
[main] [INS] [0805acb8] lea      eax, [ebp + eax + 0x10]                             ; eax = 0x20160
[main] [INS] [0805acbc] sub      ecx, 1                                              ; ecx = 0xfff
[main] [INS] [0805acbf] mov      dword ptr [esp + 0x1c], ecx                         ; store(0xff08dc1c,0xfff)
[main] [INS] [0805acc3] test     byte ptr [ebx + 0x524], 2                           ; 0x0 vs 0x2
[main] [INS] [0805acca] jne      0x805ad80
[main] [INS] [0805acd0] add      eax, ecx                                            ; eax = 0x2115f
[main] [INS] [0805acd2] sub      eax, dword ptr [esp + 0xc]                          ; eax = 0x2115f
[main] [INS] [0805acd6] and      eax, dword ptr [esp + 0x10]                         ; eax = 0x21000
[main] [INS] [0805acda] mov      dword ptr [esp + 8], eax                            ; store(0xff08dc08,0x21000)
[main] [INS] [0805acde] jle      0x805af33
[main] [INS] [0805ace4] mov      dword ptr [esp + 0x14], edx                         ; store(0xff08dc14,0x80db558) -> 80db558
[main] [INS] [0805ace8] sub      esp, 0xc                                            ; esp = 0xff08dbf4 -> 0
[main] [INS] [0805aceb] push     dword ptr [esp + 0x14]                              ; push(0x1000)
[main] [INS] [0805acef] call     dword ptr [ebx + 0x97c]                             ; call(0x805e6f0)
[main] [INS] [0805e6f0] <__default_morecore>
[main] [INS] [0805e6f0] push     ebx                                                 ; push(0x80db000) -> 0
[main] [INS] [0805e6f1] call     0x80499f0                                           ; call(0x80499f0)
[main] [INS] [0805e6f6] add      ebx, 0x7c90a                                        ; ebx = 0x80db000 -> 0
[main] [INS] [0805e6fc] sub      esp, 0x14                                           ; esp = 0xff08dbd4 -> 0
[main] [INS] [0805e6ff] push     dword ptr [esp + 0x1c]                              ; push(0x805acf5) -> 14244489
[main] [INS] [0805e703] call     0x806d820                                           ; call(0x806d820)
[main] [INS] [0806d843] mov      eax, dword ptr [edi + 0xd14]                        ; eax = 0x0
[main] [INS] [0806d849] test     eax, eax                                            ; 0x0 vs 0x0
[main] [INS] [0806d84b] jne      0x806d880
[main] [SYSCALL] brk ( addr=0x90021da0 ) -> 90021da0
[main] [INS] [0805e708] mov      edx, 0                                              ; edx = 0x0
[main] [INS] [0805e70d] cmp      eax, -1                                             ; 0x90000da0 vs 0x-1
[main] [INS] [0805e710] cmove    eax, edx                                            ; eax = 0x90000da0 -> 0
[main] [INS] [0805e713] add      esp, 0x18                                           ; esp = 0xff08dbe8 -> 80db000
[main] [INS] [0805e716] pop      ebx                                                 ; ebx = 0x80db000 -> 0
[main] [INS] [0805e717] ret      
[main] [INS] [0805acf5] mov      dword ptr [esp + 0x14], eax                         ; store(0xff08dc04,0x90000da0) -> 0
[main] [INS] [0805acf9] add      esp, 0x10                                           ; esp = 0xff08dc00 -> 0
[main] [INS] [0805acfc] test     eax, eax                                            ; 0x90000da0 vs 0x90000da0
[main] [INS] [0805acfe] mov      edx, dword ptr [esp + 0x14]                         ; edx = 0x80db558 -> 80db558
[main] [INS] [0805ad02] je       0x805af26
[main] [INS] [0805ad08] mov      ecx, dword ptr [esp + 8]                            ; ecx = 0x21000
[main] [INS] [0805ad0c] mov      eax, dword ptr [ebx + 0x1888]                       ; eax = 0x0
[main] [INS] [0805ad12] mov      byte ptr [esp + 0x28], 1                            ; store(0xff08dc28,0x1)
[main] [INS] [0805ad17] mov      dword ptr [esp + 0x14], ecx                         ; store(0xff08dc14,0x21000)
[main] [INS] [0805ad1b] mov      dword ptr [esp + 0x24], 0                           ; store(0xff08dc24,0x0)
[main] [INS] [0805ad23] test     eax, eax                                            ; 0x0 vs 0x0
[main] [INS] [0805ad25] jne      0x805b041
[main] [INS] [0805ad2b] mov      eax, dword ptr [ebx + 0x4ec]                        ; eax = 0x0
[main] [INS] [0805ad31] test     eax, eax                                            ; 0x0 vs 0x0
[main] [INS] [0805ad33] je       0x805af50
[main] [INS] [0805af50] mov      eax, dword ptr [esp + 4]                            ; eax = 0x90000da0 -> 0
[main] [INS] [0805af54] mov      dword ptr [ebx + 0x4ec], eax                        ; store(0x80db4ec,0x90000da0) -> 0
[main] [INS] [0805af5a] jmp      0x805ad39                                           ; jmp(0x805ad39)
[main] [INS] [0805ad39] mov      eax, dword ptr [ebx + 0x974]                        ; eax = 0x0
[main] [INS] [0805ad3f] mov      ecx, dword ptr [esp + 0x14]                         ; ecx = 0x21000
[main] [INS] [0805ad43] add      eax, ecx                                            ; eax = 0x21000
[main] [INS] [0805ad45] mov      dword ptr [esp + 8], eax                            ; store(0xff08dc08,0x21000)
[main] [INS] [0805ad49] mov      dword ptr [ebx + 0x974], eax                        ; store(0x80db974,0x21000)
[main] [INS] [0805ad4f] cmp      edx, dword ptr [esp + 4]                            ; 0x80db558 vs 0x90000da0
[main] [INS] [0805ad53] jne      0x805adf8
[main] [INS] [0805adf8] test     byte ptr [ebx + 0x524], 2                           ; 0x0 vs 0x2
[main] [INS] [0805adff] jne      0x805afba
[main] [INS] [0805ae05] mov      eax, dword ptr [esp + 0xc]                          ; eax = 0x0
[main] [INS] [0805ae09] test     eax, eax                                            ; 0x0 vs 0x0
[main] [INS] [0805ae0b] je       0x805ae17
[main] [INS] [0805ae17] mov      eax, dword ptr [esp + 0xc]                          ; eax = 0x0
[main] [INS] [0805ae1b] test     eax, eax                                            ; 0x0 vs 0x0
[main] [INS] [0805ae1d] je       0x805ae2f
[main] [INS] [0805ae2f] mov      ecx, dword ptr [esp + 4]                            ; ecx = 0x90000da0 -> 0
[main] [INS] [0805ae33] lea      eax, [ecx + 8]                                      ; eax = 0x90000da8 -> 0
[main] [INS] [0805ae36] and      eax, 0xf                                            ; eax = 0x8
[main] [INS] [0805ae39] je       0x805b010
[main] [INS] [0805ae3f] mov      edx, 0x10                                           ; edx = 0x10
[main] [INS] [0805ae44] sub      edx, eax                                            ; edx = 0x8
[main] [INS] [0805ae46] mov      eax, edx                                            ; eax = 0x8
[main] [INS] [0805ae48] lea      edx, [ecx + edx]                                    ; edx = 0x90000da8 -> 0
[main] [INS] [0805ae4b] add      eax, dword ptr [esp + 0xc]                          ; eax = 0x8
[main] [INS] [0805ae4f] mov      dword ptr [esp + 0x28], edx                         ; store(0xff08dc28,0x90000da8) -> 0
[main] [INS] [0805ae53] mov      edx, eax                                            ; edx = 0x8
[main] [INS] [0805ae55] mov      eax, dword ptr [esp + 0x14]                         ; eax = 0x21000
[main] [INS] [0805ae59] mov      ecx, edx                                            ; ecx = 0x8
[main] [INS] [0805ae5b] add      eax, edx                                            ; eax = 0x21008
[main] [INS] [0805ae5d] mov      edx, dword ptr [esp + 0x1c]                         ; edx = 0xfff
[main] [INS] [0805ae61] add      eax, dword ptr [esp + 4]                            ; eax = 0x90021da8 -> 0
[main] [INS] [0805ae65] sub      ecx, eax                                            ; ecx = 0x6ffde260
[main] [INS] [0805ae67] add      edx, eax                                            ; edx = 0x90022da7 -> 0
[main] [INS] [0805ae69] mov      eax, ecx                                            ; eax = 0x6ffde260
[main] [INS] [0805ae6b] and      edx, dword ptr [esp + 0x10]                         ; edx = 0x90022000 -> 0
[main] [INS] [0805ae6f] add      eax, edx                                            ; eax = 0x260
[main] [INS] [0805ae71] js       0x805b021
[main] [INS] [0805ae77] mov      dword ptr [esp + 4], eax                            ; store(0xff08dc04,0x260)
[main] [INS] [0805ae7b] sub      esp, 0xc                                            ; esp = 0xff08dbf4 -> 0
[main] [INS] [0805ae7e] push     eax                                                 ; push(0x260)
[main] [INS] [0805ae7f] call     dword ptr [ebx + 0x97c]                             ; call(0x805e6f0)
[main] [SYSCALL] brk ( addr=0x90022000 ) -> 90022000
[main] [INS] [0805ae85] mov      dword ptr [esp + 0x34], eax                         ; store(0xff08dc24,0x90021da0) -> 0
[main] [INS] [0805ae89] add      esp, 0x10                                           ; esp = 0xff08dc00 -> 0
[main] [INS] [0805ae8c] test     eax, eax                                            ; 0x90021da0 vs 0x90021da0
[main] [INS] [0805ae8e] mov      edx, dword ptr [esp + 4]                            ; edx = 0x260
[main] [INS] [0805ae92] je       0x805b050
[main] [INS] [0805ae98] mov      eax, dword ptr [ebx + 0x1888]                       ; eax = 0x0
[main] [INS] [0805ae9e] test     eax, eax                                            ; 0x0 vs 0x0
[main] [INS] [0805aea0] jne      0x805b06f
[main] [INS] [0805aea6] mov      eax, dword ptr [ebx + 0x974]                        ; eax = 0x21000
[main] [INS] [0805aeac] add      eax, edx                                            ; eax = 0x21260
[main] [INS] [0805aeae] mov      dword ptr [esp + 8], eax                            ; store(0xff08dc08,0x21260)
[main] [INS] [0805aeb2] mov      eax, dword ptr [esp + 0x28]                         ; eax = 0x90000da8 -> 0
[main] [INS] [0805aeb6] mov      dword ptr [esp + 4], eax                            ; store(0xff08dc04,0x90000da8) -> 0
[main] [INS] [0805aeba] mov      ecx, dword ptr [esp + 4]                            ; ecx = 0x90000da8 -> 0
[main] [INS] [0805aebe] mov      eax, dword ptr [esp + 0x24]                         ; eax = 0x90021da0 -> 0
[main] [INS] [0805aec2] sub      eax, ecx                                            ; eax = 0x20ff8
[main] [INS] [0805aec4] mov      dword ptr [ebx + 0x558], ecx                        ; store(0x80db558,0x90000da8) -> 0
[main] [INS] [0805aeca] add      eax, edx                                            ; eax = 0x21258
[main] [INS] [0805aecc] or       eax, 1                                              ; eax = 0x21259
[main] [INS] [0805aecf] mov      dword ptr [ecx + 4], eax                            ; store(0x90000dac,0x21259)
[main] [INS] [0805aed2] mov      eax, dword ptr [esp + 8]                            ; eax = 0x21260
[main] [INS] [0805aed6] mov      dword ptr [ebx + 0x974], eax                        ; store(0x80db974,0x21260)
[main] [INS] [0805aedc] mov      eax, dword ptr [esp + 0xc]                          ; eax = 0x0
[main] [INS] [0805aee0] test     eax, eax                                            ; 0x0 vs 0x0
[main] [INS] [0805aee2] je       0x805a9e6
[main] [INS] [0805a9e6] mov      eax, dword ptr [esp + 8]                            ; eax = 0x21260
[main] [INS] [0805a9ea] cmp      dword ptr [esi + 0x458], eax                        ; 0x0 vs 0x21260
[main] [INS] [0805a9f0] jae      0x805a9f8
[main] [INS] [0805a9f2] mov      dword ptr [esi + 0x458], eax                        ; store(0x80db978,0x21260)
[main] [INS] [0805a9f8] mov      edi, dword ptr [esp + 4]                            ; edi = 0x90000da8 -> 0
[main] [INS] [0805a9fc] mov      eax, dword ptr [edi + 4]                            ; eax = 0x21259
[main] [INS] [0805a9ff] mov      dword ptr [esp + 4], eax                            ; store(0xff08dc04,0x21259)
[main] [INS] [0805aa03] and      eax, 0xfffffff8                                     ; eax = 0x21258
[main] [INS] [0805aa06] cmp      dword ptr [esp + 0x18], eax                         ; 0x160 vs 0x21258
[main] [INS] [0805aa0a] ja       0x805ab60
[main] [INS] [0805aa10] mov      ecx, ebp                                            ; ecx = 0x150
[main] [INS] [0805aa12] sub      eax, ebp                                            ; eax = 0x21108
[main] [INS] [0805aa14] lea      edx, [edi + ebp]                                    ; edx = 0x90000ef8 -> 0
[main] [INS] [0805aa17] or       ecx, 4                                              ; ecx = 0x154
[main] [INS] [0805aa1a] cmp      esi, dword ptr [esp + 0x20]                         ; 0x80db520 vs 0x80db520
[main] [INS] [0805aa1e] mov      dword ptr [esi + 0x38], edx                         ; store(0x80db558,0x90000ef8) -> 0
[main] [INS] [0805aa21] cmovne   ebp, ecx                                            ; ebp = 0x150
[main] [INS] [0805aa24] or       eax, 1                                              ; eax = 0x21109
[main] [INS] [0805aa27] mov      ecx, ebp                                            ; ecx = 0x150
[main] [INS] [0805aa29] or       ecx, 1                                              ; ecx = 0x151
[main] [INS] [0805aa2c] mov      dword ptr [edi + 4], ecx                            ; store(0x90000dac,0x151)
[main] [INS] [0805aa2f] lea      ecx, [edi + 8]                                      ; ecx = 0x90000db0 -> 0
[main] [INS] [0805aa32] mov      dword ptr [edx + 4], eax                            ; store(0x90000efc,0x21109)
[main] [INS] [0805aa35] jmp      0x805ab6f                                           ; jmp(0x805ab6f)
[main] [INS] [0805ab6f] add      esp, 0x3c                                           ; esp = 0xff08dc3c -> 80db558
[main] [INS] [0805ab72] mov      eax, ecx                                            ; eax = 0x90000db0 -> 0
[main] [INS] [0805ab74] pop      ebx                                                 ; ebx = 0x80db558 -> 90000ef8
[main] [INS] [0805ab75] pop      esi                                                 ; esi = 0x150
[main] [INS] [0805ab76] pop      edi                                                 ; edi = 0x4
[main] [INS] [0805ab77] pop      ebp                                                 ; ebp = 0x80db000 -> 0
[main] [INS] [0805ab78] ret      
[main] [INS] [0805b799] mov      esi, eax                                            ; esi = 0x90000db0 -> 0
[main] [INS] [0805b79b] test     eax, eax                                            ; 0x90000db0 vs 0x90000db0
[main] [INS] [0805b79d] je       0x805bb40
[main] [INS] [0805b7a3] mov      eax, dword ptr [ebp + 0x18ac]                       ; eax = 0x0
[main] [INS] [0805b7a9] test     eax, eax                                            ; 0x0 vs 0x0
[main] [INS] [0805b7ab] je       0x805b26f
[main] [INS] [0805b26f] add      esp, 0x8c                                           ; esp = 0xff08dcdc -> 80db520
[main] [INS] [0805b275] mov      eax, esi                                            ; eax = 0x90000db0 -> 0
[main] [INS] [0805b277] pop      ebx                                                 ; ebx = 0x80db520 -> 1
[main] [INS] [0805b278] pop      esi                                                 ; esi = 0xc
[main] [INS] [0805b279] pop      edi                                                 ; edi = 0xf
[main] [INS] [0805b27a] pop      ebp                                                 ; ebp = 0x0
[main] [INS] [0805b27b] ret      
[main] [INS] [0805c1ca] mov      ecx, eax                                            ; ecx = 0x90000db0 -> 0
[main] [INS] [0805c1cc] test     eax, eax                                            ; 0x90000db0 vs 0x90000db0
[main] [INS] [0805c1ce] je       0x805c258
[main] [INS] [0805c1d4] cmp      dword ptr gs:[0xc], 0
[main] [INS] [0805c1dc] je       0x805c1df
[main] [INS] [0805c1df] sub      dword ptr [ebx], 1                                  ; store(0x80db520,0x1)
[main] [INS] [0805c1e2] je       0x805c1eb
[main] [INS] [0805c1eb] test     ecx, ecx                                            ; 0x90000db0 vs 0x90000db0
[main] [INS] [0805c1ed] je       0x805c21b
[main] [INS] [0805c1ef] lea      edi, [ecx + 4]                                      ; edi = 0x90000db4 -> 0
[main] [INS] [0805c1f2] mov      dword ptr gs:[0xffffffe4], ecx                      ; store(0x-1c,0x90000db0) -> 0
[main] [INS] [0805c1f9] xor      eax, eax                                            ; eax = 0x0
[main] [INS] [0805c1fb] and      edi, 0xfffffffc                                     ; edi = 0x90000db4 -> 0
[main] [INS] [0805c1fe] mov      dword ptr [ecx], 0                                  ; store(0x90000db0,0x0)
[main] [INS] [0805c204] mov      dword ptr [ecx + 0x13c], 0                          ; store(0x90000eec,0x0)
[main] [INS] [0805c20e] sub      ecx, edi                                            ; ecx = 0xfffffffc
[main] [INS] [0805c210] add      ecx, 0x140                                          ; ecx = 0x13c
[main] [INS] [0805c216] shr      ecx, 2                                              ; ecx = 0x4f
[main] [INS] [*0805c219] rep stosd dword ptr es:[edi], eax                            ; store(0x90000db8,0x0)
[main] [INS] [0805c21b] add      esp, 4                                              ; esp = 0xff08dcf4 -> 80db000
[main] [INS] [0805c21e] pop      ebx                                                 ; ebx = 0x80db000 -> 0
[main] [INS] [0805c21f] pop      edi                                                 ; edi = 0xf
[main] [INS] [0805c220] ret      
[main] [INS] [0805cf23] cmp      dword ptr [ebx + 0x4f0], ebp                        ; 0x40 vs 0x0
[main] [INS] [0805cf29] jbe      0x805ce89
[main] [INS] [0805cf2f] mov      eax, dword ptr gs:[0xffffffe4]                      ; eax = 0x90000db0 -> 0
[main] [INS] [0805cf35] test     eax, eax                                            ; 0x90000db0 vs 0x90000db0
[main] [INS] [0805cf37] je       0x805ce89
[main] [INS] [0805cf3d] lea      esi, [esi]                                          ; esi = 0xc
[main] [INS] [0805cf40] lea      ecx, [eax + ebp*4]                                  ; ecx = 0x90000db0 -> 0
[main] [INS] [0805cf43] mov      edx, dword ptr [ecx + 0x40]                         ; edx = 0x0
[main] [INS] [0805cf46] test     edx, edx                                            ; 0x0 vs 0x0
[main] [INS] [0805cf48] je       0x805ce89
[main] [INS] [0805ce89] mov      eax, dword ptr gs:[0xc]                             ; eax = 0x0
[main] [INS] [0805ce8f] test     eax, eax                                            ; 0x0 vs 0x0
[main] [INS] [0805ce91] jne      0x805cfc0
[main] [INS] [0805ce97] mov      edx, esi                                            ; edx = 0xc
[main] [INS] [0805ce99] lea      eax, [ebx + 0x520]                                  ; eax = 0x80db520 -> 0
[main] [INS] [0805ce9f] call     0x805b0f0                                           ; call(0x805b0f0)
[main] [INS] [0805b146] mov      edx, esi                                            ; edx = 0x10
[main] [INS] [0805b148] mov      eax, dword ptr [esp + 4]                            ; eax = 0x80db520 -> 0
[main] [INS] [0805b14c] shr      edx, 3                                              ; edx = 0x2
[main] [INS] [0805b14f] lea      ebx, [eax + edx*4]                                  ; ebx = 0x80db528 -> 0
[main] [INS] [0805b152] mov      ecx, dword ptr [ebx + 4]                            ; ecx = 0x0
[main] [INS] [0805b155] mov      dword ptr [esp + 8], ecx                            ; store(0xff08dc68,0x0)
[main] [INS] [0805b159] test     ecx, ecx                                            ; 0x0 vs 0x0
[main] [INS] [0805b15b] je       0x805b578
[main] [INS] [0805b35e] cmp      dword ptr [ebp + 0x4f0], eax                        ; 0x40 vs 0x0
[main] [INS] [0805b364] cmova    ebx, esi                                            ; ebx = 0x10
[main] [INS] [0805b367] mov      dword ptr [esp + 0x34], ebx                         ; store(0xff08dc94,0x10)
[main] [INS] [0805be9e] sub      eax, ecx                                            ; eax = 0x210f8
[main] [INS] [0805bea0] mov      esi, ecx                                            ; esi = 0x10
[main] [INS] [0805bea2] mov      ecx, eax                                            ; ecx = 0x210f8
[main] [INS] [0805bea4] mov      eax, dword ptr [esp + 4]                            ; eax = 0x80db520 -> 0
[main] [INS] [0805bea8] lea      edx, [ebx + esi]                                    ; edx = 0x90000f08 -> 0
[main] [INS] [0805beab] mov      dword ptr [eax + 0x38], edx                         ; store(0x80db558,0x90000f08) -> 0
[main] [INS] [0805beae] lea      eax, [ebp + 0x520]                                  ; eax = 0x80db520 -> 0
[main] [INS] [0805beb4] cmp      dword ptr [esp + 4], eax                            ; 0x80db520 vs 0x80db520
[main] [INS] [0805beb8] mov      eax, 0                                              ; eax = 0x0
[main] [INS] [0805bebd] cmove    edi, eax                                            ; edi = 0x0
[main] [INS] [0805bec0] mov      eax, esi                                            ; eax = 0x10
[main] [INS] [0805bec2] or       eax, edi                                            ; eax = 0x10
[main] [INS] [0805bec4] or       eax, 1                                              ; eax = 0x11
[main] [INS] [0805bec7] mov      dword ptr [ebx + 4], eax                            ; store(0x90000efc,0x11)
[main] [INS] [0805beca] mov      eax, ecx                                            ; eax = 0x210f8
[main] [INS] [0805becc] or       eax, 1                                              ; eax = 0x210f9
[main] [INS] [0805becf] mov      dword ptr [edx + 4], eax                            ; store(0x90000f0c,0x210f9)
[main] [INS] [0805bed2] lea      eax, [ebx + 8]                                      ; eax = 0x90000f00 -> 0
[main] [INS] [0805bed5] mov      esi, eax                                            ; esi = 0x90000f00 -> 0
[main] [INS] [0805bed7] mov      eax, dword ptr [ebp + 0x18ac]                       ; eax = 0x0
[main] [INS] [0805bedd] test     eax, eax                                            ; 0x0 vs 0x0
[main] [INS] [0805bedf] je       0x805b26f
[main] [INS] [0805cea4] mov      edx, eax                                            ; edx = 0x90000f00 -> 0
[main] [INS] [0805cea6] test     eax, eax                                            ; 0x90000f00 vs 0x90000f00
[main] [INS] [0805cea8] je       0x805cf78
[main] [INS] [0805ceae] mov      eax, dword ptr [eax - 4]                            ; eax = 0x11
[main] [INS] [0805ceb1] test     al, 2                                               ; 0x11 vs 0x2
[main] [INS] [0805ceb3] jne      0x805cf6a
[main] [INS] [0805ceb9] test     al, 4                                               ; 0x11 vs 0x4
[main] [INS] [0805cebb] je       0x805cf6a
[main] [INS] [0805cf6a] add      esp, 0xc                                            ; esp = 0xff08dd0c -> 80db000
[main] [INS] [0805cf6d] mov      eax, edx                                            ; eax = 0x90000f00 -> 0
[main] [INS] [0805cf6f] pop      ebx                                                 ; ebx = 0x80db000 -> 0
[main] [INS] [0805cf70] pop      esi                                                 ; esi = 0xc
[main] [INS] [0805cf71] pop      edi                                                 ; edi = 0xb
[main] [INS] [0805cf72] pop      ebp                                                 ; ebp = 0xff08eeac -> ff08ef6d
[main] [INS] [0805cf73] ret      
[main] [INS] [0805cfb2] mov      edx, eax                                            ; edx = 0x90000f00 -> 0
[main] [INS] [0805cfb4] add      esp, 0x10                                           ; esp = 0xff08dd30 -> 0
[main] [INS] [0805cfb7] jmp      0x805cf6a                                           ; jmp(0x805cf6a)
[main] [INS] [0809e0e2] add      esp, 0x10                                           ; esp = 0xff08dd60 -> 0
[main] [INS] [0809e0e5] mov      ecx, dword ptr [esp + 0xc]                          ; ecx = 0xff08dd70 -> "/proc/se"
[main] [INS] [0809e0e9] test     eax, eax                                            ; 0x90000f00 vs 0x90000f00
[main] [INS] [0809e0eb] mov      ebp, eax                                            ; ebp = 0x90000f00 -> 0
[main] [INS] [0809e0ed] je       0x809e0b8
[main] [INS] [0809e0ef] sub      esp, 4                                              ; esp = 0xff08dd5c -> 809dfe0
[main] [INS] [0809e0f2] sub      edi, 1                                              ; edi = 0xa
[main] [INS] [0809e0f5] mov      ebx, esi                                            ; ebx = 0x80db000 -> 0
[main] [INS] [0809e0f7] push     edi                                                 ; push(0xa)
[main] [INS] [0809e0f8] push     ecx                                                 ; push(0xff08dd70) -> "/proc/se"
[main] [INS] [0809e0f9] push     ebp                                                 ; push(0x90000f00) -> 0
[main] [INS] [0809e0fa] call     0x806b1a0                                           ; call(0x806b1a0)
[main] [INS] [0806b1a0] <__mempcpy>
[main] [INS] [0806b1a0] mov      ecx, dword ptr [esp + 0xc]                          ; ecx = 0xa
[main] [INS] [0806b1a4] mov      eax, edi                                            ; eax = 0xa
[main] [INS] [0806b1a6] mov      edi, dword ptr [esp + 4]                            ; edi = 0x90000f00 -> 0
[main] [INS] [0806b1aa] mov      edx, esi                                            ; edx = 0x80db000 -> 0
[main] [INS] [0806b1ac] mov      esi, dword ptr [esp + 8]                            ; esi = 0xff08dd70 -> "/proc/se"
[main] [INS] [0806b1b0] cld      
[main] [INS] [0806b1b1] shr      ecx, 1                                              ; ecx = 0x5
[main] [INS] [0806b1b3] jae      0x806b1b6
[main] [INS] [0806b1b6] shr      ecx, 1                                              ; ecx = 0x2
[main] [INS] [0806b1b8] jae      0x806b1bc
[main] [INS] [0806b1ba] movsw    word ptr es:[edi], word ptr [esi]                   ; store(0x90000f02,0x6f72)
[main] [INS] [*0806b1bc] rep movsd dword ptr es:[edi], dword ptr [esi]                ; store(0x90000f06,0x666c6573)
[main] [INS] [0806b1be] xchg     eax, edi                                            ; eax = 0x90000f0a -> 10f90000
[main] [INS] [0806b1bf] mov      esi, edx                                            ; esi = 0x80db000 -> 0
[main] [INS] [0806b1c1] ret      
[main] [INS] [0809e0ff] add      esp, 0x10                                           ; esp = 0xff08dd60 -> 0
[main] [INS] [0809e102] mov      byte ptr [eax], 0                                   ; store(0x90000f0a,0x0)
[main] [INS] [0809e105] add      esp, 0x101c                                         ; esp = 0xff08ed7c -> 80db000
[main] [INS] [0809e10b] mov      eax, ebp                                            ; eax = 0x90000f00 -> "/proc/se"
[main] [INS] [0809e10d] pop      ebx                                                 ; ebx = 0x80db000 -> 0
[main] [INS] [0809e10e] pop      esi                                                 ; esi = 0x1
[main] [INS] [0809e10f] pop      edi                                                 ; edi = 0xff08eea4 -> ff08ef39
[main] [INS] [0809e110] pop      ebp                                                 ; ebp = 0xff08eeac -> ff08ef6d
[main] [INS] [0809e111] ret      
[main] [INS] [0806fad7] mov      dword ptr [ebx + 0xc4c], eax                        ; store(0x80dbc4c,0x90000f00) -> "/proc/se"
[main] [INS] [0806fadd] mov      eax, 0x80dcf60                                      ; eax = 0x80dcf60 -> 8048034
[main] [INS] [0806fae3] mov      dword ptr [esp + 8], eax                            ; store(0xff08ed98,0x80dcf60) -> 8048034
[main] [INS] [0806fae7] mov      eax, dword ptr [eax]                                ; eax = 0x8048034 -> 1
[main] [INS] [0806fae9] mov      dword ptr [ebx + 0xbf4], eax                        ; store(0x80dbbf4,0x8048034) -> 1
[main] [INS] [0806faef] mov      eax, 0x80dcf80                                      ; eax = 0x80dcf80 -> 8
[main] [INS] [0806faf5] mov      dword ptr [esp + 0xc], eax                          ; store(0xff08ed9c,0x80dcf80) -> 8
[main] [INS] [0806faf9] mov      eax, dword ptr [eax]                                ; eax = 0x8
[main] [INS] [0806fafb] mov      word ptr [ebx + 0xbfc], ax                          ; store(0x80dbbfc,0x8)
[main] [INS] [0806fb02] rdtsc    
[main] [INS] [0806fb04] mov      ecx, 0x80dcf38                                      ; ecx = 0x80dcf38 -> 0
[main] [INS] [0806fb0a] sub      esp, 0xc                                            ; esp = 0xff08ed84 -> ff08eea4
[main] [INS] [0806fb0d] mov      dword ptr [ecx], eax                                ; store(0x80dcf38,0xe4e0cfa7)
[main] [INS] [0806fb0f] lea      eax, [ebx - 0x2ade1]                                ; eax = 0x80b021f -> "LD_WARN"
[main] [INS] [0806fb15] mov      dword ptr [ecx + 4], edx                            ; store(0x80dcf3c,0x825)
[main] [INS] [0806fb18] push     eax                                                 ; push(0x80b021f) -> "LD_WARN"
[main] [INS] [0806fb19] call     0x804fa60                                           ; call(0x804fa60)
[main] [INS] [0804fa60] <getenv>
[main] [INS] [0804fa60] push     ebp                                                 ; push(0xff08eeac) -> ff08ef6d
[main] [INS] [0804fa61] push     edi                                                 ; push(0xff08eea4) -> ff08ef39
[main] [INS] [0804fa62] push     esi                                                 ; push(0x1)
[main] [INS] [0804fa63] push     ebx                                                 ; push(0x80db000) -> 0
[main] [INS] [0804fa64] call     0x80499f0                                           ; call(0x80499f0)
[main] [INS] [0804fa69] add      ebx, 0x8b597                                        ; ebx = 0x80db000 -> 0
[main] [INS] [0804fa6f] sub      esp, 0x1c                                           ; esp = 0xff08ed50 -> 0
[main] [INS] [0804fa72] mov      edx, dword ptr [esp + 0x30]                         ; edx = 0x80b021f -> "LD_WARN"
[main] [INS] [0804fa76] mov      eax, 0x80dc8bc                                      ; eax = 0x80dc8bc -> ff08eeac
[main] [INS] [0804fa7c] mov      edi, dword ptr [eax]                                ; edi = 0xff08eeac -> ff08ef6d
[main] [INS] [0804fa7e] test     edi, edi                                            ; 0xff08eeac vs 0xff08eeac
[main] [INS] [0804fa80] je       0x804fb48
[main] [INS] [0804fa86] movzx    eax, byte ptr [edx]                                 ; eax = 0x4c
[main] [INS] [0804fa89] test     al, al                                              ; 0x4c vs 0x4c
[main] [INS] [0804fa8b] je       0x804fb48
[main] [INS] [0804fa91] cmp      byte ptr [edx + 1], 0                               ; 0x44 vs 0x0
[main] [INS] [0804fa95] mov      esi, dword ptr [edi]                                ; esi = 0xff08ef6d -> "SHELL=bi"
[main] [INS] [0804fa97] je       0x804fb18
[main] [INS] [0804fa99] sub      esp, 0xc                                            ; esp = 0xff08ed44 -> ":31 UTC "
[main] [INS] [0804fa9c] push     edx                                                 ; push(0x80b021f) -> "LD_WARN"
[main] [INS] [0804fa9d] mov      dword ptr [esp + 0x40], edx                         ; store(0xff08ed80,0x80b021f) -> "LD_WARN"
[main] [INS] [0804faa1] call     0x806b550                                           ; call(0x806b550)
[main] [INS] [0806b550] <strlen>
[main] [INS] [0806b550] mov      eax, dword ptr [esp + 4]                            ; eax = 0x80b021f -> "LD_WARN"
[main] [INS] [0806b554] mov      edx, 3                                              ; edx = 0x3
[main] [INS] [0806b559] and      edx, eax                                            ; edx = 0x3
[main] [INS] [0806b55b] je       0x806b581
[main] [INS] [0806b55d] jp       0x806b576
[main] [INS] [0806b576] cmp      byte ptr [eax], dh                                  ; 0x4c vs 0x0
[main] [INS] [0806b578] je       0x806b606
[main] [INS] [0806b57e] inc      eax                                                 ; eax = 0x80b0220 -> "D_WARN"
[main] [INS] [0806b57f] xor      edx, edx                                            ; edx = 0x0
[main] [INS] [0806b581] mov      ecx, dword ptr [eax]                                ; ecx = 0x41575f44
[main] [INS] [0806b583] add      eax, 4                                              ; eax = 0x80b0224 -> 73004e52
[main] [INS] [0806b586] sub      edx, ecx                                            ; edx = 0xbea8a0bc
[main] [INS] [0806b588] add      ecx, 0xfefefeff                                     ; ecx = 0x40565e43
[main] [INS] [0806b58e] dec      edx                                                 ; edx = 0xbea8a0bb
[main] [INS] [0806b58f] jae      0x806b5e9
[main] [INS] [0806b591] xor      edx, ecx                                            ; edx = 0xfefefef8
[main] [INS] [0806b593] and      edx, 0x1010100                                      ; edx = 0x0
[main] [INS] [0806b599] jne      0x806b5e9
[main] [INS] [0806b59b] mov      ecx, dword ptr [eax]                                ; ecx = 0x73004e52
[main] [INS] [0806b59d] add      eax, 4                                              ; eax = 0x80b0228 -> "etup-vds"
[main] [INS] [0806b5a0] sub      edx, ecx                                            ; edx = 0x8cffb1ae
[main] [INS] [0806b5a2] add      ecx, 0xfefefeff                                     ; ecx = 0x71ff4d51
[main] [INS] [0806b5a8] dec      edx                                                 ; edx = 0x8cffb1ad
[main] [INS] [0806b5a9] jae      0x806b5e9
[main] [INS] [0806b5ab] xor      edx, ecx                                            ; edx = 0xfd00fcfc
[main] [INS] [0806b5ad] and      edx, 0x1010100                                      ; edx = 0x1000000
[main] [INS] [0806b5b3] jne      0x806b5e9
[main] [INS] [0806b5e9] sub      eax, 4                                              ; eax = 0x80b0224 -> 73004e52
[main] [INS] [0806b5ec] sub      ecx, 0xfefefeff                                     ; ecx = 0x73004e52
[main] [INS] [0806b5f2] cmp      cl, 0                                               ; 0x52 vs 0x0
[main] [INS] [0806b5f5] je       0x806b606
[main] [INS] [0806b5f7] inc      eax                                                 ; eax = 0x80b0225 -> 6573004e
[main] [INS] [0806b5f8] test     ch, ch                                              ; 0x4e vs 0x4e
[main] [INS] [0806b5fa] je       0x806b606
[main] [INS] [0806b5fc] shr      ecx, 0x10                                           ; ecx = 0x7300
[main] [INS] [0806b5ff] inc      eax                                                 ; eax = 0x80b0226 -> 74657300
[main] [INS] [0806b600] cmp      cl, 0                                               ; 0x0 vs 0x0
[main] [INS] [0806b603] je       0x806b606
[main] [INS] [0806b606] sub      eax, dword ptr [esp + 4]                            ; eax = 0x7
[main] [INS] [0806b60a] ret      
[main] [INS] [0804faa6] add      esp, 0x10                                           ; esp = 0xff08ed50 -> 0
[main] [INS] [0804faa9] mov      edx, dword ptr [esp + 0x30]                         ; edx = 0x80b021f -> "LD_WARN"
[main] [INS] [0804faad] mov      dword ptr [esp + 0xc], eax                          ; store(0xff08ed5c,0x7)
[main] [INS] [0804fab1] sub      eax, 2                                              ; eax = 0x5
[main] [INS] [0804fab4] movzx    ebp, word ptr [edx]                                 ; ebp = 0x444c
[main] [INS] [0804fab7] mov      dword ptr [esp + 4], eax                            ; store(0xff08ed54,0x5)
[main] [INS] [0804fabb] lea      eax, [edx + 2]                                      ; eax = 0x80b0221 -> "_WARN"
[main] [INS] [0804fabe] mov      dword ptr [esp + 8], eax                            ; store(0xff08ed58,0x80b0221) -> "_WARN"
[main] [INS] [0804fac2] test     esi, esi                                            ; 0xff08ef6d vs 0xff08ef6d
[main] [INS] [0804fac4] je       0x804fb08
[main] [INS] [0804fac6] mov      eax, edi                                            ; eax = 0xff08eeac -> ff08ef6d
[main] [INS] [0804fac8] mov      edi, ebp                                            ; edi = 0x444c
[main] [INS] [0804faca] mov      ebp, eax                                            ; ebp = 0xff08eeac -> ff08ef6d
[main] [INS] [0804facc] jmp      0x804fada                                           ; jmp(0x804fada)
[main] [INS] [0804fada] cmp      di, word ptr [esi]                                  ; 0x444c vs 0x4853
[main] [INS] [0804fadd] jne      0x804fad0
[main] [INS] [0804fad0] add      ebp, 4                                              ; ebp = 0xff08eeb0 -> 0
[main] [INS] [0804fad3] mov      esi, dword ptr [ebp]                                ; esi = 0x0
[main] [INS] [0804fad6] test     esi, esi                                            ; 0x0 vs 0x0
[main] [INS] [0804fad8] je       0x804fb08
[main] [INS] [0804fb08] add      esp, 0x1c                                           ; esp = 0xff08ed6c -> 80db000
[main] [INS] [0804fb0b] mov      eax, esi                                            ; eax = 0x0
[main] [INS] [0804fb0d] pop      ebx                                                 ; ebx = 0x80db000 -> 0
[main] [INS] [0804fb0e] pop      esi                                                 ; esi = 0x1
[main] [INS] [0804fb0f] pop      edi                                                 ; edi = 0xff08eea4 -> ff08ef39
[main] [INS] [0804fb10] pop      ebp                                                 ; ebp = 0xff08eeac -> ff08ef6d
[main] [INS] [0804fb11] ret      
[main] [INS] [0806fb1e] add      esp, 0x10                                           ; esp = 0xff08ed90 -> 0
[main] [INS] [0806fb21] xor      edx, edx                                            ; edx = 0x0
[main] [INS] [0806fb23] test     eax, eax                                            ; 0x0 vs 0x0
[main] [INS] [0806fb25] je       0x806fb2f
[main] [INS] [0806fb2f] mov      eax, 0x80dcf7c                                      ; eax = 0x80dcf7c -> 0
[main] [INS] [0806fb35] mov      edi, 0x80dcf74                                      ; edi = 0x80dcf74 -> 0
[main] [INS] [0806fb3b] mov      dword ptr [eax], edx                                ; store(0x80dcf7c,0x0)
[main] [INS] [0806fb3d] mov      eax, dword ptr [edi]                                ; eax = 0x0
[main] [INS] [0806fb3f] mov      dword ptr [esp], edi                                ; store(0xff08ed90,0x80dcf74) -> 0
[main] [INS] [0806fb42] test     eax, eax                                            ; 0x0 vs 0x0
[main] [INS] [0806fb44] je       0x806fea1
[main] [INS] [0806fea1] sub      esp, 0xc                                            ; esp = 0xff08ed84 -> ff08eea4
[main] [INS] [0806fea4] lea      eax, [ebx - 0x2ad7b]                                ; eax = 0x80b0285 -> "LD_LIBRA"
[main] [INS] [0806feaa] push     eax                                                 ; push(0x80b0285) -> "LD_LIBRA"
[main] [INS] [0806feab] call     0x804fa60                                           ; call(0x804fa60)
[main] [INS] [0806b55f] cmp      byte ptr [eax], dh                                  ; 0x4c vs 0x0
[main] [INS] [0806b561] je       0x806b606
[main] [INS] [0806b567] inc      eax                                                 ; eax = 0x80b0286 -> "D_LIBRAR"
[main] [INS] [0806b568] cmp      byte ptr [eax], dh                                  ; 0x44 vs 0x0
[main] [INS] [0806b56a] je       0x806b606
[main] [INS] [0806b570] inc      eax                                                 ; eax = 0x80b0287 -> "_LIBRARY"
[main] [INS] [0806b571] xor      edx, 2                                              ; edx = 0x3
[main] [INS] [0806b574] je       0x806b581
[main] [INS] [0806b5b5] mov      ecx, dword ptr [eax]                                ; ecx = 0x48544150
[main] [INS] [0806b5b7] add      eax, 4                                              ; eax = 0x80b0294 -> 5f444c00
[main] [INS] [0806b5ba] sub      edx, ecx                                            ; edx = 0xb7abbeb0
[main] [INS] [0806b5bc] add      ecx, 0xfefefeff                                     ; ecx = 0x4753404f
[main] [INS] [0806b5c2] dec      edx                                                 ; edx = 0xb7abbeaf
[main] [INS] [0806b5c3] jae      0x806b5e9
[main] [INS] [0806b5c5] xor      edx, ecx                                            ; edx = 0xf0f8fee0
[main] [INS] [0806b5c7] and      edx, 0x1010100                                      ; edx = 0x0
[main] [INS] [0806b5cd] jne      0x806b5e9
[main] [INS] [0806b5cf] mov      ecx, dword ptr [eax]                                ; ecx = 0x5f444c00
[main] [INS] [0806b5d1] add      eax, 4                                              ; eax = 0x80b0298 -> "BIND_NOW"
[main] [INS] [0806b5d4] sub      edx, ecx                                            ; edx = 0xa0bbb400
[main] [INS] [0806b5d6] add      ecx, 0xfefefeff                                     ; ecx = 0x5e434aff
[main] [INS] [0806b5dc] dec      edx                                                 ; edx = 0xa0bbb3ff
[main] [INS] [0806b5dd] jae      0x806b5e9
[main] [INS] [0806b5df] xor      edx, ecx                                            ; edx = 0xfef8f900
[main] [INS] [0806b5e1] and      edx, 0x1010100                                      ; edx = 0x100
[main] [INS] [0806b5e7] je       0x806b581
[main] [INS] [0806feb0] mov      dword ptr [esp], eax                                ; store(0xff08ed80,0x0)
[main] [INS] [0806feb3] call     0x8096be0                                           ; call(0x8096be0)
[main] [INS] [08096be0] <_dl_init_paths>
[main] [INS] [08096be0] push     ebp                                                 ; push(0xff08eeac) -> ff08ef6d
[main] [INS] [08096be1] mov      ebp, esp                                            ; ebp = 0xff08ed78 -> ff08eeac
[main] [INS] [08096be3] push     edi                                                 ; push(0x80dcf74) -> 0
[main] [INS] [08096be4] push     esi                                                 ; push(0x1)
[main] [INS] [08096be5] push     ebx                                                 ; push(0x80db000) -> 0
[main] [INS] [08096be6] call     0x80499f0                                           ; call(0x80499f0)
[main] [INS] [08096beb] add      ebx, 0x44415                                        ; ebx = 0x80db000 -> 0
[main] [INS] [08096bf1] sub      esp, 0x2c                                           ; esp = 0xff08ed40 -> 80b0285
[main] [INS] [08096bf4] lea      eax, [ebx - 0x44]                                   ; eax = 0x80dafbc -> 0
[main] [INS] [08096bfa] push     eax                                                 ; push(0x80dafbc) -> 0
[main] [INS] [08096bfb] lea      eax, [ebx - 0x40]                                   ; eax = 0x80dafc0 -> 0
[main] [INS] [08096c01] push     eax                                                 ; push(0x80dafc0) -> 0
[main] [INS] [08096c02] mov      eax, 0x80dcf24                                      ; eax = 0x80dcf24 -> 0
[main] [INS] [08096c08] push     dword ptr [eax]                                     ; push(0x0)
[main] [INS] [08096c0a] mov      eax, 0x80dcf48                                      ; eax = 0x80dcf48 -> 80ad041
[main] [INS] [08096c10] push     dword ptr [eax]                                     ; push(0x80ad041) -> "i686"
[main] [INS] [08096c12] call     0x809bc50                                           ; call(0x809bc50)
[main] [INS] [0809bc50] <_dl_important_hwcaps>
[main] [INS] [0809bc50] push     ebp                                                 ; push(0xff08ed78) -> ff08eeac
[main] [INS] [0809bc51] mov      ebp, esp                                            ; ebp = 0xff08ed28 -> ff08ed78
[main] [INS] [0809bc53] push     edi                                                 ; push(0x80dcf74) -> 0
[main] [INS] [0809bc54] call     0x804a497                                           ; call(0x804a497)
[main] [INS] [0809bc59] add      edi, 0x3f3a7                                        ; edi = 0x80db000 -> 0
[main] [INS] [0809bc5f] push     esi                                                 ; push(0x1)
[main] [INS] [0809bc60] lea      eax, [ebp - 0x20]                                   ; eax = 0xff08ed08 -> 0
[main] [INS] [0809bc63] push     ebx                                                 ; push(0x80db000) -> 0
[main] [INS] [0809bc64] sub      esp, 0x70                                           ; esp = 0xff08ecac -> 0
[main] [INS] [0809bc67] mov      dword ptr [ebp - 0x6c], eax                         ; store(0xff08ecbc,0xff08ed08) -> 0
[main] [INS] [0809bc6a] push     0                                                   ; push(0x0)
[main] [INS] [0809bc6c] push     eax                                                 ; push(0xff08ed08) -> 0
[main] [INS] [0809bc6d] mov      ebx, edi                                            ; ebx = 0x80db000 -> 0
[main] [INS] [0809bc6f] push     0x10                                                ; push(0x10)
[main] [INS] [0809bc71] mov      dword ptr [ebp - 0x44], edi                         ; store(0xff08ece4,0x80db000) -> 0
[main] [INS] [0809bc74] call     0x806f550                                           ; call(0x806f550)
[main] [INS] [0806f5c0] mov      ebp, dword ptr [edi + 0x1c]                         ; ebp = 0x0
[main] [INS] [0806f5c3] mov      edi, dword ptr [edi + 0x18]                         ; edi = 0x1
[main] [INS] [0806f5c6] mov      dword ptr [esi + 4], ebp                            ; store(0xff08ed0c,0x0)
[main] [INS] [0806f5c9] mov      dword ptr [esi], edi                                ; store(0xff08ed08,0x1)
[main] [INS] [0806f5cb] jmp      0x806f586                                           ; jmp(0x806f586)
[main] [INS] [0809bc79] mov      eax, dword ptr [ebp - 0x20]                         ; eax = 0x1
[main] [INS] [0809bc7c] mov      ebx, dword ptr [ebp - 0x1c]                         ; ebx = 0x0
[main] [INS] [0809bc7f] add      esp, 0x10                                           ; esp = 0xff08ecb0 -> 0
[main] [INS] [0809bc82] mov      edi, 0x80dc8e8                                      ; edi = 0x80dc8e8 -> 1
[main] [INS] [0809bc88] mov      dword ptr [ebp - 0x60], eax                         ; store(0xff08ecc8,0x1)
[main] [INS] [0809bc8b] mov      dword ptr [ebp - 0x64], ebx                         ; store(0xff08ecc4,0x0)
[main] [INS] [0809bc8e] and      eax, dword ptr [edi]                                ; eax = 0x1
[main] [INS] [0809bc90] and      ebx, dword ptr [edi + 4]                            ; ebx = 0x0
[main] [INS] [0809bc93] mov      dword ptr [ebp - 0x50], eax                         ; store(0xff08ecd8,0x1)
[main] [INS] [0809bc96] mov      eax, dword ptr [ebp + 8]                            ; eax = 0x80ad041 -> "i686"
[main] [INS] [0809bc99] mov      esi, dword ptr [ebp - 0x50]                         ; esi = 0x1
[main] [INS] [0809bc9c] mov      dword ptr [ebp - 0x4c], ebx                         ; store(0xff08ecdc,0x0)
[main] [INS] [0809bc9f] xor      ebx, ebx                                            ; ebx = 0x0
[main] [INS] [0809bca1] mov      dword ptr [ebp - 0x68], edi                         ; store(0xff08ecc0,0x80dc8e8) -> 1
[main] [INS] [0809bca4] mov      edi, dword ptr [ebp - 0x4c]                         ; edi = 0x0
[main] [INS] [0809bca7] test     eax, eax                                            ; 0x80ad041 vs 0x80ad041
[main] [INS] [0809bca9] mov      edx, edi                                            ; edx = 0x0
[main] [INS] [0809bcab] setne    bl                                                  ; bl = 0x1
[main] [INS] [0809bcae] or       edx, esi                                            ; edx = 0x1
[main] [INS] [0809bcb0] mov      dword ptr [ebp - 0x5c], ebx                         ; store(0xff08eccc,0x1)
[main] [INS] [0809bcb3] je       0x809bd0c
[main] [INS] [0809bcb5] xor      ecx, ecx                                            ; ecx = 0x0
[main] [INS] [0809bcb7] lea      esi, [esi]                                          ; esi = 0x1
[main] [INS] [0809bcbe] nop      
[main] [INS] [0809bcc0] mov      edx, edi                                            ; edx = 0x0
[main] [INS] [0809bcc2] mov      eax, esi                                            ; eax = 0x1
[main] [INS] [0809bcc4] shrd     eax, edx, cl
[main] [INS] [0809bcc7] shr      edx, cl                                             ; edx = 0x0
[main] [INS] [0809bcc9] test     cl, 0x20                                            ; 0x0 vs 0x20
[main] [INS] [0809bccc] je       0x809bcd0
[main] [INS] [0809bcd0] and      eax, 1                                              ; eax = 0x1
[main] [INS] [0809bcd3] mov      edx, 0xffffffff                                     ; edx = 0xffffffff
[main] [INS] [0809bcd8] cmp      eax, 1                                              ; 0x1 vs 0x1
[main] [INS] [0809bcdb] mov      eax, 0xffffffff                                     ; eax = 0xffffffff
[main] [INS] [0809bce0] sbb      ebx, -1                                             ; ebx = 0x2
[main] [INS] [0809bce3] add      ecx, 1                                              ; ecx = 0x1
[main] [INS] [0809bce6] shld     edx, eax, cl
[main] [INS] [0809bce9] shl      eax, cl                                             ; eax = 0xfffffffe
[main] [INS] [0809bceb] test     cl, 0x20                                            ; 0x1 vs 0x20
[main] [INS] [0809bcee] je       0x809bcf4
[main] [INS] [0809bcf4] mov      dword ptr [ebp - 0x2c], edx                         ; store(0xff08ecfc,0xffffffff)
[main] [INS] [0809bcf7] mov      edx, eax                                            ; edx = 0xfffffffe
[main] [INS] [0809bcf9] and      edx, esi                                            ; edx = 0x0
[main] [INS] [0809bcfb] mov      dword ptr [ebp - 0x30], eax                         ; store(0xff08ecf8,0xfffffffe)
[main] [INS] [0809bcfe] mov      eax, edx                                            ; eax = 0x0
[main] [INS] [0809bd00] mov      edx, dword ptr [ebp - 0x2c]                         ; edx = 0xffffffff
[main] [INS] [0809bd03] and      edx, edi                                            ; edx = 0x0
[main] [INS] [0809bd05] or       edx, eax                                            ; edx = 0x0
[main] [INS] [0809bd07] jne      0x809bcc0
[main] [INS] [0809bd09] mov      dword ptr [ebp - 0x5c], ebx                         ; store(0xff08eccc,0x2)
[main] [INS] [0809bd0c] mov      eax, dword ptr [ebp - 0x44]                         ; eax = 0x80db000 -> 0
[main] [INS] [0809bd0f] mov      dword ptr [ebp - 0x38], 0                           ; store(0xff08ecf0,0x0)
[main] [INS] [0809bd16] mov      eax, 0x80dcf58                                      ; eax = 0x80dcf58 -> 0
[main] [INS] [0809bd1c] mov      ebx, dword ptr [eax]                                ; ebx = 0x0
[main] [INS] [0809bd1e] mov      dword ptr [ebp - 0x54], ebx                         ; store(0xff08ecd4,0x0)
[main] [INS] [0809bd21] test     ebx, ebx                                            ; 0x0 vs 0x0
[main] [INS] [0809bd23] je       0x809be08
[main] [INS] [0809be08] mov      edi, dword ptr [ebp - 0x44]                         ; edi = 0x80db000 -> 0
[main] [INS] [0809be0b] mov      eax, 0x21                                           ; eax = 0x21
[main] [INS] [0809be10] xor      ecx, ecx                                            ; ecx = 0x0
[main] [INS] [0809be12] lea      ebx, [edi - 0x1bda0]                                ; ebx = 0x80bf260 -> "/etc/ld."
[main] [INS] [0809be18] call     dword ptr gs:[0x10]                                 ; call(0x806f5d0)
[main] [SYSCALL] access ( pathname=0x80bf260 ("/etc/ld.so.nohwcap"), mode=0x0 ) -> -1
[main] [INS] [0809be1f] cmp      eax, 0xfffff000                                     ; 0xffffffff vs 0xfffff000
[main] [INS] [0809be24] ja       0x809bea4
[main] [INS] [0809bea4] mov      eax, dword ptr [ebp - 0x5c]                         ; eax = 0x2
[main] [INS] [0809bea7] mov      esi, dword ptr [ebp - 0x54]                         ; esi = 0x0
[main] [INS] [0809beaa] add      eax, 1                                              ; eax = 0x3
[main] [INS] [0809bead] mov      dword ptr [ebp - 0x58], eax                         ; store(0xff08ecd0,0x3)
[main] [INS] [0809beb0] lea      eax, [eax*8 + 0x1b]                                 ; eax = 0x33
[main] [INS] [0809beb7] and      eax, 0xfffffff0                                     ; eax = 0x30
[main] [INS] [0809beba] sub      esp, eax                                            ; esp = 0xff08ec80 -> 0
[main] [INS] [0809bebc] lea      eax, [esp + 0xf]                                    ; eax = 0xff08ec8f -> 108
[main] [INS] [0809bec0] and      eax, 0xfffffff0                                     ; eax = 0xff08ec80 -> 0
[main] [INS] [0809bec3] mov      edi, eax                                            ; edi = 0xff08ec80 -> 0
[main] [INS] [0809bec5] test     esi, esi                                            ; 0x0 vs 0x0
[main] [INS] [0809bec7] je       0x809c316
[main] [INS] [0809c316] mov      edx, edi                                            ; edx = 0xff08ec80 -> 0
[main] [INS] [0809c318] mov      ebx, 1                                              ; ebx = 0x1
[main] [INS] [0809c31d] mov      dword ptr [ebp - 0x30], 0                           ; store(0xff08ecf8,0x0)
[main] [INS] [0809c324] jmp      0x809bf7e                                           ; jmp(0x809bf7e)
[main] [INS] [0809bf7e] mov      eax, dword ptr [ebp - 0x50]                         ; eax = 0x1
[main] [INS] [0809bf81] mov      ecx, dword ptr [ebp - 0x4c]                         ; ecx = 0x0
[main] [INS] [0809bf84] or       ecx, eax                                            ; ecx = 0x1
[main] [INS] [0809bf86] je       0x809c05d
[main] [INS] [0809bf8c] mov      eax, dword ptr [ebp - 0x30]                         ; eax = 0x0
[main] [INS] [0809bf8f] mov      dword ptr [ebp - 0x34], edi                         ; store(0xff08ecf4,0xff08ec80) -> 0
[main] [INS] [0809bf92] xor      ecx, ecx                                            ; ecx = 0x0
[main] [INS] [0809bf94] add      eax, 1                                              ; eax = 0x1
[main] [INS] [0809bf97] mov      dword ptr [ebp - 0x38], eax                         ; store(0xff08ecf0,0x1)
[main] [INS] [0809bf9a] mov      eax, dword ptr [ebp - 0x44]                         ; eax = 0x80db000 -> 0
[main] [INS] [0809bf9d] mov      eax, 0x80b0204                                      ; eax = 0x80b0204 -> "sse2"
[main] [INS] [0809bfa3] mov      dword ptr [ebp - 0x48], eax                         ; store(0xff08ece0,0x80b0204) -> "sse2"
[main] [INS] [0809bfa6] lea      esi, [esi]                                          ; esi = 0x0
[main] [INS] [0809bfad] lea      esi, [esi]                                          ; esi = 0x0
[main] [INS] [0809bfb0] mov      eax, dword ptr [ebp - 0x30]                         ; eax = 0x0
[main] [INS] [0809bfb3] mov      edx, dword ptr [ebp - 0x4c]                         ; edx = 0x0
[main] [INS] [0809bfb6] mov      edi, dword ptr [ebp - 0x34]                         ; edi = 0xff08ec80 -> 0
[main] [INS] [0809bfb9] lea      esi, [eax*8]                                        ; esi = 0x0
[main] [INS] [0809bfc0] mov      eax, dword ptr [ebp - 0x50]                         ; eax = 0x1
[main] [INS] [0809bfc3] add      edi, esi                                            ; edi = 0xff08ec80 -> 0
[main] [INS] [0809bfc5] shrd     eax, edx, cl
[main] [INS] [0809bfc8] shr      edx, cl                                             ; edx = 0x0
[main] [INS] [0809bfca] test     cl, 0x20                                            ; 0x0 vs 0x20
[main] [INS] [0809bfcd] cmovne   eax, edx                                            ; eax = 0x1
[main] [INS] [0809bfd0] and      eax, 1                                              ; eax = 0x1
[main] [INS] [0809bfd3] je       0x809c050
[main] [INS] [0809bfd5] sub      esp, 0xc                                            ; esp = 0xff08ec74 -> 0
[main] [INS] [0809bfd8] lea      eax, [ecx + ecx*8]                                  ; eax = 0x0
[main] [INS] [0809bfdb] add      eax, dword ptr [ebp - 0x48]                         ; eax = 0x80b0204 -> "sse2"
[main] [INS] [0809bfde] mov      ebx, dword ptr [ebp - 0x44]                         ; ebx = 0x80db000 -> 0
[main] [INS] [0809bfe1] mov      dword ptr [edi], eax                                ; store(0xff08ec80,0x80b0204) -> "sse2"
[main] [INS] [0809bfe3] push     eax                                                 ; push(0x80b0204) -> "sse2"
[main] [INS] [0809bfe4] mov      dword ptr [ebp - 0x40], ecx                         ; store(0xff08ece8,0x0)
[main] [INS] [0809bfe7] call     0x806b550                                           ; call(0x806b550)
[main] [INS] [0809bfec] mov      ecx, dword ptr [ebp - 0x40]                         ; ecx = 0x0
[main] [INS] [0809bfef] xor      edx, edx                                            ; edx = 0x0
[main] [INS] [0809bff1] xor      ebx, ebx                                            ; ebx = 0x0
[main] [INS] [0809bff3] mov      dword ptr [edi + 4], eax                            ; store(0xff08ec84,0x4)
[main] [INS] [0809bff6] mov      eax, 1                                              ; eax = 0x1
[main] [INS] [0809bffb] add      esp, 0x10                                           ; esp = 0xff08ec80 -> ""
[main] [INS] [0809bffe] shld     edx, eax, cl
[main] [INS] [0809c001] shl      eax, cl                                             ; eax = 0x1
[main] [INS] [0809c003] test     cl, 0x20                                            ; 0x0 vs 0x20
[main] [INS] [0809c006] cmovne   edx, eax                                            ; edx = 0x0
[main] [INS] [0809c009] cmovne   eax, ebx                                            ; eax = 0x1
[main] [INS] [0809c00c] mov      ebx, dword ptr [ebp - 0x50]                         ; ebx = 0x1
[main] [INS] [0809c00f] add      ecx, 1                                              ; ecx = 0x1
[main] [INS] [0809c012] xor      ebx, eax                                            ; ebx = 0x0
[main] [INS] [0809c014] mov      dword ptr [ebp - 0x3c], edx                         ; store(0xff08ecec,0x0)
[main] [INS] [0809c017] mov      edx, dword ptr [ebp - 0x34]                         ; edx = 0xff08ec80 -> ""
[main] [INS] [0809c01a] mov      dword ptr [ebp - 0x40], eax                         ; store(0xff08ece8,0x1)
[main] [INS] [0809c01d] mov      eax, ebx                                            ; eax = 0x0
[main] [INS] [0809c01f] mov      ebx, dword ptr [ebp - 0x3c]                         ; ebx = 0x0
[main] [INS] [0809c022] xor      ebx, dword ptr [ebp - 0x4c]                         ; ebx = 0x0
[main] [INS] [0809c025] lea      esi, [edx + esi + 8]                                ; esi = 0xff08ec88 -> 0
[main] [INS] [0809c029] mov      edi, ebx                                            ; edi = 0x0
[main] [INS] [0809c02b] mov      ebx, dword ptr [ebp - 0x30]                         ; ebx = 0x0
[main] [INS] [0809c02e] mov      edx, edi                                            ; edx = 0x0
[main] [INS] [0809c030] add      ebx, 2                                              ; ebx = 0x2
[main] [INS] [0809c033] or       edx, eax                                            ; edx = 0x0
[main] [INS] [0809c035] je       0x809c058
[main] [INS] [0809c058] mov      edi, dword ptr [ebp - 0x34]                         ; edi = 0xff08ec80 -> ""
[main] [INS] [0809c05b] mov      edx, esi                                            ; edx = 0xff08ec88 -> 0
[main] [INS] [0809c05d] mov      ecx, dword ptr [ebp + 8]                            ; ecx = 0x80ad041 -> "i686"
[main] [INS] [0809c060] test     ecx, ecx                                            ; 0x80ad041 vs 0x80ad041
[main] [INS] [0809c062] je       0x809c075
[main] [INS] [0809c064] mov      eax, dword ptr [ebp + 8]                            ; eax = 0x80ad041 -> "i686"
[main] [INS] [0809c067] mov      dword ptr [edx], eax                                ; store(0xff08ec88,0x80ad041) -> "i686"
[main] [INS] [0809c069] mov      eax, dword ptr [ebp + 0xc]                          ; eax = 0x0
[main] [INS] [0809c06c] mov      dword ptr [edx + 4], eax                            ; store(0xff08ec8c,0x0)
[main] [INS] [0809c06f] lea      edx, [edi + ebx*8]                                  ; edx = 0xff08ec90 -> 1
[main] [INS] [0809c072] add      ebx, 1                                              ; ebx = 0x3
[main] [INS] [0809c075] mov      eax, dword ptr [ebp - 0x44]                         ; eax = 0x80db000 -> 0
[main] [INS] [0809c078] mov      dword ptr [edx + 4], 3                              ; store(0xff08ec94,0x3)
[main] [INS] [0809c07f] lea      eax, [eax - 0x1bd8d]                                ; eax = 0x80bf273 -> "tls"
[main] [INS] [0809c085] mov      dword ptr [edx], eax                                ; store(0xff08ec90,0x80bf273) -> "tls"
[main] [INS] [0809c087] cmp      dword ptr [ebp - 0x58], ebx                         ; 0x3 vs 0x3
[main] [INS] [0809c08a] jne      0x809c415
[main] [INS] [0809c090] mov      eax, dword ptr [edi + 4]                            ; eax = 0x4
[main] [INS] [0809c093] cmp      dword ptr [ebp - 0x58], 1                           ; 0x3 vs 0x1
[main] [INS] [0809c097] mov      dword ptr [ebp - 0x38], eax                         ; store(0xff08ecf0,0x4)
[main] [INS] [0809c09a] je       0x809c335
[main] [INS] [0809c0a0] mov      eax, dword ptr [ebp - 0x58]                         ; eax = 0x3
[main] [INS] [0809c0a3] mov      esi, dword ptr [ebp - 0x38]                         ; esi = 0x4
[main] [INS] [0809c0a6] lea      ecx, [eax*8 - 8]                                    ; ecx = 0x10
[main] [INS] [0809c0ad] lea      ebx, [edi + ecx]                                    ; ebx = 0xff08ec90 -> 80bf273
[main] [INS] [0809c0b0] mov      dword ptr [ebp - 0x30], ebx                         ; store(0xff08ecf8,0xff08ec90) -> 80bf273
[main] [INS] [0809c0b3] mov      ebx, dword ptr [ebx + 4]                            ; ebx = 0x3
[main] [INS] [0809c0b6] mov      dword ptr [ebp - 0x50], ebx                         ; store(0xff08ecd8,0x3)
[main] [INS] [0809c0b9] lea      edx, [ebx + esi + 2]                                ; edx = 0x9
[main] [INS] [0809c0bd] cmp      eax, 2                                              ; 0x3 vs 0x2
[main] [INS] [0809c0c0] jbe      0x809c0f1
[main] [INS] [0809c0c2] add      edx, edx                                            ; edx = 0x12
[main] [INS] [0809c0c4] lea      eax, [edi + 0xc]                                    ; eax = 0xff08ec8c -> 0
[main] [INS] [0809c0c7] lea      ebx, [edi + ecx + 4]                                ; ebx = 0xff08ec94 -> 3
[main] [INS] [0809c0cb] lea      esi, [esi]                                          ; esi = 0x4
[main] [INS] [0809c0cf] nop      
[main] [INS] [0809c0d0] mov      ecx, dword ptr [eax]                                ; ecx = 0x0
[main] [INS] [0809c0d2] add      eax, 8                                              ; eax = 0xff08ec94 -> 3
[main] [INS] [0809c0d5] lea      edx, [edx + ecx + 1]                                ; edx = 0x13
[main] [INS] [0809c0d9] cmp      ebx, eax                                            ; 0xff08ec94 vs 0xff08ec94
[main] [INS] [0809c0db] jne      0x809c0d0
[main] [INS] [0809c0dd] mov      ebx, dword ptr [ebp - 0x58]                         ; ebx = 0x3
[main] [INS] [0809c0e0] cmp      ebx, 3                                              ; 0x3 vs 0x3
[main] [INS] [0809c0e3] jne      0x809c36f
[main] [INS] [0809c0e9] mov      eax, dword ptr [ebp - 0x58]                         ; eax = 0x3
[main] [INS] [0809c0ec] lea      ecx, [eax - 3]                                      ; ecx = 0x0
[main] [INS] [0809c0ef] shl      edx, cl                                             ; edx = 0x13
[main] [INS] [0809c0f1] mov      ebx, dword ptr [ebp - 0x58]                         ; ebx = 0x3
[main] [INS] [0809c0f4] mov      eax, 1                                              ; eax = 0x1
[main] [INS] [0809c0f9] sub      esp, 0xc                                            ; esp = 0xff08ec74 -> 0
[main] [INS] [0809c0fc] mov      ecx, ebx                                            ; ecx = 0x3
[main] [INS] [0809c0fe] shl      eax, cl                                             ; eax = 0x8
[main] [INS] [0809c100] mov      ecx, dword ptr [ebp + 0x10]                         ; ecx = 0x80dafc0 -> 0
[main] [INS] [0809c103] mov      dword ptr [ebp - 0x40], eax                         ; store(0xff08ece8,0x8)
[main] [INS] [0809c106] mov      dword ptr [ecx], eax                                ; store(0x80dafc0,0x8)
[main] [INS] [0809c108] mov      ecx, ebx                                            ; ecx = 0x3
[main] [INS] [0809c10a] mov      eax, 8                                              ; eax = 0x8
[main] [INS] [0809c10f] mov      ebx, dword ptr [ebp - 0x44]                         ; ebx = 0x80db000 -> 0
[main] [INS] [0809c112] shl      eax, cl                                             ; eax = 0x40
[main] [INS] [0809c114] add      edx, eax                                            ; edx = 0x53
[main] [INS] [0809c116] mov      esi, eax                                            ; esi = 0x40
[main] [INS] [0809c118] push     edx                                                 ; push(0x53)
[main] [INS] [0809c119] call     0x805ce20                                           ; call(0x805ce20)
[main] [INS] [0805ce7d] cmp      ebp, dword ptr [ebx + 0x4f0]                        ; 0x5 vs 0x40
[main] [INS] [0805ce83] jb       0x805cf40
[main] [INS] [0809c11e] add      esp, 0x10                                           ; esp = 0xff08ec80 -> ""
[main] [INS] [0809c121] mov      dword ptr [ebp - 0x34], eax                         ; store(0xff08ecf4,0x90000f10) -> 0
[main] [INS] [0809c124] test     eax, eax                                            ; 0x90000f10 vs 0x90000f10
[main] [INS] [0809c126] je       0x809c35a
[main] [INS] [0809c12c] mov      ebx, dword ptr [ebp - 0x34]                         ; ebx = 0x90000f10 -> 0
[main] [INS] [0809c12f] mov      ecx, dword ptr [edi]                                ; ecx = 0x80b0204 -> "sse2"
[main] [INS] [0809c131] mov      edx, 1                                              ; edx = 0x1
[main] [INS] [0809c136] lea      eax, [ebx + esi]                                    ; eax = 0x90000f50 -> 0
[main] [INS] [0809c139] mov      dword ptr [ebp - 0x48], ecx                         ; store(0xff08ece0,0x80b0204) -> "sse2"
[main] [INS] [0809c13c] mov      dword ptr [ebx], eax                                ; store(0x90000f10,0x90000f50) -> 0
[main] [INS] [0809c13e] mov      dword ptr [ebx + 8], eax                            ; store(0x90000f18,0x90000f50) -> 0
[main] [INS] [0809c141] mov      ebx, dword ptr [ebp - 0x58]                         ; ebx = 0x3
[main] [INS] [0809c144] lea      esi, [ebx - 1]                                      ; esi = 0x2
[main] [INS] [0809c147] mov      ecx, esi                                            ; ecx = 0x2
[main] [INS] [0809c149] mov      dword ptr [ebp - 0x5c], esi                         ; store(0xff08eccc,0x2)
[main] [INS] [0809c14c] shl      edx, cl                                             ; edx = 0x4
[main] [INS] [0809c14e] cmp      ebx, 2                                              ; 0x3 vs 0x2
[main] [INS] [0809c151] je       0x809c3e0
[main] [INS] [0809c157] mov      ebx, dword ptr [ebp - 0x30]                         ; ebx = 0xff08ec90 -> 80bf273
[main] [INS] [0809c15a] mov      dword ptr [ebp - 0x60], esi                         ; store(0xff08ecc8,0x2)
[main] [INS] [0809c15d] mov      esi, edx                                            ; esi = 0x4
[main] [INS] [0809c15f] mov      ebx, dword ptr [ebx]                                ; ebx = 0x80bf273 -> "tls"
[main] [INS] [0809c161] mov      dword ptr [ebp - 0x54], ebx                         ; store(0xff08ecd4,0x80bf273) -> "tls"
[main] [INS] [0809c164] mov      ebx, dword ptr [ebp - 0x58]                         ; ebx = 0x3
[main] [INS] [0809c167] sub      ebx, 2                                              ; ebx = 0x1
[main] [INS] [0809c16a] mov      dword ptr [ebp - 0x58], ebx                         ; store(0xff08ecd0,0x1)
[main] [INS] [0809c16d] lea      esi, [esi]                                          ; esi = 0x4
[main] [INS] [0809c170] sub      esp, 4                                              ; esp = 0xff08ec7c -> 0
[main] [INS] [0809c173] push     dword ptr [ebp - 0x50]                              ; push(0x3)
[main] [INS] [0809c176] mov      ebx, dword ptr [ebp - 0x44]                         ; ebx = 0x80db000 -> 0
[main] [INS] [0809c179] sub      esi, 2                                              ; esi = 0x2
[main] [INS] [0809c17c] push     dword ptr [ebp - 0x54]                              ; push(0x80bf273) -> "tls"
[main] [INS] [0809c17f] push     eax                                                 ; push(0x90000f50) -> 0
[main] [INS] [0809c180] call     0x806b1a0                                           ; call(0x806b1a0)
[main] [INS] [0806b1b5] movsb    byte ptr es:[edi], byte ptr [esi]                   ; store(0x90000f51,0x6c)
[main] [INS] [0809c185] mov      ecx, dword ptr [ebp - 0x58]                         ; ecx = 0x1
[main] [INS] [0809c188] mov      edx, edi                                            ; edx = 0xff08ec80 -> ""
[main] [INS] [0809c18a] add      esp, 0x10                                           ; esp = 0xff08ec80 -> ""
[main] [INS] [0809c18d] mov      byte ptr [eax], 0x2f                                ; store(0x90000f53,0x2f)
[main] [INS] [0809c190] mov      edi, esi                                            ; edi = 0x2
[main] [INS] [0809c192] add      eax, 1                                              ; eax = 0x90000f54 -> 0
[main] [INS] [0809c195] mov      esi, ecx                                            ; esi = 0x1
[main] [INS] [0809c197] jmp      0x809c1a5                                           ; jmp(0x809c1a5)
[main] [INS] [0809c1a5] mov      ebx, 1                                              ; ebx = 0x1
[main] [INS] [0809c1aa] mov      ecx, esi                                            ; ecx = 0x1
[main] [INS] [0809c1ac] shl      ebx, cl                                             ; ebx = 0x2
[main] [INS] [0809c1ae] test     ebx, edi                                            ; 0x2 vs 0x2
[main] [INS] [0809c1b0] je       0x809c1a0
[main] [INS] [0809c1b2] sub      esp, 4                                              ; esp = 0xff08ec7c -> 0
[main] [INS] [0809c1b5] push     dword ptr [edx + esi*8 + 4]                         ; push(0x0)
[main] [INS] [0809c1b9] mov      ebx, dword ptr [ebp - 0x44]                         ; ebx = 0x80db000 -> 0
[main] [INS] [0809c1bc] push     dword ptr [edx + esi*8]                             ; push(0x80ad041) -> "i686"
[main] [INS] [0809c1bf] push     eax                                                 ; push(0x90000f54) -> 0
[main] [INS] [0809c1c0] mov      dword ptr [ebp - 0x30], edx                         ; store(0xff08ecf8,0xff08ec80) -> ""
[main] [INS] [0809c1c3] call     0x806b1a0                                           ; call(0x806b1a0)
[main] [INS] [0809c1c8] add      esp, 0x10                                           ; esp = 0xff08ec80 -> ""
[main] [INS] [0809c1cb] mov      edx, dword ptr [ebp - 0x30]                         ; edx = 0xff08ec80 -> ""
[main] [INS] [0809c1ce] mov      byte ptr [eax], 0x2f                                ; store(0x90000f54,0x2f)
[main] [INS] [0809c1d1] add      eax, 1                                              ; eax = 0x90000f55 -> 0
[main] [INS] [0809c1d4] sub      esi, 1                                              ; esi = 0x0
[main] [INS] [0809c1d7] jne      0x809c1a5
[main] [INS] [0809c1d9] sub      esp, 4                                              ; esp = 0xff08ec7c -> 0
[main] [INS] [0809c1dc] push     dword ptr [ebp - 0x38]                              ; push(0x4)
[main] [INS] [0809c1df] mov      ebx, dword ptr [ebp - 0x44]                         ; ebx = 0x80db000 -> 0
[main] [INS] [0809c1e2] mov      esi, edi                                            ; esi = 0x2
[main] [INS] [0809c1e4] push     dword ptr [ebp - 0x48]                              ; push(0x80b0204) -> "sse2"
[main] [INS] [0809c1e7] mov      edi, edx                                            ; edi = 0xff08ec80 -> ""
[main] [INS] [0809c1e9] push     eax                                                 ; push(0x90000f55) -> 0
[main] [INS] [0809c1ea] call     0x806b1a0                                           ; call(0x806b1a0)
[main] [INS] [0809c1ef] add      esp, 0x10                                           ; esp = 0xff08ec80 -> ""
[main] [INS] [0809c1f2] mov      byte ptr [eax], 0x2f                                ; store(0x90000f59,0x2f)
[main] [INS] [0809c1f5] add      eax, 1                                              ; eax = 0x90000f5a -> 0
[main] [INS] [0809c1f8] test     esi, esi                                            ; 0x2 vs 0x2
[main] [INS] [0809c1fa] jne      0x809c170
[main] [INS] [0809c1a0] sub      esi, 1                                              ; esi = 0x0
[main] [INS] [0809c1a3] je       0x809c1d9
[main] [INS] [0809c200] mov      eax, dword ptr [ebp - 0x40]                         ; eax = 0x8
[main] [INS] [0809c203] mov      esi, dword ptr [ebp - 0x60]                         ; esi = 0x2
[main] [INS] [0809c206] test     eax, eax                                            ; 0x8 vs 0x8
[main] [INS] [0809c208] je       0x809c227
[main] [INS] [0809c20a] mov      edx, dword ptr [ebp - 0x40]                         ; edx = 0x8
[main] [INS] [0809c20d] mov      ecx, dword ptr [ebp - 0x34]                         ; ecx = 0x90000f10 -> 90000f50
[main] [INS] [0809c210] xor      eax, eax                                            ; eax = 0x0
[main] [INS] [0809c212] lea      esi, [esi]                                          ; esi = 0x2
[main] [INS] [0809c218] mov      dword ptr [ecx + eax*8 + 4], 0                      ; store(0x90000f14,0x0)
[main] [INS] [0809c220] add      eax, 1                                              ; eax = 0x1
[main] [INS] [0809c223] cmp      eax, edx                                            ; 0x1 vs 0x8
[main] [INS] [0809c225] jb       0x809c218
[main] [INS] [0809c227] mov      ecx, esi                                            ; ecx = 0x2
[main] [INS] [0809c229] lea      esi, [esi]                                          ; esi = 0x2
[main] [INS] [0809c230] mov      ebx, dword ptr [ebp - 0x40]                         ; ebx = 0x8
[main] [INS] [0809c233] mov      esi, 1                                              ; esi = 0x1
[main] [INS] [0809c238] mov      edx, dword ptr [ebp - 0x34]                         ; edx = 0x90000f10 -> 90000f50
[main] [INS] [0809c23b] shl      esi, cl                                             ; esi = 0x4
[main] [INS] [0809c23d] mov      eax, ebx                                            ; eax = 0x8
[main] [INS] [0809c23f] test     ebx, ebx                                            ; 0x8 vs 0x8
[main] [INS] [0809c241] je       0x809c272
[main] [INS] [0809c243] mov      dword ptr [ebp - 0x30], ecx                         ; store(0xff08ecf8,0x2)
[main] [INS] [0809c246] sub      eax, 1                                              ; eax = 0x7
[main] [INS] [0809c249] add      edx, 8                                              ; edx = 0x90000f18 -> 90000f50
[main] [INS] [0809c24c] test     esi, eax                                            ; 0x4 vs 0x7
[main] [INS] [0809c24e] je       0x809c26b
[main] [INS] [0809c250] mov      ecx, dword ptr [ebp - 0x30]                         ; ecx = 0x2
[main] [INS] [0809c253] sub      eax, 1                                              ; eax = 0x6
[main] [INS] [0809c256] add      edx, 8                                              ; edx = 0x90000f20 -> 0
[main] [INS] [0809c259] mov      ebx, dword ptr [edi + ecx*8 + 4]                    ; ebx = 0x3
[main] [INS] [0809c25d] mov      ecx, dword ptr [edx - 0xc]                          ; ecx = 0x0
[main] [INS] [0809c260] lea      ebx, [ecx + ebx + 1]                                ; ebx = 0x4
[main] [INS] [0809c264] mov      dword ptr [edx - 0xc], ebx                          ; store(0x90000f14,0x4)
[main] [INS] [0809c267] test     esi, eax                                            ; 0x4 vs 0x6
[main] [INS] [0809c269] jne      0x809c250
[main] [INS] [0809c26b] test     eax, eax                                            ; 0x3 vs 0x3
[main] [INS] [0809c26d] jne      0x809c246
[main] [INS] [0809c26f] mov      ecx, dword ptr [ebp - 0x30]                         ; ecx = 0x2
[main] [INS] [0809c272] test     ecx, ecx                                            ; 0x2 vs 0x2
[main] [INS] [0809c274] je       0x809c27b
[main] [INS] [0809c276] sub      ecx, 1                                              ; ecx = 0x1
[main] [INS] [0809c279] jmp      0x809c230                                           ; jmp(0x809c230)
[main] [INS] [0809c27b] mov      eax, dword ptr [ebp - 0x40]                         ; eax = 0x8
[main] [INS] [0809c27e] movzx    ecx, byte ptr [ebp - 0x5c]                          ; ecx = 0x2
[main] [INS] [0809c282] mov      edi, 1                                              ; edi = 0x1
[main] [INS] [0809c287] lea      ebx, [eax - 2]                                      ; ebx = 0x6
[main] [INS] [0809c28a] mov      eax, dword ptr [ebp - 0x34]                         ; eax = 0x90000f10 -> 90000f50
[main] [INS] [0809c28d] shl      edi, cl                                             ; edi = 0x4
[main] [INS] [0809c28f] add      eax, 0x10                                           ; eax = 0x90000f20 -> 0
[main] [INS] [0809c292] cmp      edi, ebx                                            ; 0x4 vs 0x6
[main] [INS] [0809c294] je       0x809c2d4
[main] [INS] [0809c296] mov      edx, eax                                            ; edx = 0x90000f20 -> 0
[main] [INS] [0809c298] mov      ecx, ebx                                            ; ecx = 0x6
[main] [INS] [0809c29a] jmp      0x809c2b0                                           ; jmp(0x809c2b0)
[main] [INS] [0809c2b0] sub      ecx, 1                                              ; ecx = 0x5
[main] [INS] [0809c2b3] test     cl, 1                                               ; 0x5 vs 0x1
[main] [INS] [0809c2b6] jne      0x809c2a0
[main] [INS] [0809c2a0] mov      esi, dword ptr [edx - 0xc]                          ; esi = 0xa
[main] [INS] [0809c2a3] add      esi, dword ptr [edx - 0x10]                         ; esi = 0x90000f5a -> "tls/sse2"
[main] [INS] [0809c2a6] add      edx, 8                                              ; edx = 0x90000f28 -> 0
[main] [INS] [0809c2a9] mov      dword ptr [edx - 8], esi                            ; store(0x90000f20,0x90000f5a) -> "tls/sse2"
[main] [INS] [0809c2ac] cmp      edi, ecx                                            ; 0x4 vs 0x5
[main] [INS] [0809c2ae] je       0x809c2c5
[main] [INS] [0809c2b8] mov      esi, dword ptr [edx - 8]                            ; esi = 0x90000f5a -> "tls/sse2"
[main] [INS] [0809c2bb] add      edx, 8                                              ; edx = 0x90000f30 -> 0
[main] [INS] [0809c2be] mov      dword ptr [edx - 8], esi                            ; store(0x90000f28,0x90000f5a) -> "tls/sse2"
[main] [INS] [0809c2c1] cmp      edi, ecx                                            ; 0x4 vs 0x4
[main] [INS] [0809c2c3] jne      0x809c2b0
[main] [INS] [0809c2c5] mov      ecx, dword ptr [ebp - 0x40]                         ; ecx = 0x8
[main] [INS] [0809c2c8] lea      ebx, [edi + ebx + 2]                                ; ebx = 0xc
[main] [INS] [0809c2cc] sub      ebx, ecx                                            ; ebx = 0x4
[main] [INS] [0809c2ce] sub      ecx, edi                                            ; ecx = 0x4
[main] [INS] [0809c2d0] lea      eax, [eax + ecx*8 - 0x10]                           ; eax = 0x90000f30 -> 0
[main] [INS] [0809c2d4] movzx    ecx, byte ptr [ebp - 0x5c]                          ; ecx = 0x2
[main] [INS] [0809c2d8] mov      edx, 0xfffffff8                                     ; edx = 0xfffffff8
[main] [INS] [0809c2dd] mov      esi, dword ptr [ebp - 0x50]                         ; esi = 0x3
[main] [INS] [0809c2e0] shl      edx, cl                                             ; edx = 0xffffffe0
[main] [INS] [0809c2e2] add      esi, 1                                              ; esi = 0x4
[main] [INS] [0809c2e5] mov      ecx, edx                                            ; ecx = 0xffffffe0
[main] [INS] [0809c2e7] lea      esi, [esi]                                          ; esi = 0x4
[main] [INS] [0809c2ee] nop      
[main] [INS] [0809c2f0] mov      edx, dword ptr [eax + ecx]                          ; edx = 0x90000f50 -> "tls//sse"
[main] [INS] [0809c2f3] add      eax, 8                                              ; eax = 0x90000f38 -> 0
[main] [INS] [0809c2f6] add      edx, esi                                            ; edx = 0x90000f54 -> "/sse2/tl"
[main] [INS] [0809c2f8] mov      dword ptr [eax - 8], edx                            ; store(0x90000f30,0x90000f54) -> "/sse2/tl"
[main] [INS] [0809c2fb] sub      ebx, 1                                              ; ebx = 0x3
[main] [INS] [0809c2fe] jne      0x809c2f0
[main] [INS] [0809c300] mov      eax, dword ptr [ebp - 0x34]                         ; eax = 0x90000f10 -> 90000f50
[main] [INS] [0809c303] mov      edi, dword ptr [ebp + 0x14]                         ; edi = 0x80dafbc -> 0
[main] [INS] [0809c306] mov      eax, dword ptr [eax + 4]                            ; eax = 0xa
[main] [INS] [0809c309] mov      dword ptr [edi], eax                                ; store(0x80dafbc,0xa)
[main] [INS] [0809c30b] mov      eax, dword ptr [ebp - 0x34]                         ; eax = 0x90000f10 -> 90000f50
[main] [INS] [0809c30e] lea      esp, [ebp - 0xc]                                    ; esp = 0xff08ed1c -> 80db000
[main] [INS] [0809c311] pop      ebx                                                 ; ebx = 0x80db000 -> 0
[main] [INS] [0809c312] pop      esi                                                 ; esi = 0x1
[main] [INS] [0809c313] pop      edi                                                 ; edi = 0x80dcf74 -> 0
[main] [INS] [0809c314] pop      ebp                                                 ; ebp = 0xff08ed78 -> ff08eeac
[main] [INS] [0809c315] ret      
[main] [INS] [08096c17] mov      dword ptr [esp], 0x14                               ; store(0xff08ed30,0x14)
[main] [INS] [08096c1e] mov      dword ptr [ebx - 0x3c], eax                         ; store(0x80dafc4,0x90000f10) -> 90000f50
[main] [INS] [08096c24] call     0x805ce20                                           ; call(0x805ce20)
[main] [INS] [08096c29] add      esp, 0x10                                           ; esp = 0xff08ed40 -> 80b0285
[main] [INS] [08096c2c] mov      dword ptr [ebx - 0x4c], eax                         ; store(0x80dafb4,0x90000f70) -> 0
[main] [INS] [08096c32] test     eax, eax                                            ; 0x90000f70 vs 0x90000f70
[main] [INS] [08096c34] je       0x8096e45
[main] [INS] [08096c3a] mov      esi, dword ptr [ebx - 0x40]                         ; esi = 0x8
[main] [INS] [08096c40] mov      edi, eax                                            ; edi = 0x90000f70 -> 0
[main] [INS] [08096c42] mov      edx, 0xcccccccd                                     ; edx = 0xcccccccd
[main] [INS] [08096c47] sub      esp, 0xc                                            ; esp = 0xff08ed34 -> 0
[main] [INS] [08096c4a] lea      eax, [esi*4 + 0x27]                                 ; eax = 0x47
[main] [INS] [08096c51] mul      edx                                                 ; edx = 0x38
[main] [INS] [08096c53] shr      edx, 4                                              ; edx = 0x3
[main] [INS] [08096c56] lea      edx, [edx + edx*4]                                  ; edx = 0xf
[main] [INS] [08096c59] mov      eax, edx                                            ; eax = 0xf
[main] [INS] [08096c5b] mov      dword ptr [ebp - 0x1c], edx                         ; store(0xff08ed5c,0xf)
[main] [INS] [08096c5e] shl      eax, 4                                              ; eax = 0xf0
[main] [INS] [08096c61] push     eax                                                 ; push(0xf0)
[main] [INS] [08096c62] call     0x805ce20                                           ; call(0x805ce20)
[main] [INS] [08096c67] add      esp, 0x10                                           ; esp = 0xff08ed40 -> 80b0285
[main] [INS] [08096c6a] mov      edx, dword ptr [ebp - 0x1c]                         ; edx = 0xf
[main] [INS] [08096c6d] test     eax, eax                                            ; 0x90000f90 vs 0x90000f90
[main] [INS] [08096c6f] mov      dword ptr [edi], eax                                ; store(0x90000f70,0x90000f90) -> 0
[main] [INS] [08096c71] je       0x8096e76
[main] [INS] [08096c77] mov      ecx, 0x80dcf8c                                      ; ecx = 0x80dcf8c -> 0
[main] [INS] [08096c7d] shl      edx, 2                                              ; edx = 0x3c
[main] [INS] [08096c80] add      edi, 4                                              ; edi = 0x90000f74 -> 0
[main] [INS] [08096c83] mov      dword ptr [ebx - 0x48], 0                           ; store(0x80dafb8,0x0)
[main] [INS] [08096c8d] mov      dword ptr [ebp - 0x24], edx                         ; store(0xff08ed54,0x3c)
[main] [INS] [08096c90] neg      edx                                                 ; edx = 0xffffffc4
[main] [INS] [08096c92] mov      dword ptr [ecx], eax                                ; store(0x80dcf8c,0x90000f90) -> 0
[main] [INS] [08096c94] lea      ecx, [ebx - 0x1ce2f]                                ; ecx = 0x80be1d1 -> "system s"
[main] [INS] [08096c9a] mov      dword ptr [ebp - 0x28], ecx                         ; store(0xff08ed50,0x80be1d1) -> "system s"
[main] [INS] [08096c9d] mov      dword ptr [eax + 4], ecx                            ; store(0x90000f94,0x80be1d1) -> "system s"
[main] [INS] [08096ca0] lea      ecx, [ebx - 0x1c820]                                ; ecx = 0x80be7e0 -> "/lib/i38"
[main] [INS] [08096ca6] mov      dword ptr [eax + 0xc], ecx                          ; store(0x90000f9c,0x80be7e0) -> "/lib/i38"
[main] [INS] [08096ca9] lea      ecx, [ebx - 0x1c834]                                ; ecx = 0x80be7cc -> 14
[main] [INS] [08096caf] mov      dword ptr [eax + 8], 0                              ; store(0x90000f98,0x0)
[main] [INS] [08096cb6] mov      dword ptr [eax + 0x10], 0x14                        ; store(0x90000fa0,0x14)
[main] [INS] [08096cbd] mov      dword ptr [ebp - 0x2c], edx                         ; store(0xff08ed4c,0xffffffc4)
[main] [INS] [08096cc0] mov      dword ptr [ebp - 0x1c], edi                         ; store(0xff08ed5c,0x90000f74) -> 0
[main] [INS] [08096cc3] lea      edi, [ecx + 0xc]                                    ; edi = 0x80be7d8 -> 9
[main] [INS] [08096cc6] mov      dword ptr [ebp - 0x20], edi                         ; store(0xff08ed58,0x80be7d8) -> 9
[main] [INS] [08096cc9] lea      edi, [ebx - 0x1c80b]                                ; edi = 0x80be7f5 -> "/usr/lib"
[main] [INS] [08096ccf] xor      edx, edx                                            ; edx = 0x0
[main] [INS] [08096cd1] test     esi, esi                                            ; 0x8 vs 0x8
[main] [INS] [08096cd3] je       0x8096ce7
[main] [INS] [08096cd5] lea      esi, [esi]                                          ; esi = 0x8
[main] [INS] [08096cd8] mov      dword ptr [eax + edx*4 + 0x14], 0                   ; store(0x90000fa4,0x0)
[main] [INS] [08096ce0] add      edx, 1                                              ; edx = 0x1
[main] [INS] [08096ce3] cmp      esi, edx                                            ; 0x8 vs 0x1
[main] [INS] [08096ce5] jne      0x8096cd8
[main] [INS] [08096ce7] cmp      dword ptr [ebp - 0x20], ecx                         ; 0x80be7d8 vs 0x80be7cc
[main] [INS] [08096cea] je       0x8096d30
[main] [INS] [08096cec] mov      edx, dword ptr [ebp - 0x2c]                         ; edx = 0xffffffc4
[main] [INS] [08096cef] add      eax, dword ptr [ebp - 0x24]                         ; eax = 0x90000fcc -> 0
[main] [INS] [08096cf2] add      ecx, 4                                              ; ecx = 0x80be7d0 -> 18
[main] [INS] [08096cf5] add      dword ptr [ebp - 0x1c], 4                           ; store(0xff08ed5c,0x4)
[main] [INS] [08096cf9] mov      dword ptr [eax + edx], eax                          ; store(0x190000f90,0x90000fcc) -> 0
[main] [INS] [08096cfc] mov      edx, dword ptr [ebp - 0x1c]                         ; edx = 0x90000f78 -> 0
[main] [INS] [08096cff] mov      dword ptr [eax + 8], 0                              ; store(0x90000fd4,0x0)
[main] [INS] [08096d06] mov      dword ptr [edx - 4], eax                            ; store(0x90000f74,0x90000fcc) -> 0
[main] [INS] [08096d09] mov      edx, dword ptr [ebp - 0x28]                         ; edx = 0x80be1d1 -> "system s"
[main] [INS] [08096d0c] mov      dword ptr [eax + 0xc], edi                          ; store(0x90000fd8,0x80be7f5) -> "/usr/lib"
[main] [INS] [08096d0f] mov      dword ptr [eax + 4], edx                            ; store(0x90000fd0,0x80be1d1) -> "system s"
[main] [INS] [08096d12] mov      edx, dword ptr [ecx]                                ; edx = 0x18
[main] [INS] [08096d14] cmp      byte ptr [edi], 0x2f                                ; 0x2f vs 0x2f
[main] [INS] [08096d17] mov      dword ptr [eax + 0x10], edx                         ; store(0x90000fdc,0x18)
[main] [INS] [08096d1a] lea      edx, [edi + edx + 1]                                ; edx = 0x80be80e -> "/lib/"
[main] [INS] [08096d1e] jne      0x8096e57
[main] [INS] [08096d24] mov      edi, edx                                            ; edi = 0x80be80e -> "/lib/"
[main] [INS] [08096d26] jmp      0x8096ccf                                           ; jmp(0x8096ccf)
[main] [INS] [08096d30] mov      dword ptr [eax], 0                                  ; store(0x90001044,0x0)
[main] [INS] [08096d36] mov      eax, dword ptr [ebp - 0x1c]                         ; eax = 0x90000f80 -> 0
[main] [INS] [08096d39] mov      dword ptr [ebx + 0x1a64], 0x18                      ; store(0x80dca64,0x18)
[main] [INS] [08096d43] mov      dword ptr [eax], 0                                  ; store(0x90000f80,0x0)
[main] [INS] [08096d49] mov      eax, dword ptr [ebp + 8]                            ; eax = 0x0
[main] [INS] [08096d4c] test     eax, eax                                            ; 0x0 vs 0x0
[main] [INS] [08096d4e] je       0x8096d58
[main] [INS] [08096d58] mov      dword ptr [ebx - 0x38], 0xffffffff                  ; store(0x80dafc8,0xffffffff)
[main] [INS] [08096d62] lea      esp, [ebp - 0xc]                                    ; esp = 0xff08ed6c -> 80db000
[main] [INS] [08096d65] pop      ebx                                                 ; ebx = 0x80db000 -> 0
[main] [INS] [08096d66] pop      esi                                                 ; esi = 0x1
[main] [INS] [08096d67] pop      edi                                                 ; edi = 0x80dcf74 -> 0
[main] [INS] [08096d68] pop      ebp                                                 ; ebp = 0xff08eeac -> ff08ef6d
[main] [INS] [08096d69] ret      
[main] [INS] [0806feb8] mov      eax, 0x80dcf8c                                      ; eax = 0x80dcf8c -> 90000f90
[main] [INS] [0806febe] mov      edx, dword ptr [eax]                                ; edx = 0x90000f90 -> 90000fcc
[main] [INS] [0806fec0] mov      eax, 0x80dcf78                                      ; eax = 0x80dcf78 -> 0
[main] [INS] [0806fec6] mov      dword ptr [eax], edx                                ; store(0x80dcf78,0x90000f90) -> 90000fcc
[main] [INS] [0806fec8] lea      eax, [ebx - 0x2ad6b]                                ; eax = 0x80b0295 -> "LD_BIND_"
[main] [INS] [0806fece] mov      dword ptr [esp], eax                                ; store(0xff08ed80,0x80b0295) -> "LD_BIND_"
[main] [INS] [0806fed1] call     0x804fa60                                           ; call(0x804fa60)
[main] [INS] [0806fed6] add      esp, 0x10                                           ; esp = 0xff08ed90 -> 80dcf74
[main] [INS] [0806fed9] mov      edx, 1                                              ; edx = 0x1
[main] [INS] [0806fede] test     eax, eax                                            ; 0x0 vs 0x0
[main] [INS] [0806fee0] je       0x806feea
[main] [INS] [0806feea] mov      eax, 0x80dcf54                                      ; eax = 0x80dcf54 -> 0
[main] [INS] [0806fef0] sub      esp, 0xc                                            ; esp = 0xff08ed84 -> ff08eea4
[main] [INS] [0806fef3] mov      dword ptr [eax], edx                                ; store(0x80dcf54,0x1)
[main] [INS] [0806fef5] lea      eax, [ebx - 0x2ad5f]                                ; eax = 0x80b02a1 -> "LD_BIND_"
[main] [INS] [0806fefb] push     eax                                                 ; push(0x80b02a1) -> "LD_BIND_"
[main] [INS] [0806fefc] call     0x804fa60                                           ; call(0x804fa60)
[main] [INS] [0806ff01] add      esp, 0x10                                           ; esp = 0xff08ed90 -> 80dcf74
[main] [INS] [0806ff04] xor      edx, edx                                            ; edx = 0x0
[main] [INS] [0806ff06] test     eax, eax                                            ; 0x0 vs 0x0
[main] [INS] [0806ff08] je       0x806ff12
[main] [INS] [0806ff12] mov      eax, 0x80dcf40                                      ; eax = 0x80dcf40 -> 0
[main] [INS] [0806ff18] sub      esp, 0xc                                            ; esp = 0xff08ed84 -> ff08eea4
[main] [INS] [0806ff1b] mov      dword ptr [eax], edx                                ; store(0x80dcf40,0x0)
[main] [INS] [0806ff1d] lea      eax, [ebx - 0x2ad53]                                ; eax = 0x80b02ad -> "LD_DYNAM"
[main] [INS] [0806ff23] push     eax                                                 ; push(0x80b02ad) -> "LD_DYNAM"
[main] [INS] [0806ff24] call     0x804fa60                                           ; call(0x804fa60)
[main] [INS] [0806ff29] add      esp, 0x10                                           ; esp = 0xff08ed90 -> 80dcf74
[main] [INS] [0806ff2c] mov      edx, 1                                              ; edx = 0x1
[main] [INS] [0806ff31] test     eax, eax                                            ; 0x0 vs 0x0
[main] [INS] [0806ff33] je       0x806ff3d
[main] [INS] [0806ff3d] mov      eax, 0x80dcf70                                      ; eax = 0x80dcf70 -> 0
[main] [INS] [0806ff43] sub      esp, 0xc                                            ; esp = 0xff08ed84 -> ff08eea4
[main] [INS] [0806ff46] mov      dword ptr [eax], edx                                ; store(0x80dcf70,0x1)
[main] [INS] [0806ff48] lea      eax, [ebx - 0x2ad43]                                ; eax = 0x80b02bd -> "LD_PROFI"
[main] [INS] [0806ff4e] push     eax                                                 ; push(0x80b02bd) -> "LD_PROFI"
[main] [INS] [0806ff4f] call     0x804fa60                                           ; call(0x804fa60)
[main] [INS] [0806ff54] mov      ecx, 0x80dcf20                                      ; ecx = 0x80dcf20 -> 0
[main] [INS] [0806ff5a] add      esp, 0x10                                           ; esp = 0xff08ed90 -> 80dcf74
[main] [INS] [0806ff5d] mov      dword ptr [ecx], eax                                ; store(0x80dcf20,0x0)
[main] [INS] [0806ff5f] test     eax, eax                                            ; 0x0 vs 0x0
[main] [INS] [0806ff61] je       0x80701d0
[main] [INS] [080701d0] mov      eax, 0x80dadac                                      ; eax = 0x80dadac -> 0
[main] [INS] [080701d6] mov      edx, dword ptr [eax]                                ; edx = 0x0
[main] [INS] [080701d8] jmp      0x806ff74                                           ; jmp(0x806ff74)
[main] [INS] [0806ff74] test     edx, edx                                            ; 0x0 vs 0x0
[main] [INS] [0806ff76] lea      eax, [ebx - 0x2b084]                                ; eax = 0x80aff7c -> "/var/tmp"
[main] [INS] [0806ff7c] lea      esi, [ebx - 0x2b07b]                                ; esi = 0x80aff85 -> "/var/pro"
[main] [INS] [0806ff82] cmovne   eax, esi                                            ; eax = 0x80aff7c -> "/var/tmp"
[main] [INS] [0806ff85] mov      dword ptr [ecx], eax                                ; store(0x80dcf20,0x80aff7c) -> "/var/tmp"
[main] [INS] [0806ff87] test     edx, edx                                            ; 0x0 vs 0x0
[main] [INS] [0806ff89] je       0x806ffbd
[main] [INS] [0806ffbd] mov      eax, 0x80dcf48                                      ; eax = 0x80dcf48 -> 80ad041
[main] [INS] [0806ffc3] mov      dword ptr [esp + 4], eax                            ; store(0xff08ed94,0x80dcf48) -> 80ad041
[main] [INS] [0806ffc7] mov      eax, dword ptr [eax]                                ; eax = 0x80ad041 -> "i686"
[main] [INS] [0806ffc9] test     eax, eax                                            ; 0x80ad041 vs 0x80ad041
[main] [INS] [0806ffcb] je       0x806ffd6
[main] [INS] [0806ffcd] cmp      byte ptr [eax], 0                                   ; 0x69 vs 0x0
[main] [INS] [0806ffd0] je       0x8070170
[main] [INS] [0806ffd6] sub      esp, 0xc                                            ; esp = 0xff08ed84 -> ff08eea4
[main] [INS] [0806ffd9] lea      eax, [ebx - 0x2ad31]                                ; eax = 0x80b02cf -> "LD_ASSUM"
[main] [INS] [0806ffdf] push     eax                                                 ; push(0x80b02cf) -> "LD_ASSUM"
[main] [INS] [0806ffe0] call     0x804fa60                                           ; call(0x804fa60)
[main] [INS] [0806b605] inc      eax                                                 ; eax = 0x80b02df -> 666e6900
[main] [INS] [0806ffe5] add      esp, 0x10                                           ; esp = 0xff08ed90 -> 80dcf74
[main] [INS] [0806ffe8] mov      ebp, eax                                            ; ebp = 0x0
[main] [INS] [0806ffea] test     eax, eax                                            ; 0x0 vs 0x0
[main] [INS] [0806ffec] je       0x807009e
[main] [INS] [0807009e] mov      eax, dword ptr [esp + 4]                            ; eax = 0x80dcf48 -> 80ad041
[main] [INS] [080700a2] mov      eax, dword ptr [eax]                                ; eax = 0x80ad041 -> "i686"
[main] [INS] [080700a4] test     eax, eax                                            ; 0x80ad041 vs 0x80ad041
[main] [INS] [080700a6] je       0x80700bc
[main] [INS] [080700a8] sub      esp, 0xc                                            ; esp = 0xff08ed84 -> ff08eea4
[main] [INS] [080700ab] push     eax                                                 ; push(0x80ad041) -> "i686"
[main] [INS] [080700ac] call     0x806b550                                           ; call(0x806b550)
[main] [INS] [080700b1] mov      edx, 0x80dcf24                                      ; edx = 0x80dcf24 -> 0
[main] [INS] [080700b7] add      esp, 0x10                                           ; esp = 0xff08ed90 -> 80dcf74
[main] [INS] [080700ba] mov      dword ptr [edx], eax                                ; store(0x80dcf24,0x4)
[main] [INS] [080700bc] mov      eax, dword ptr [esp + 8]                            ; eax = 0x80dcf60 -> 8048034
[main] [INS] [080700c0] mov      ecx, dword ptr [eax]                                ; ecx = 0x8048034 -> 1
[main] [INS] [080700c2] test     ecx, ecx                                            ; 0x8048034 vs 0x8048034
[main] [INS] [080700c4] je       0x8070101
[main] [INS] [080700c6] mov      eax, dword ptr [esp + 0xc]                          ; eax = 0x80dcf80 -> 8
[main] [INS] [080700ca] mov      esi, dword ptr [eax]                                ; esi = 0x8
[main] [INS] [080700cc] test     esi, esi                                            ; 0x8 vs 0x8
[main] [INS] [080700ce] je       0x8070101
[main] [INS] [080700d0] xor      edx, edx                                            ; edx = 0x0
[main] [INS] [080700d2] cmp      dword ptr [ecx], 0x6474e551                         ; 0x1 vs 0x6474e551
[main] [INS] [080700d8] lea      eax, [ecx + 0x20]                                   ; eax = 0x8048054 -> 1
[main] [INS] [080700db] jne      0x80700fa
[main] [INS] [080700fa] add      edx, 1                                              ; edx = 0x1
[main] [INS] [080700fd] cmp      edx, esi                                            ; 0x1 vs 0x8
[main] [INS] [080700ff] jne      0x80700e8
[main] [INS] [080700e8] mov      ecx, eax                                            ; ecx = 0x8048054 -> 1
[main] [INS] [080700ea] add      eax, 0x20                                           ; eax = 0x8048074 -> 1
[main] [INS] [080700ed] cmp      dword ptr [eax - 0x20], 0x6474e551                  ; 0x1 vs 0x6474e551
[main] [INS] [080700f4] je       0x80701b8
[main] [INS] [080701b8] mov      eax, dword ptr [ecx + 0x18]                         ; eax = 0x6
[main] [INS] [080701bb] mov      dword ptr [ebx + 0x9e0], eax                        ; store(0x80db9e0,0x6)
[main] [INS] [080701c1] add      esp, 0x2c                                           ; esp = 0xff08edbc -> 80db000
[main] [INS] [080701c4] pop      ebx                                                 ; ebx = 0x80db000 -> 0
[main] [INS] [080701c5] pop      esi                                                 ; esi = 0x1
[main] [INS] [080701c6] pop      edi                                                 ; edi = 0xff08eea4 -> ff08ef39
[main] [INS] [080701c7] pop      ebp                                                 ; ebp = 0xff08eeac -> ff08ef6d
[main] [INS] [080701c8] ret      
[main] [INS] [08071251] sub      esp, 4                                              ; esp = 0xff08edcc -> "Q"
[main] [INS] [08071254] push     ebp                                                 ; push(0xff08eeac) -> ff08ef6d
[main] [INS] [08071255] push     edi                                                 ; push(0xff08eea4) -> ff08ef39
[main] [INS] [08071256] push     esi                                                 ; push(0x1)
[main] [INS] [08071257] call     0x806eb50                                           ; call(0x806eb50)
[main] [INS] [0806eb50] <__init_misc>
[main] [INS] [0806eb50] push     edi                                                 ; push(0xff08eea4) -> ff08ef39
[main] [INS] [0806eb51] push     esi                                                 ; push(0x1)
[main] [INS] [0806eb52] push     ebx                                                 ; push(0x80db000) -> 0
[main] [INS] [0806eb53] mov      edi, dword ptr [esp + 0x14]                         ; edi = 0xff08eea4 -> ff08ef39
[main] [INS] [0806eb57] call     0x80499f0                                           ; call(0x80499f0)
[main] [INS] [0806eb5c] add      ebx, 0x6c4a4                                        ; ebx = 0x80db000 -> 0
[main] [INS] [0806eb62] test     edi, edi                                            ; 0xff08eea4 vs 0xff08eea4
[main] [INS] [0806eb64] je       0x806eb90
[main] [INS] [0806eb66] mov      esi, dword ptr [edi]                                ; esi = 0xff08ef39 -> "/home/ad"
[main] [INS] [0806eb68] test     esi, esi                                            ; 0xff08ef39 vs 0xff08ef39
[main] [INS] [0806eb6a] je       0x806eb90
[main] [INS] [0806eb6c] sub      esp, 8                                              ; esp = 0xff08eda8 -> 0
[main] [INS] [0806eb6f] push     0x2f                                                ; push(0x2f)
[main] [INS] [0806eb71] push     esi                                                 ; push(0xff08ef39) -> "/home/ad"
[main] [INS] [0806eb72] call     0x8049050                                           ; call(0x8049050)
[main] [INS] [08049050] jmp      dword ptr [0x80db01c]                               ; jmp(0x8091510)
[main] [INS] [08091510] <__strrchr_sse2_bsf>
[main] [INS] [08091510] mov      ecx, dword ptr [esp + 4]                            ; ecx = 0xff08ef39 -> "/home/ad"
[main] [INS] [08091514] movd     xmm1, dword ptr [esp + 8]                           ; xmm1 = 0x2f
[main] [INS] [0809151a] push     edi                                                 ; push(0xff08eea4) -> ff08ef39
[main] [INS] [0809151b] pxor     xmm2, xmm2                                          ; xmm2 = 0x0
[main] [INS] [0809151f] mov      edi, ecx                                            ; edi = 0xff08ef39 -> "/home/ad"
[main] [INS] [08091521] punpcklbw xmm1, xmm1                                         ; xmm1 = 0x2f2f
[main] [INS] [08091525] punpcklbw xmm1, xmm1                                         ; xmm1 = 0x2f2f2f2f
[main] [INS] [08091529] and      ecx, 0x3f                                           ; ecx = 0x39
[main] [INS] [0809152c] cmp      ecx, 0x30                                           ; 0x39 vs 0x30
[main] [INS] [0809152f] pshufd   xmm1, xmm1, 0
[main] [INS] [08091534] ja       0x80915b0
[main] [INS] [080915b0] and      ecx, 0xf                                            ; ecx = 0x9
[main] [INS] [080915b3] and      edi, 0xfffffff0                                     ; edi = 0xff08ef30 -> 0
[main] [INS] [080915b6] pxor     xmm3, xmm3                                          ; xmm3 = 0x0
[main] [INS] [080915ba] movdqa   xmm0, xmmword ptr [edi]                             ; xmm0 = 0x612f656d6f682f000000000000000000
[main] [INS] [080915be] pcmpeqb  xmm3, xmm0                                          ; xmm3 = 0xffffffffffffffffff
[main] [INS] [080915c2] pcmpeqb  xmm0, xmm1                                          ; xmm0 = 0xff00000000ff000000000000000000
[main] [INS] [080915c6] pmovmskb edx, xmm3                                           ; edx = 0x1ff
[main] [INS] [080915ca] pmovmskb eax, xmm0                                           ; eax = 0x4200
[main] [INS] [080915ce] shr      edx, cl                                             ; edx = 0x0
[main] [INS] [080915d0] shr      eax, cl                                             ; eax = 0x21
[main] [INS] [080915d2] test     eax, eax                                            ; 0x21 vs 0x21
[main] [INS] [080915d4] jne      0x8091610
[main] [INS] [08091610] test     edx, edx                                            ; 0x0 vs 0x0
[main] [INS] [08091612] jne      0x80915f0
[main] [INS] [08091614] push     esi                                                 ; push(0xff08ef39) -> "/home/ad"
[main] [INS] [08091615] push     ebx                                                 ; push(0x80db000) -> 0
[main] [INS] [08091616] mov      ebx, eax                                            ; ebx = 0x21
[main] [INS] [08091618] add      edi, 0x10                                           ; edi = 0xff08ef40 -> "dmin/zel"
[main] [INS] [0809161b] lea      esi, [edi + ecx]                                    ; esi = 0xff08ef49 -> "s_dir/te"
[main] [INS] [0809161e] nop      
[main] [INS] [08091620] movdqa   xmm0, xmmword ptr [edi]                             ; xmm0 = 0x742f7269645f736f6c657a2f6e696d64
[main] [INS] [08091624] pcmpeqb  xmm2, xmm0                                          ; xmm2 = 0x0
[main] [INS] [08091628] add      edi, 0x10                                           ; edi = 0xff08ef50 -> "est.stat"
[main] [INS] [0809162b] pcmpeqb  xmm0, xmm1                                          ; xmm0 = 0xff000000000000000000ff00000000
[main] [INS] [0809162f] pmovmskb ecx, xmm2                                           ; ecx = 0x0
[main] [INS] [08091633] pmovmskb eax, xmm0                                           ; eax = 0x4010
[main] [INS] [08091637] or       ecx, eax                                            ; ecx = 0x4010
[main] [INS] [08091639] jne      0x809168c
[main] [INS] [0809168c] test     eax, eax                                            ; 0x4010 vs 0x4010
[main] [INS] [0809168e] jne      0x80916a0
[main] [INS] [080916a0] pmovmskb ecx, xmm2                                           ; ecx = 0x0
[main] [INS] [080916a4] test     ecx, ecx                                            ; 0x0 vs 0x0
[main] [INS] [080916a6] jne      0x80916c0
[main] [INS] [080916a8] mov      ebx, eax                                            ; ebx = 0x4010
[main] [INS] [080916aa] mov      esi, edi                                            ; esi = 0xff08ef50 -> "est.stat"
[main] [INS] [080916ac] jmp      0x8091620                                           ; jmp(0x8091620)
[main] [INS] [0809163b] movdqa   xmm0, xmmword ptr [edi]                             ; xmm0 = 0x4548530064656b6361702e3638782e6e
[main] [INS] [0809163f] pcmpeqb  xmm2, xmm0                                          ; xmm2 = 0xff000000000000000000000000
[main] [INS] [08091643] add      edi, 0x10                                           ; edi = 0xff08ef70 -> "LL=bin/b"
[main] [INS] [08091646] pcmpeqb  xmm0, xmm1                                          ; xmm0 = 0x0
[main] [INS] [0809164a] pmovmskb ecx, xmm2                                           ; ecx = 0x1000
[main] [INS] [0809164e] pmovmskb eax, xmm0                                           ; eax = 0x0
[main] [INS] [08091652] or       ecx, eax                                            ; ecx = 0x1000
[main] [INS] [08091654] jne      0x809168c
[main] [INS] [08091690] test     ebx, ebx                                            ; 0x4010 vs 0x4010
[main] [INS] [08091692] je       0x80916f0
[main] [INS] [08091694] bsr      eax, ebx                                            ; eax = 0xe
[main] [INS] [08091697] add      eax, esi                                            ; eax = 0xff08ef5e -> "ian.x86."
[main] [INS] [08091699] pop      ebx                                                 ; ebx = 0x80db000 -> 0
[main] [INS] [0809169a] pop      esi                                                 ; esi = 0xff08ef39 -> "/home/ad"
[main] [INS] [0809169b] sub      eax, 0x10                                           ; eax = 0xff08ef4e -> "/test.st"
[main] [INS] [0809169e] pop      edi                                                 ; edi = 0xff08eea4 -> ff08ef39
[main] [INS] [0809169f] ret      
[main] [INS] [0806eb77] add      esp, 0x10                                           ; esp = 0xff08edb0 -> 80db000
[main] [INS] [0806eb7a] lea      edx, [eax + 1]                                      ; edx = 0xff08ef4f -> "test.sta"
[main] [INS] [0806eb7d] test     eax, eax                                            ; 0xff08ef4e vs 0xff08ef4e
[main] [INS] [0806eb7f] cmovne   esi, edx                                            ; esi = 0xff08ef4f -> "test.sta"
[main] [INS] [0806eb82] mov      dword ptr [ebx + 0x9a4], esi                        ; store(0x80db9a4,0xff08ef4f) -> "test.sta"
[main] [INS] [0806eb88] mov      eax, dword ptr [edi]                                ; eax = 0xff08ef39 -> "/home/ad"
[main] [INS] [0806eb8a] mov      dword ptr [ebx + 0x9a8], eax                        ; store(0x80db9a8,0xff08ef39) -> "/home/ad"
[main] [INS] [0806eb90] pop      ebx                                                 ; ebx = 0x80db000 -> 0
[main] [INS] [0806eb91] pop      esi                                                 ; esi = 0x1
[main] [INS] [0806eb92] pop      edi                                                 ; edi = 0xff08eea4 -> ff08ef39
[main] [INS] [0806eb93] ret      
[main] [INS] [0807125c] call     0x807c130                                           ; call(0x807c130)
[main] [INS] [0807c130] <__ctype_init>
[main] [INS] [0807c130] call     0x8049b81                                           ; call(0x8049b81)
[main] [INS] [0807c135] add      eax, 0x5eecb                                        ; eax = 0x80db000 -> 0
[main] [INS] [0807c13a] push     ebx                                                 ; push(0x80db000) -> 0
[main] [INS] [0807c13b] mov      edx, 0xffffffd0                                     ; edx = 0xffffffd0
[main] [INS] [0807c141] mov      ebx, 0xfffffff8                                     ; ebx = 0xfffffff8
[main] [INS] [0807c147] mov      edx, dword ptr gs:[edx]                             ; edx = 0x1e1ba8b6
Missing memory at 0x1e1ba8b6, IP = 0x807c14a data size = 4, data value = 0x0
[main] [INS] [*0807c14a] mov      edx, dword ptr [edx]                                ; edx = 0x1e1ba8b6
[main] [INS] [*0807c14a] mov      edx, dword ptr [edx]                                ; edx = 0x1e1ba8b6
[main] [INS] [0807c14c] mov      ecx, dword ptr [edx + 0x24]                         ; ecx = 0x1000
[main] [INS] [0807c14f] add      ecx, 0x100                                          ; ecx = 0x1000
[main] [INS] [0807c155] mov      dword ptr gs:[ebx], ecx                             ; store(0xfffffff8,0x1000)
[main] [INS] [0807c158] mov      ecx, dword ptr [edx + 0x28]                         ; ecx = 0x1000
